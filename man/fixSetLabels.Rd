% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-fix-set-labels.R
\name{fixSetLabels}
\alias{fixSetLabels}
\title{Fix Set labels for legibility}
\usage{
fixSetLabels(
  x,
  wrap = TRUE,
  width = 40,
  maxNchar = Inf,
  suffix = "...",
  nodeType = c("Set", "Gene", "any"),
  do_abbreviations = TRUE,
  adjustCase = TRUE,
  lowercaseAll = TRUE,
  removeGrep = "^(KEGG|PID|REACTOME|BIOCARTA|NABA|SA|SIG|ST|WP)[_. ]",
  words_from = c("als", "ii", "iii", "iv", "v", "vi", "Vii", "Viii", "ix", "x", "trna",
    "rrna", "rna", "dna", "mirna", "mrna", "snrna", "snorna", "scrna", "lincrna", "Il",
    "Ecm", "Nk", "Pi3k.Akt", "Akt", "Pi3k", "tgf", "nfkb", "NK.Kappa.B", "C Jun",
    "C Fos", "Ap 1", "Apoe", "([AG])tpase", "Kras", "Uv", "([TB]|NK) Cell"),
  words_to = c("ALS", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "tRNA",
    "rRNA", "RNA", "DNA", "miRNA", "mRNA", "snRNA", "snoRNA", "scRNA", "lincRNA", "IL",
    "ECM", "NK", "PI3K/AKT", "AKT", "PI3K", "TGF", "NFKB", "NFKB", "C-jun", "C-fos",
    "AP-1", "APOE", "\\\\1TPase", "KRAS", "UV", "\\\\1-cell"),
  add_from = NULL,
  add_to = NULL,
  abbrev_from = c("Extracellular.Matrix", "Mitochondri(um|a|al)", "Interferon",
    "Subsequent", "Signaling (pathway|system)", "Of The", "^Signaling by ",
    " Pathway[s]*$"),
  abbrev_to = c("ECM", "Mito", "IFN", "Signaling", "Of", "", "", ""),
  ...
)
}
\arguments{
\item{x}{any of the following objects:
\itemize{
\item \code{character} vector
\item \code{igraph} object. The \code{V(g)$name} attribute is used as the input,
and the resulting label is then stored as \code{V(g)$label}.
}}

\item{wrap}{\code{logical} indicating whether to apply word wrap, based upon
the supplied \code{width} argument.}

\item{width}{integer value used when \code{wrap=TRUE}, it is sent to
\code{base::strwrap()}.}

\item{maxNchar}{\code{numeric} value or \code{Inf} to limit the maximum characters
allowed for each string. This option is preferred when \code{wrap=TRUE}
is not feasible, for example heatmap labels. When \code{NULL} or \code{Inf}
no limit is applied. See \code{base::nchar()}.}

\item{suffix}{\code{character} value, default \code{"..."}, used
when \code{maxNchar} is below \code{Inf}.
When a string is shortened to \code{maxNchar}, the \code{suffix} helps indicate
that there was additional text.}

\item{nodeType}{\code{character} string ussed when \code{x} is \code{igraph},
to limit changes to nodes by attribute values in \code{"nodeType"}.
Use \code{"any"} or \code{NULL} to affect all nodes.}

\item{do_abbreviations}{\code{logical}, default TRUE, whether to apply
\verb{abbrev_from,abbrev_to}. These patterns are intended specifically
to help shorten a long phrase, possibly removing words, or using
common abbreviations.}

\item{adjustCase}{\code{logical}, default TRUE,  indicating whether to
adjust the uppercase and lowercase lettering by calling
\code{jamba::ucfirst()}. The default sets all characters to lowercase,
then applies uppercase to the first letter of each word.}

\item{lowercaseAll}{\code{logical} used only when \code{adjustCase=TRUE},
passed to \code{jamba::ucfirst()}}

\item{removeGrep}{\code{character} regular expression pattern used to remove
patterns from the resulting label.
\itemize{
\item The default removes common canonical pathway source prefix terms
use in MSigDB data, for example KEGG, BIOCARTA, PID, etc.
Use \code{""} or \code{NULL} to skip this step.
\item Multiple values can be defined, they are applied in order.
}}

\item{words_from, words_to}{\code{character} vectors of pattern, replacement,
respectively. The pattern is matched in case-insensitive manner,
with case-sensitive replacements where applicable.
It uses perl-based regular expression matching with
\code{base::gsub()}, so that the expression \verb{\\\\b} can be used
to enforce a word boundary, either via delimiter, whitespace, or
the end of the string.}

\item{add_from, add_to}{\code{character} vectors used in addition to
\code{words_from},\code{words_to}.
\itemize{
\item These values are applied after \code{words_from},\code{words_to}, so that
user-defined replacements have priority.
}}

\item{abbrev_from, abbrev_to}{\code{character} vectors used when
\code{do_abbreviations=TRUE}. These defaults are "opinionated",
they are intended to shorten common phrases which do not
seem critical to understanding the meaning of most biological
pathways.
Some abbreviations are used for relatively common phrases
and terms, for which the abbreviation seems to be unambiguous
and fairly widely recognized.
Examples:
\itemize{
\item "Extracellular Matrix" becomes "ECM"
\item "Mitochondrial" becomes "Mito"
\item " Pathway" at the end of a phrase is removed, as it is not
required to understand the rest of the label.
\item "Signaling by " at the start of a phrase is removed, as
it also is not typically necessary to understand the label.
}}

\item{...}{additional arguments are passed to \code{jamba::ucfirst(x, ...)},
for example \code{firstWordOnly=TRUE} will capitalize only the first word.}
}
\value{
vector or igraph object, to match the input \code{x}.
}
\description{
Fix Set labels for legibility
}
\details{
This function is a convenient wrapper for several steps that edit
gene set and pathways labels to be slightly more legible. It
operates on either a character vector, or an igraph object.
\itemize{
\item To use custom from,to replacements, along with the default replacements,
supply the custom replacements with arguments \code{add_from},\code{add_to}.
\item To use custom from,to replacements, without applying the defaults,
supply the custom replacements with arguments \code{words_from},\code{words_to}.
}
}
\examples{
x <- c("KEGG_INSULIN_SIGNALING_PATHWAY",
   "KEGG_T_CELL_RECEPTOR_SIGNALING_PATHWAY",
   "KEGG_NEUROTROPHIN_SIGNALING_PATHWAY");
fixSetLabels(x);
fixSetLabels(x, do_abbreviations=FALSE);

jamba::nullPlot();
jamba::drawLabels(txt=x,
   preset=c("top", "center", "bottom"));

}
\seealso{
Other jam igraph functions: 
\code{\link{cnet2df}()},
\code{\link{cnet2im}()},
\code{\link{cnetplotJam}()},
\code{\link{cnetplot_internalJam}()},
\code{\link{color_edges_by_nodegroups}()},
\code{\link{color_edges_by_nodes_deprecated}()},
\code{\link{color_edges_by_nodes}()},
\code{\link{color_nodes_by_nodegroups}()},
\code{\link{communities2nodegroups}()},
\code{\link{drawEllipse}()},
\code{\link{edge_bundle_bipartite}()},
\code{\link{edge_bundle_nodegroups}()},
\code{\link{enrichMapJam}()},
\code{\link{flip_edges}()},
\code{\link{get_bipartite_nodeset}()},
\code{\link{igraph2pieGraph}()},
\code{\link{jam_igraph}()},
\code{\link{jam_plot_igraph}()},
\code{\link{label_communities}()},
\code{\link{layout_with_qfrf}()},
\code{\link{layout_with_qfr}()},
\code{\link{mem2emap}()},
\code{\link{memIM2cnet}()},
\code{\link{mem_multienrichplot}()},
\code{\link{nodegroups2communities}()},
\code{\link{rectifyPiegraph}()},
\code{\link{relayout_with_qfr}()},
\code{\link{removeIgraphBlanks}()},
\code{\link{removeIgraphSinglets}()},
\code{\link{reorderIgraphNodes}()},
\code{\link{rotate_igraph_layout}()},
\code{\link{spread_igraph_labels}()},
\code{\link{subgraph_jam}()},
\code{\link{subsetCnetIgraph}()},
\code{\link{subset_igraph_components}()},
\code{\link{sync_igraph_communities}()},
\code{\link{with_qfr}()}
}
\concept{jam igraph functions}
