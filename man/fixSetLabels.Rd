% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-base.r
\name{fixSetLabels}
\alias{fixSetLabels}
\title{Fix Set labels for legibility}
\usage{
fixSetLabels(
  x,
  wrap = TRUE,
  width = 25,
  maxNchar = Inf,
  suffix = "...",
  nodeType = c("Set", "Gene", "any"),
  adjustCase = TRUE,
  removeGrep = "^(KEGG|PID|REACTOME|BIOCARTA|NABA|SA|SIG|ST)[_.]",
  words_from = c("als", "ii", "iii", "iv", "v", "tgf", "nfkb", "trna", "rrna", "mirna",
    "mrna", "snrna", "snorna", "scrna", "lincrna"),
  words_to = c("ALS", "II", "III", "IV", "V", "TGF", "NFKB", "tRNA", "rRNA", "miRNA",
    "mRNA", "snRNA", "snoRNA", "scRNA", "lincRNA"),
  ...
)
}
\arguments{
\item{x}{character vector, or \code{igraph} object. When an \code{igraph}
object is supplied, the \code{V(g)$name} attribute is used as the
basis of generating a label, which is then stored as \code{V(g)$label}.}

\item{wrap}{logical indicating whether to apply word wrap, based upon
the supplied \code{width} argument.}

\item{width}{integer value used when \code{wrap=TRUE}, it is sent to
\code{base::strwrap()}.}

\item{maxNchar}{numeric value or \code{Inf} to limit the maximum characters
allowed for each string. This option is preferred when \code{wrap=TRUE}
is not feasible, for example heatmap labels. When \code{NULL} or \code{Inf}
no limit is applied. See \code{base::nchar()}.}

\item{suffix}{character value used as a suffix when \code{maxNchar} is used,
the string is shortened so that the shortened string and suffix
values are \code{maxNchar} characters long. It serves as an indicator
that the string label has been shortened.}

\item{nodeType}{character value compared to the vertex attribute
\code{"nodeType"} when the input \code{x} is an \code{igraph} object. This option
is used to restrict label changes to certain nodes. When \code{NULL} or
\code{nodeType="any"} then all node labels are updated.}

\item{adjustCase}{logical indicating whether to adjust the uppercase
and lowercase lettering.}

\item{removeGrep}{character regular expression pattern used to remove
patterns from the resulting label. The default values remove the
prefix used in MsigDB canonical pathway names, which is a prefix
indicating the source of each pathway.}

\item{words_from, words_to}{character vectors of words to match
in case-insensitive manner, to be replaced with fixed-case
alternatives. It uses perl-based regular expression matching
in \code{base::gsub()}, and the \verb{\\\\b} expression to enforce a
word boundary, either via delimiter, whitespace, or the end
of the string.}

\item{...}{additional arguments are ignored.}
}
\value{
vector or igraph object, to match the input \code{x}.
}
\description{
Fix Set labels for legibility
}
\details{
This function is a convenient wrapper for several steps that edit
gene set and pathways labels to be slightly more legible. It
operates on either a character vector, or an igraph object.
}
\examples{
x <- c("KEGG_INSULIN_SIGNALING_PATHWAY",
   "KEGG_T_CELL_RECEPTOR_SIGNALING_PATHWAY",
   "KEGG_NEUROTROPHIN_SIGNALING_PATHWAY");
fixSetLabels(x);

jamba::nullPlot();
jamba::drawLabels(txt=x,
   preset=c("top", "center", "bottom"));

}
\seealso{
Other jam igraph functions: 
\code{\link{cnet2df}()},
\code{\link{cnet2im}()},
\code{\link{cnetplotJam}()},
\code{\link{cnetplot_internalJam}()},
\code{\link{color_edges_by_nodegroups}()},
\code{\link{color_edges_by_nodes_deprecated}()},
\code{\link{color_edges_by_nodes}()},
\code{\link{color_nodes_by_nodegroups}()},
\code{\link{communities2nodegroups}()},
\code{\link{drawEllipse}()},
\code{\link{edge_bundle_bipartite}()},
\code{\link{edge_bundle_nodegroups}()},
\code{\link{enrichMapJam}()},
\code{\link{flip_edges}()},
\code{\link{get_bipartite_nodeset}()},
\code{\link{igraph2pieGraph}()},
\code{\link{jam_igraph}()},
\code{\link{jam_plot_igraph}()},
\code{\link{label_communities}()},
\code{\link{layout_with_qfrf}()},
\code{\link{layout_with_qfr}()},
\code{\link{mem2emap}()},
\code{\link{memIM2cnet}()},
\code{\link{mem_multienrichplot}()},
\code{\link{nodegroups2communities}()},
\code{\link{rectifyPiegraph}()},
\code{\link{relayout_with_qfr}()},
\code{\link{removeIgraphBlanks}()},
\code{\link{removeIgraphSinglets}()},
\code{\link{reorderIgraphNodes}()},
\code{\link{rotate_igraph_layout}()},
\code{\link{spread_igraph_labels}()},
\code{\link{subgraph_jam}()},
\code{\link{subsetCnetIgraph}()},
\code{\link{subset_igraph_components}()},
\code{\link{sync_igraph_communities}()},
\code{\link{with_qfr}()}
}
\concept{jam igraph functions}
