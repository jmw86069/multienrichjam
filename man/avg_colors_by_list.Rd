% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-utils.R
\name{avg_colors_by_list}
\alias{avg_colors_by_list}
\title{Average colors by list}
\usage{
avg_colors_by_list(
  x,
  useWeightedHue = TRUE,
  Cmethod = c("mean", "max", "min"),
  Lmethod = c("mean", "max", "min"),
  c_min = 4,
  grey_hue = 359,
  ...
)
}
\arguments{
\item{x}{\code{list} of character vectors.}

\item{useWeightedHue}{logical indicating whether to weight the
hue wheel using \code{colorjam::h2hw()} and \code{colorjam::hw2h()}
which effectively converts the RGB angles to RYB (red-yellow-blue),
and therefore makes additive color blending more sensible.
Specifically, "yellow and blue makes green".}

\item{...}{additional arguments are ignored.}
}
\value{
vector of R colors.
}
\description{
Average colors by list
}
\details{
This is a simple wrapper function intended to provide a rapid
average color, when supplied a list of color vectors in hex or
R color name format.

This function simply converts each color to HCL, determines the
color hue angle (from 0 to 360) then calculates the average angular
color hue using \code{avg_angles()}, then applies that to the maximum
C and L values to determine the new color. It is deliberately intended
to ignore muddiness when averaging multiple colors.

Colors are only modified for elements with 2 or more entries.

This method also only operates on the unique set of colors,
so it should be substantially more efficient on large lists that
contain only a few unique subsets of colors.
}
\examples{
x <- list(input1=c(red="red", blue="blue"),
   input2=c(blue="blue", gold="gold"),
   input3=c(red="red", yellow="yellow"));
x_avg <- avg_colors_by_list(x, useWeightedHue=TRUE);
jamba::showColors(list(
   input1=c(x[[1]], x_avg[1]),
   input2=c(x[[2]], x_avg[2]),
   input2=c(x[[3]], x_avg[3])),
   main="With weighted hue")

x_avg <- avg_colors_by_list(x, useWeightedHue=FALSE);
jamba::showColors(list(
   input1=c(x[[1]], x_avg[1]),
   input2=c(x[[2]], x_avg[2]),
   input2=c(x[[3]], x_avg[3])),
   main="Without weighted hue")

}
\seealso{
Other jam utility functions: 
\code{\link{avg_angles}()},
\code{\link{call_fn_ellipsis_deprecated}()},
\code{\link{cell_fun_bivariate}()},
\code{\link{collapse_mem_clusters}()},
\code{\link{colorRamp2D}()},
\code{\link{deconcat_df2}()},
\code{\link{display_colorRamp2D}()},
\code{\link{enrichList2geneHitList}()},
\code{\link{filter_mem_genes}()},
\code{\link{filter_mem_sets}()},
\code{\link{find_colname}()},
\code{\link{gsubs}()},
\code{\link{handle_igraph_param_list}()},
\code{\link{isColorBlank}()},
\code{\link{make_legend_bivariate}()},
\code{\link{make_point_hull}()},
\code{\link{mem_find_overlap}()},
\code{\link{order_colors}()},
\code{\link{rank_mem_clusters}()},
\code{\link{rotate_coordinates}()},
\code{\link{subgraph_jam}()},
\code{\link{subset_mem}()},
\code{\link{xyAngle}()}
}
\concept{jam utility functions}
