% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-apply-cnet-direction.R
\name{apply_cnet_direction}
\alias{apply_cnet_direction}
\title{Apply Cnet border color by directionality}
\usage{
apply_cnet_direction(
  cnet,
  hitim = NULL,
  col = circlize::colorRamp2(breaks = c(-1, 0, 1), colors = c("blue", "grey80",
    "firebrick3")),
  col_l_max = 80,
  hide_solo_pie = TRUE,
  frame_blank = default_igraph_values()$vertex$frame.color,
  frame_lwd_blank = 0.2,
  border_lwd = 2,
  do_reorder = FALSE,
  ...
)
}
\arguments{
\item{cnet}{\code{igraph} object with node attribute \code{"pie.color"}
populated as a \code{list} of \code{character} vectors, named by
enrichment. The enrichment names should match \code{colnames(hitim)}.}

\item{hitim}{\code{numeric} matrix with values centered at zero for
no change, positive values \code{+1} for up-regulation, and
negative values \code{-1} for down-regulation. The values are
converted to color using color function \code{col}.}

\item{col}{\code{function} that takes \code{numeric} input and assigns
a color. The default assigns red for positive values, blue
for negative values, and white for zero, using
\code{colorjam::col_div_xf(1.2)}.}

\item{col_l_max}{\code{numeric} maximum HCL Lightness permitted for
output colors, for example because the middle color in \code{"RdBu_r"}
is nearly white, it may be preferable to apply a darker grey
color.}

\item{hide_solo_pie}{\code{logical} indicating whether a single-color
border should only be applied to \code{"frame.color"} and not to
individual \code{"pie.border"} entries.
\itemize{
\item When \code{hide_solo_pie=TRUE} and all wedges (one or more) will
have the same \code{pie.border} color, then \code{pie.border} is defined
as \code{NA}, and instead the \code{frame.color} is assigned to this color.
Both \code{pie.lwd} and \code{frame.lwd} will be assigned \code{border_lwd},
since \code{pie.border} is \code{NA} it will not be rendered, only the
\code{frame.color} will be rendered.
\item When \code{hide_solo_pie=FALSE} each pie wedge border color is assigned
to \code{pie.border}, \code{frame.color} will be assigned \code{frame_blank},
and \code{frame.lwd} will be assigned \code{frame_lwd_blank} which is useful
for displaying a small outer frame for each node.
}}

\item{frame_blank}{\code{character} string to define the color used
for \code{"frame.color"} when colors are defined in \code{"pie.border"}.
In this case, the frame is drawn around the inner \code{pie.border}
colors, and only serves to add visual clarity. The frame border
can be blank (\code{frame_blank="transparent"}) or can be a thinner line,
controlled with \code{frame_lwd_blank=0.2}.
By default, the default igraph vertex \code{frame.color} is used,
defined by \code{default_igraph_values()$vertex$frame.color}.}

\item{frame_lwd_blank}{\code{numeric} line width for nodes that have "blank"
frame, which means the \code{pie.border} colors are defined. In this case
the frame border can be invisible (\code{frame_lwd_blank=0}) or
a very thin line (default \code{frame_lwd_blank=0.2}) to surround the
inner borders drawn with \code{pie.border}.}

\item{border_lwd}{\code{numeric} line width used whenever a node is matched
with \code{rownames(hitim)}. When the colors are applied to \code{pie.color},
the border is defined with \code{pie.lwd}. When colors are applied to
\code{frame.color}, the border is defined with \code{frame.lwd}.
(Soon to become \code{frame.width}.)}

\item{do_reorder}{\code{logical} indicating whether to call
\code{reorder_igraph_nodes()} on the resulting \code{igraph}, so that
the border color can be used in the sort conditions.
Note that when \code{do_reorder=TRUE}, other relevant arguments are passed
through \code{...} to \code{reorder_igraph_nodes()} such as:
\itemize{
\item \code{colorV} - which controls the expected order of colors, and
should be supplied if known upfront.
\item \code{sortAttributes} - usually contains appropriate default values
\item \code{nodeSortBy} - usually contains appropriate default values
\item \code{orderByAspect=TRUE} - controls whether left-right and top-bottom
order is affected by the aspect ratio of each nodeset.
}}

\item{...}{additional arguments are passed to \code{reorder_igraph_nodes()}
when \code{do_reorder=TRUE}.}
}
\description{
Apply Cnet border color by directionality
}
\details{
This function specifically requires the \code{"pie.color"}
node attribute of the \code{cnet} object \code{igraph} is populated
with a \code{list} of colors whose name is the enrichment,
and matches \code{colnames(hitim)} of the supplied hit
incidence matrix.

The node names \code{V(cnet)$name} also must match \code{rownames(hitim)},
otherwise the \code{"pie.border"} and \code{"coloredrect.border"} is assigned
its previous value.
In that case \code{"frame.color"} retains its original value.

This function may be run multiple times with different \code{hitim},
for example using \code{geneIMdirection} and \code{enrichIMdirection} in two steps.

When there are multiple colors for a given node, they are populated in
node attributes \code{"pie.border"} in \code{list} form. For these nodes,
the attribute \code{"frame.color"} is set to \code{NULL} so it is not displayed
on top of the pie wedge colors.

When there are no matching \code{rownames(hitim)}, or all colors
are identical, the \code{"pie.border"} is populated with \code{NULL},
so the pie wedges do not each show a color. Also for single-wedge
pie nodes, this process avoids drawing a small line at the top
of each node.
Instead the attribute \code{"frame.color"} is populated with the
one unique border color, so that only the outer border is colorized.
}
\seealso{
Other jam cnet igraph functions: 
\code{\link{adjust_cnet_nodeset}()},
\code{\link{adjust_cnet_set_relayout_gene}()},
\code{\link{apply_nodeset_spacing}()},
\code{\link{get_cnet_nodeset}()},
\code{\link{make_cnet_test}()},
\code{\link{nudge_igraph_node}()},
\code{\link{rotate_igraph_layout}()}
}
\concept{jam cnet igraph functions}
