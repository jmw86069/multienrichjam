% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-base.r
\name{subsetCnetIgraph}
\alias{subsetCnetIgraph}
\title{Subset Cnet igraph}
\usage{
subsetCnetIgraph(
  gCnet,
  includeSets = NULL,
  includeGenes = NULL,
  remove_singlets = TRUE,
  minSetDegree = 1,
  minGeneDegree = 1,
  remove_blanks = FALSE,
  spread_labels = TRUE,
  force_relayout = TRUE,
  do_reorder = TRUE,
  repulse = 4,
  layout = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{gCnet}{igraph object representing Cnet concept network data}

\item{includeSets}{character vector, or NULL, containing the set
names or labels to retain.}

\item{includeGenes}{character vector, or NULL, containing the gene
names or labels to retain.}

\item{remove_singlets}{logical whether to remove singlet graph nodes,
which are nodes that have no remaining edges. Note that
argument \code{"removeSinglets"} is deprecated but will be recognized
with preference, support will be removed in future versions.}

\item{minSetDegree}{integer value indicating the minimum number
of edges each Set node must have to be retained in the resulting
igraph. Use \code{minSetDegree=2} to retain only Set nodes that
have multiple connected Gene nodes.}

\item{minGeneDegree}{integer value indicating the minimum number
of edges each Gene node must have to be retained in the resulting
igraph. Use \code{minGeneDegree=2} to retain only Gene nodes that
connect to multiple Set nodes.}

\item{remove_blanks}{logical indicating whether to call
\code{removeIgraphBlanks()}, which removes blank colors from
\code{"pie.color"} and \code{"coloredrect.color"} attributes.}

\item{spread_labels}{logical indicating whether to call
\code{spread_igraph_labels()}, which re-orients the node labels
after the \code{igraph} object has been subsetted. When \code{TRUE},
the arguments \code{force_relayout}, and \code{do_reorder} are passed
to that function.}

\item{force_relayout}{logical indicating whether to re-apply
the \code{igraph} layout function.}

\item{do_reorder}{logical indicating whether to call
\code{reorderIgraphNodes()}, which sorts equivalent nodes by
color then label, intended when there are large numbers of
nodes with the same edges, typically most common in a cnet
plot where many gene nodes may be connected to the same
pathway set nodes.}

\item{layout}{function that takes \code{igraph} object and returns a
numeric matrix of node coordinates. This function is only
called when \code{force_relayout=TRUE}, and must be supplied as
a function in order to be applied properly to the subset
Cnet \code{igraph}. To apply layout before the subset operation,
do so with \code{igraph::set_graph_attr(g, "layout", layout)}.}

\item{verbose}{logical indicating whether to print verbose output.}

\item{...}{additional arguments are ignored.}
}
\description{
Subset Cnet igraph
}
\details{
This function produces a subset of a Cnet igraph based upon supplied
set names or gene names. This function is intended to be a convenient
method of filtering a Cnet igraph to a pre-defined set of "Set"
names.

The function assumes graph nodes have an attribute \code{"nodeType"} with
values either \code{"Set"} or \code{"Gene"} to indicate the type of node.

When \code{includeSets} is supplied, the graph is subsetted to include
only nodes with \code{nodeType="Set"} with matching \code{V(gCnet)$name} or
\code{V(gCnet)$label}. Then only neighboring nodes are retained, thus
removing any nodes with \code{nodeType="Gene"} that do not connect to
any of the given Set nodes.
The result is a proper Cnet igraph that only contains
Gene nodes connected to the subset of Set nodes.

If \code{includeGenes} is supplied, the graph is subsetted to include
only nodes with \code{nodeType="Gene"} with matching \code{V(gCnet)$name} or
\code{V(gCnet)$label}.

When \code{removeSinglets=TRUE} then any nodes that have no remaining
edges are removed. Especially when supplying \code{includeGenes}, this
option is useful to hide any Set nodes that have no connected Gene
nodes.
}
\seealso{
Other jam igraph functions: 
\code{\link{cnet2df}()},
\code{\link{cnet2im}()},
\code{\link{cnetplotJam}()},
\code{\link{cnetplot_internalJam}()},
\code{\link{color_edges_by_nodes_deprecated}()},
\code{\link{color_edges_by_nodes}()},
\code{\link{drawEllipse}()},
\code{\link{edge_bundle_bipartite}()},
\code{\link{edge_bundle_nodegroups}()},
\code{\link{enrichMapJam}()},
\code{\link{fixSetLabels}()},
\code{\link{flip_edges}()},
\code{\link{get_bipartite_nodeset}()},
\code{\link{igraph2pieGraph}()},
\code{\link{jam_igraph}()},
\code{\link{jam_plot_igraph}()},
\code{\link{layout_with_qfrf}()},
\code{\link{layout_with_qfr}()},
\code{\link{memIM2cnet}()},
\code{\link{mem_multienrichplot}()},
\code{\link{rectifyPiegraph}()},
\code{\link{relayout_with_qfr}()},
\code{\link{removeIgraphBlanks}()},
\code{\link{removeIgraphSinglets}()},
\code{\link{reorderIgraphNodes}()},
\code{\link{rotate_igraph_layout}()},
\code{\link{spread_igraph_labels}()},
\code{\link{subgraph_jam}()},
\code{\link{subset_igraph_components}()},
\code{\link{with_qfr}()}
}
\concept{jam igraph functions}
