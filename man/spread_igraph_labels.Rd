% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-igraph.r
\name{spread_igraph_labels}
\alias{spread_igraph_labels}
\title{Spread igraph node labels by angle from node center}
\usage{
spread_igraph_labels(
  g,
  layout = NULL,
  y_bias = 1,
  update_g_coords = TRUE,
  do_reorder = TRUE,
  sortAttributes = NULL,
  nodeSortBy = c("x", "y"),
  repulse = 3.5,
  force_relayout = FALSE,
  label_min_dist = 0.5,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{g}{igraph object}

\item{layout}{numeric matrix representing the x and y
coordinates of each node in \code{g}, in the same order as \code{V(g)}.
When \code{layout} is not supplied, nodes are checked for
attributes \code{c("x", "y")} which define a fixed internal
layout. When \code{force_layout=TRUE} these coordinates are ignored.
If that is not supplied, then \code{layout_with_qfr()}
is called along with the \code{repulse} argument. Subsequent
coordinates are stored in \code{V(g)$x} and \code{V(g)$y} when
argument \code{update_g_coords=TRUE}.}

\item{y_bias}{numeric value indicating the tendency to spread
labels on the y-axis rather than symmetrically around each node.
This argument elongates the circle surrounding a node into
an ellipse with this ratio.}

\item{update_g_coords}{logical indicating whether the layout
coordinates will be stored in \code{V(g)$x} and \code{V(g)$y}.}

\item{do_reorder}{logical indicating whether to call
\code{reorderIgraphNodes()} which re-distributes equivalent nodes
based upon the node color(s). A node is "equivalent" to another
node if both nodes have identical edges.}

\item{sortAttributes, nodeSortBy}{arguments passed to
\code{reorderIgraphNodes()} when \code{do_reorder=TRUE}.}

\item{repulse}{argument passed to \code{layout_with_qfr()} only
when \code{layout} is not supplied, and the layout is not stored
in \code{c(V(g)$x, V(g)$y)}.}

\item{force_relayout}{logical indicating whether the \code{igraph} layout
should be recalculated, in order to override coordinates that
may be previously stored in the \code{igraph} object itself.
Note that when \code{layout} is supplied, it is always used.}

\item{label_min_dist}{numeric value used to ensure all labels are
at least some distance from the center. These units are defined
by igraph, and are roughly in units of one line height of text.}

\item{...}{additional arguments are passed to \code{layout_with_qfr()}
when needed.}
}
\description{
Spread igraph node labels by angle from node center
}
\details{
This function uses the igraph vertex attribute
\code{"label.degree"}, which describes the angular offset for
each vertex label. (The \code{"label.degree"} values are
represented as radians, not degrees, starting at 0 for
right, and proceeding clockwise starting from the right,
down, left, top, right.)

This function requires a network layout, which must be fixed
in order for the vertex labels to be properly oriented.
Labels are oriented opposite the most dominant angular mean
of edges from each network node. Typically the side of a node
with the fewest edges has the most space to place a label.
No further checks are performed for overlapping labels.

Note that this function only modifies the other important
attribute \code{"label.dist"} when `label_min_dist`` is defined,
in order to enforce a minimum label distance from the center
of each node. There is no other logic to position small or
large labels to avoid overlapping labels.
}
\seealso{
Other jam igraph functions: 
\code{\link{cnet2df}()},
\code{\link{cnet2im}()},
\code{\link{cnetplotJam}()},
\code{\link{cnetplot_internalJam}()},
\code{\link{color_edges_by_nodes_deprecated}()},
\code{\link{color_edges_by_nodes}()},
\code{\link{drawEllipse}()},
\code{\link{edge_bundle_bipartite}()},
\code{\link{edge_bundle_nodegroups}()},
\code{\link{enrichMapJam}()},
\code{\link{fixSetLabels}()},
\code{\link{get_bipartite_nodeset}()},
\code{\link{igraph2pieGraph}()},
\code{\link{jam_igraph}()},
\code{\link{jam_plot_igraph}()},
\code{\link{layout_with_qfrf}()},
\code{\link{layout_with_qfr}()},
\code{\link{memIM2cnet}()},
\code{\link{mem_multienrichplot}()},
\code{\link{rectifyPiegraph}()},
\code{\link{relayout_with_qfr}()},
\code{\link{removeIgraphBlanks}()},
\code{\link{removeIgraphSinglets}()},
\code{\link{reorderIgraphNodes}()},
\code{\link{rotate_igraph_layout}()},
\code{\link{subgraph_jam}()},
\code{\link{subsetCnetIgraph}()},
\code{\link{subset_igraph_components}()},
\code{\link{with_qfr}()}
}
\concept{jam igraph functions}
