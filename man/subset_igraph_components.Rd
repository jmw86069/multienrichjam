% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-igraph.r
\name{subset_igraph_components}
\alias{subset_igraph_components}
\title{Subset igraph by connected components}
\usage{
subset_igraph_components(
  g,
  keep = NULL,
  min_size = 1,
  order_by_size = TRUE,
  ...
)
}
\arguments{
\item{g}{igraph object}

\item{keep}{numeric vector indicating which component or components
to keep in the final output. When \code{order_by_size=TRUE}, components
are ordered by size, from largest to smallest, in that case
\code{keep=1} will return only the one largest connected subgraph.}

\item{min_size}{numeric value indicating the number of nodes required
in all connected components returned. This filter is applied after
the \code{keep} argument.}

\item{order_by_size}{logical indicating whether the connected components
are sorted by size, largest to smallest, and therefore re-numbered.
Otherwise, the components are somewhat randomly labeled based
upon the output of \code{igraph::components()}.}

\item{...}{additional arguments are passed to \code{igraph::components()}.}
}
\description{
Subset igraph by connected components
}
\details{
This function is intended to help drill down into an igraph
object that contains multiple connected components.

By default, it sorts the components from largest number of nodes,
to smallest, which helps choose the largest connected component,
or subsequent components in size order.

The components can also be filtered to require a minimum number
of connected nodes.

At its core, this function is a wrapper to \code{igraph::components()}
and \code{igraph::subgraph()}.
}
\seealso{
Other jam igraph functions: 
\code{\link{cnet2df}()},
\code{\link{cnet2im}()},
\code{\link{cnetplotJam}()},
\code{\link{cnetplot_internalJam}()},
\code{\link{color_edges_by_nodegroups}()},
\code{\link{color_edges_by_nodes}()},
\code{\link{color_edges_by_nodes_deprecated}()},
\code{\link{color_nodes_by_nodegroups}()},
\code{\link{communities2nodegroups}()},
\code{\link{drawEllipse}()},
\code{\link{edge_bundle_bipartite}()},
\code{\link{edge_bundle_nodegroups}()},
\code{\link{enrichMapJam}()},
\code{\link{fixSetLabels}()},
\code{\link{flip_edges}()},
\code{\link{get_bipartite_nodeset}()},
\code{\link{igraph2pieGraph}()},
\code{\link{jam_igraph}()},
\code{\link{jam_plot_igraph}()},
\code{\link{label_communities}()},
\code{\link{layout_with_qfr}()},
\code{\link{layout_with_qfrf}()},
\code{\link{mem2emap}()},
\code{\link{memIM2cnet}()},
\code{\link{mem_multienrichplot}()},
\code{\link{nodegroups2communities}()},
\code{\link{rectifyPiegraph}()},
\code{\link{relayout_with_qfr}()},
\code{\link{removeIgraphBlanks}()},
\code{\link{removeIgraphSinglets}()},
\code{\link{reorderIgraphNodes}()},
\code{\link{rotate_igraph_layout}()},
\code{\link{spread_igraph_labels}()},
\code{\link{subgraph_jam}()},
\code{\link{subsetCnetIgraph}()},
\code{\link{sync_igraph_communities}()},
\code{\link{with_qfr}()}
}
\concept{jam igraph functions}
