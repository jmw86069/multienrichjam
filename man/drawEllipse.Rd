% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-igraph.r
\name{drawEllipse}
\alias{drawEllipse}
\title{Draw ellipse}
\usage{
drawEllipse(
  x,
  y,
  a = 1,
  b = 1,
  angle = 0,
  segment = NULL,
  arc.only = TRUE,
  nv = 100,
  deg = TRUE,
  border = NULL,
  col = NA,
  lty = 1,
  lwd = 1,
  draw = TRUE,
  ...
)
}
\arguments{
\item{x, y}{\code{numeric} coordinates, where x can be a two-column numeric
matrix of x,y coordinates.}

\item{a, b}{\code{numeric} values indicating x- and y-axis radius, before
rotation if \code{angle} is non-zero.}

\item{angle}{\code{numeric} value indicating the rotation of ellipse.}

\item{segment}{NULL or \code{numeric} vector of two values indicating the
start and end angles for the ellipse, prior to rotation.}

\item{arc.only}{\code{logical} indicating whether to draw the ellipse
arc without connecting to the center of the ellipse. Set
\code{arc.only=FALSE} when segment does not include the full circle,
to draw only the wedge.}

\item{nv}{\code{numeric} the number of vertices around the center to draw.}

\item{deg}{\code{logical} indicating whether input \code{angle} and \code{segment}
values are in degrees, or \code{deg=FALSE} for radians.}

\item{border, col, lty, lwd}{arguments passed to \code{graphics::polygon()}.}

\item{draw}{\code{logical} indicating whether to draw the ellipse.}

\item{...}{additional arguments are passed to \code{graphics::polygon()}
when \code{draw=TRUE}.}
}
\value{
invisible list of x,y coordinates
}
\description{
Draw ellipse
}
\details{
This function draws an ellipse centered on the given coordinates,
rotated the given degrees relative to the center point, with give
x- and y-axis radius values.
}
\examples{
plot(NULL,
   type="n",
   xlim=c(-5, 20),
   ylim=c(-5, 18),
   asp=1);
xy <- drawEllipse(
   x=c(1, 11, 11, 11),
   y=c(1, 11, 11, 11),
   a=c(5, 5, 5*1.5, 5),
   b=c(2, 2, 2*1.5, 2),
   angle=c(20, -15, -15, -15),
   segment=c(0, 360, 0, 120, 120, 240, 240, 360),
   arc.only=c(TRUE, FALSE, FALSE, TRUE),
   col=jamba::alpha2col(c("red", "gold", "dodgerblue", "darkorchid"), alpha=0.5),
   border=c("red", "gold", "dodgerblue", "darkorchid"),
   lwd=1,
   nv=99)
points(x=c(1, 11), y=c(1, 11), pch=20, cex=2)
jamba::drawLabels(x=c(12, 3, 13, 5),
   y=c(14, 10, 9, 2),
   labelCex=1.5,
   adjPreset=c("topright", "left", "bottomright", "top"),
   txt=c("0-120 degrees,\nangle=-15,\narc.only=TRUE",
      "120-240 degrees,\nangle=-15,\narc.only=TRUE,\nlonger radius",
      "240-360 degrees,\nangle=-15,\narc.only=FALSE",
      "angle=20"))

}
\seealso{
Other jam igraph functions: 
\code{\link{cnet2df}()},
\code{\link{cnet2im}()},
\code{\link{cnetplotJam}()},
\code{\link{cnetplot_internalJam}()},
\code{\link{color_edges_by_nodes_deprecated}()},
\code{\link{color_edges_by_nodes}()},
\code{\link{edge_bundle_bipartite}()},
\code{\link{edge_bundle_nodegroups}()},
\code{\link{enrichMapJam}()},
\code{\link{fixSetLabels}()},
\code{\link{flip_edges}()},
\code{\link{get_bipartite_nodeset}()},
\code{\link{igraph2pieGraph}()},
\code{\link{jam_igraph}()},
\code{\link{jam_plot_igraph}()},
\code{\link{layout_with_qfrf}()},
\code{\link{layout_with_qfr}()},
\code{\link{memIM2cnet}()},
\code{\link{mem_multienrichplot}()},
\code{\link{rectifyPiegraph}()},
\code{\link{relayout_with_qfr}()},
\code{\link{removeIgraphBlanks}()},
\code{\link{removeIgraphSinglets}()},
\code{\link{reorderIgraphNodes}()},
\code{\link{rotate_igraph_layout}()},
\code{\link{spread_igraph_labels}()},
\code{\link{subgraph_jam}()},
\code{\link{subsetCnetIgraph}()},
\code{\link{subset_igraph_components}()},
\code{\link{with_qfr}()}
}
\concept{jam igraph functions}
