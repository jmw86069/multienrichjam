% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamenrich-mem2emap.R
\name{mem2emap}
\alias{mem2emap}
\title{Convert multiEnrichMap mem output to EnrichmentMap emap}
\usage{
mem2emap(
  mem,
  overlap = 0.2,
  p_cutoff = mem$p_cutoff,
  min_count = 4,
  colorV = mem$colorV,
  cluster_function = igraph::cluster_walktrap,
  cluster_list = NULL,
  num_keep_terms = 3,
  keep_terms_sep = ",\\n",
  repulse = 3.3,
  remove_singlets = TRUE,
  color_by_nodes = FALSE,
  apply_direction = TRUE,
  direction_max = 2,
  direction_floor = 0.5,
  do_plot = TRUE,
  ...
)
}
\arguments{
\item{mem}{\code{list} object output from \code{multiEnrichMap()}}

\item{overlap}{\code{numeric} value between 0 and 1 indicating the Jaccard
overlap coefficient required between any two pathways in order to
create a network edge connecting these two pathways. Typically,
\code{overlap=0.2} is default, which specifies roughly 20\% overlap
in genes shared between two pathway nodes. Note these genes must be
involved in enrichment, and therefore does not use all possible
genes annotated to a pathway. Therefore connections are only
created with enriched genes are shared between pathways.}

\item{p_cutoff}{\code{numeric} threshold used for significant enrichment
P-value, usually defined in the \code{mem} object.}

\item{min_count}{\code{integer} threshold for minimum genes involved in
enrichment in order for a pathway to be considered significant
during this analysis.}

\item{colorV}{\code{character} vector of R colors used for each enrichment.}

\item{cluster_function}{\code{function} used to cluster nodes in the resulting
\code{igraph} object, used to help generate a visual summary.}

\item{num_keep_terms}{\code{integer} number of terms to keep from each
pathway cluster, when \code{cluster_function} is supplied above. Common
terms are removed from each pathway cluster, then remaining terms
are sorted by decreasing occurrence, and used as a straightforward
summary of pathways in each cluster.}

\item{keep_terms_sep}{\code{character} string used to separated multiple
pathway terms defined by \code{num_keep_terms} above.}

\item{repulse}{\code{numeric} value passed to \code{layout_with_qfr()}.}

\item{remove_singlets}{\code{logical} indicating whether to remove pathway
singlets, which have no connections to any other pathways. It can
help simplify busy figures, however removing a singlet pathway
is not recommended because it may imply the pathways were not
statistically significant, and in fact they were.}

\item{color_by_nodes}{\code{logical} indicating whether to colorize pathway
clusters based upon blending the node colors within each cluster.
Note that a mix of colors often turns brown, so this feature has
unpredictable benefit.}

\item{do_plot}{\code{logical} indicating whether to render the resulting
plot.}

\item{...}{additional arguments are passed to \code{jam_igraph()} to customize
the network plot.}
}
\description{
Convert multiEnrichMap mem output to EnrichmentMap emap
}
\details{
This function is currently In development.

This function is intended to convert \code{mem} output from
\code{multiEnrichMap()} into an EnrichmentMap \code{igraph} format
which represents the statistical enrichment support from each
pathway enrichment.

This function can apply P-value thresholds using the input \code{mem},
or using a custom value.

A node clustering function is applied by default, which may help
define suitable subgroups of nodes. When defined, the clusters
are used to define nodegroups for edge bundling.
}
\seealso{
Other jam igraph functions: 
\code{\link{cnet2df}()},
\code{\link{cnet2im}()},
\code{\link{cnetplotJam}()},
\code{\link{cnetplot_internalJam}()},
\code{\link{color_edges_by_nodegroups}()},
\code{\link{color_edges_by_nodes_deprecated}()},
\code{\link{color_edges_by_nodes}()},
\code{\link{color_nodes_by_nodegroups}()},
\code{\link{communities2nodegroups}()},
\code{\link{drawEllipse}()},
\code{\link{edge_bundle_bipartite}()},
\code{\link{edge_bundle_nodegroups}()},
\code{\link{enrichMapJam}()},
\code{\link{fixSetLabels}()},
\code{\link{flip_edges}()},
\code{\link{get_bipartite_nodeset}()},
\code{\link{igraph2pieGraph}()},
\code{\link{jam_igraph}()},
\code{\link{jam_plot_igraph}()},
\code{\link{label_communities}()},
\code{\link{layout_with_qfrf}()},
\code{\link{layout_with_qfr}()},
\code{\link{memIM2cnet}()},
\code{\link{mem_multienrichplot}()},
\code{\link{nodegroups2communities}()},
\code{\link{rectifyPiegraph}()},
\code{\link{relayout_with_qfr}()},
\code{\link{removeIgraphBlanks}()},
\code{\link{removeIgraphSinglets}()},
\code{\link{reorderIgraphNodes}()},
\code{\link{rotate_igraph_layout}()},
\code{\link{spread_igraph_labels}()},
\code{\link{subgraph_jam}()},
\code{\link{subsetCnetIgraph}()},
\code{\link{subset_igraph_components}()},
\code{\link{sync_igraph_communities}()},
\code{\link{with_qfr}()}
}
\concept{jam igraph functions}
