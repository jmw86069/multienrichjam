[{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"import-and-use-ingenuity-ipa-enrichment-data","dir":"Articles","previous_headings":"","what":"Import and use Ingenuity IPA enrichment data","title":"How to import and use Ingenuity IPA enrichment data","text":"document describes steps recommended using Ingenuity IPA enrichment data. Ingenuity IPA enrichment data can exported using function \"Export \" default creates one text file, concatenating enrichment table one large file. workflow demonstrates import process using two IPA enrichment files used Reese et al 2019 https://doi.org/10.1016/j.jaci.2018.11.043 compare enrichment results newborns older children. therefore requires IPA enrichment results already exported text format IPA.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"import-ipa-data-from-text-files","dir":"Articles","previous_headings":"Import and use Ingenuity IPA enrichment data","what":"Import IPA data from text files","title":"How to import and use Ingenuity IPA enrichment data","text":"import IPA text file, use importIPAenrichment(): result list data.frame objects, data.frame represents one enrichment test. convenient way see dimensions data.frame function jamba::sdim(): MultiEnrichMap, typically want analyze multiple IPA enrichment files, can wrap call lapply() function: Now can check dimensions within list using jamba::ssdim(): cases, IPA file contain enrichment tests, example \"Canonical Pathways\", \"Upstream Regulators\", \"Diseases Bio Functions\", etc. However, always case, recommended check verify IPA file contains least enrichment tests needed downstream analysis.","code":"newborn_txt <- system.file(\"extdata\",    \"Newborns-IPA.txt\",    package=\"multienrichjam\"); newborn_dfl <- importIPAenrichment(newborn_txt); sdim(newborn_dfl); #>                            rows cols      class #> Canonical Pathways          113    8 data.frame #> Upstream Regulators         117    7 data.frame #> Diseases and Bio Functions  444    8 data.frame #> Tox Functions                15    8 data.frame #> Networks                      8    8 data.frame #> Tox Lists                    19    7 data.frame #> Analysis Ready Molecules     41    3 data.frame newborn_txt <- system.file(\"extdata\",    \"Newborns-IPA.txt\",    package=\"multienrichjam\"); olderchildren_txt <- system.file(\"extdata\",    \"OlderChildren-IPA.txt\",    package=\"multienrichjam\"); ipa_files <- c(Newborns=newborn_txt,    OlderChildren=olderchildren_txt)  ipa_l <- lapply(ipa_files, importIPAenrichment); ssdim(ipa_l); #> $Newborns #>                            rows cols      class #> Canonical Pathways          113    8 data.frame #> Upstream Regulators         117    7 data.frame #> Diseases and Bio Functions  444    8 data.frame #> Tox Functions                15    8 data.frame #> Networks                      8    8 data.frame #> Tox Lists                    19    7 data.frame #> Analysis Ready Molecules     41    3 data.frame #>  #> $OlderChildren #>                            rows cols      class #> Canonical Pathways          237    8 data.frame #> Upstream Regulators         338    8 data.frame #> Diseases and Bio Functions  500    8 data.frame #> Tox Functions               118    8 data.frame #> Networks                     10    8 data.frame #> Tox Lists                    36    7 data.frame #> Analysis Ready Molecules    162    3 data.frame"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"analyze-ipa-enrichments-from-one-enrichment-test","dir":"Articles","previous_headings":"","what":"Analyze IPA enrichments from one enrichment test","title":"How to import and use Ingenuity IPA enrichment data","text":"IPA performs multiple enrichment tests, done independently unique assumptions caveats. Therefore, recommend using one enrichment test time MultiEnrichMap. Extract one data.frame result: Top 10 rows enrichment data","code":"library(igraph) #>  #> Attaching package: 'igraph' #> The following objects are masked from 'package:stats': #>  #>     decompose, spectrum #> The following object is masked from 'package:base': #>  #>     union ## Take only the Ingenuity Canonical Pathways enrichList_canonical <- lapply(ipa_l, function(i){    i[[\"Canonical Pathways\"]]; }); sdim(enrichList_canonical); #>               rows cols      class #> Newborns       113    8 data.frame #> OlderChildren  237    8 data.frame  ## Convert data.frame to enrichResult ## multienrichjam::enrichDF2enrichResult er_canonical <- lapply(enrichList_canonical, function(i){    enrichDF2enrichResult(i,       keyColname=\"Name\",       pvalueColname=\"P-value\",       geneColname=\"geneNames\",       geneRatioColname=\"Ratio\",       pvalueCutoff=1) }); sdim(er_canonical); #>               rows cols        class #> Newborns       113   12 enrichResult #> OlderChildren  237   12 enrichResult kable_coloring(    head(as.data.frame(er_canonical[[1]])),    caption=\"Top 10 rows of enrichment data\",    row.names=FALSE) %>%    kableExtra::column_spec(column=seq_len(ncol(er_canonical[[1]])),       border_left=\"1px solid #DDDDDD\",       extra_css=\"white-space: nowrap;\")"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"run-multienrichmap","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test","what":"run multiEnrichMap()","title":"How to import and use Ingenuity IPA enrichment data","text":"Now given list data.frame results, can run multiEnrichMap(): Output list containing summary results. sdim(mem_canonical)","code":"mem_canonical <- multiEnrichMap(er_canonical,    enrichBaseline=1,    cutoffRowMinP=0.05,    topEnrichN=20) kable_coloring(    sdim(mem_canonical),    caption=\"sdim(mem_canonical)\") %>%    kableExtra::column_spec(column=seq_len(4),       border_left=\"1px solid #DDDDDD\",       extra_css=\"white-space: nowrap;\")"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"mem-plot-folio","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test","what":"Mem Plot Folio","title":"How to import and use Ingenuity IPA enrichment data","text":"mem_plot_folio() represents key step analysis workflow. Several downstream results directly dependent upon options chosen : Pathway clusters defined analyst parameters: number pathways clusters relative weight gene-pathway incidence matrix. method used clustering. Mem Plot Folio provides series visualizations: Enrichment P-value heatmap often dot plot Gene-pathway heatmap, clustered column row Cnet cluster plots Pathway clusters labeled LETTERS (“”, “B”, “C”, “D”, etc.) second plot labels clusters top n pathway names third plot (b) hides gene labels. Cnet exemplar plots Includes 1 exemplar pathway per cluster. Includes 2 exemplars per cluster. Includes 3 exemplars per cluster. Cnet per cluster One plot pathway cluster      object returned mem_canonical_plots list graphical objects.","code":"mem_canonical_plots <- multienrichjam::mem_plot_folio(mem_canonical,    pathway_column_split=4,    column_cex=0.7,    node_factor=1,    use_shadowText=TRUE,    label_factor=1.2,    do_which=c(1:5),    verbose=TRUE,    main=\"Canonical Pathways\"); #> ##  (13:54:28) 17Oct2025:   mem_plot_folio(): Gene-pathway heatmap (pre-emptive)  #> ##  (13:54:28) 17Oct2025:   mem_plot_folio(): plot_num 1: Enrichment P-value Heatmap #> ##  (13:54:29) 17Oct2025:   mem_plot_folio(): Gene-pathway heatmap  #> ##  (13:54:29) 17Oct2025:   mem_plot_folio(): plot_num 2: Gene-Pathway Heatmap #> ##  (13:54:31) 17Oct2025:   mem_plot_folio(): Defined 4 pathway clusters.  #> ##  (13:54:31) 17Oct2025:   mem_plot_folio(): Preparing Cnet collapsed  #> ##  (13:54:31) 17Oct2025:   mem_plot_folio(): subsetCnetIgraph()  #> ##  (13:54:31) 17Oct2025:   mem_plot_folio(): plot_num 3: Cnet collapsed with gene and cluster labels #> ##  (13:54:32) 17Oct2025:   mem_plot_folio(): plot_num 4: Cnet collapsed with gene and set labels #> ##  (13:54:32) 17Oct2025:   mem_plot_folio(): plot_num 5: Cnet collapsed with set labels, without gene labels"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"where-is-enrich-map","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Commentary on the “Plot Folio”","what":"Where is Enrich Map?","title":"How to import and use Ingenuity IPA enrichment data","text":"practice, rarely find benefit multi-enrichment map. network shows pathways connected pathways based upon Jaccard overlap genes involved enrichment pathway. network view often disorganized, clearly clustered, lacked ability see genes drive overlaps pathways. Perhaps works best highly structured Gene Ontology (GO), hands GO just insightful broad range experiments analyzing.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"concept-network-cnet","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Commentary on the “Plot Folio”","what":"Concept network (Cnet)","title":"How to import and use Ingenuity IPA enrichment data","text":"gravitated toward Cnet plot, clever idea Dr. Guangchang Yu visualize pathways connected genes, genes also connect naturally pathways. many collaborators, plot visually intuitive. also answers next question people often : “shared genes?” subtle customization color genes enrichment show genes shared unique across enrichments. gene nodes sorted color, optionally border, help organize patterns.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"cnet-cluster-plot","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Commentary on the “Plot Folio”","what":"Cnet cluster plot","title":"How to import and use Ingenuity IPA enrichment data","text":"evolution Cnet plots led two conceptual ideas, driven “many pathways” problem: Cnet using “exemplar pathways” option comprehensive, shows subset pathways. option show every gene involved enrichment. main utility produce clean figure. Ultimately, also core goal multienrichjam. option ideal relevant pathways known relevant experiment, Option 2 () complex. Option 1 path chosen ggtangle component clusterProfiler suite Dr. Yu. displays top N pathways, default showCategory=5. experience, “top N” always representative, interesting. extended multienrichjam accordingly. Cnet using pathway clusters option intended comprehensive, less complex plotting 20 pathways individually, complex “Cnet exemplars” . option show every gene involved enrichment. option main utility multienrichjam. Pathways clustered based upon genes contain. approach similar Enrichment Map (Bader lab) use Jaccard overlap. However, clustering rich field many important techniques captured simple overlap coefficient. Option 2 several important benefits Reduces redundancy among pathways. genes involved pathway enrichment identical across several pathways, naturally cluster together. much time, observed gene-pathway clustering provides rich overview data involved, gives insight underlying pathways supporting data. Avoids clustering P-value frank, original approach plot P-value matrix test versus pathway. heatmap, naturally provides clusters, sometimes fortuitously appears biologically relevant. learned clustering P-value incorrect. Instead, recommend using underlying gene content pathways. purpose group pathways conceptually, enrichment P-value indication biology. Provides functional sub-groups interpretation. Ideally, nearly identical pathways grouped together “easily summarized” scientist. often, pathway clusters contain similar pathways, grouped also share “core genes” across pathways. exciting finding , turns major step forward interpreting pathway enrichment findings. Unfortunately, doesn’t provide “easy summary” use label.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"cnet-cluster-plot-1","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test","what":"Cnet Cluster Plot","title":"How to import and use Ingenuity IPA enrichment data","text":"Cnet Cluster Plot often focus manuscript figures. typical workflow demonstrated .","code":"# generate the data mpf4 <- mem_plot_folio(mem_canonical,    do_which=c(4),    do_plot=FALSE)  # extract the cnet cnet <- mpf4$cnet_collapsed_set;  # jam_graph jam_igraph(cnet,    node_factor=2,    use_shadowText=TRUE,    label_factor_l=list(nodeType=c(Gene=2, Set=1)))"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"shinycat","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Cnet Cluster Plot","what":"ShinyCat","title":"How to import and use Ingenuity IPA enrichment data","text":"R-shiny Cnet Adjustment Tool ShinyCat. several functions help customize Cnet igraph object, however easily applied launch_shinycat(). Make sure assign output variable, click “Save RData” within R-shiny app.","code":"output_env <- launch_shinycat(g=cnet)  # obtain the output data adj_cnet <- output_env$adj_cnet;  # jam_graph jam_igraph(adj_cnet,    node_factor=2,    use_shadowText=TRUE,    label_factor_l=list(nodeType=c(Gene=2, Set=1)))"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"multi-enrichment-map","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test","what":"Multi-Enrichment Map","title":"How to import and use Ingenuity IPA enrichment data","text":"can view “Multi Enrichment Map” mem_multienrichplot(). network connects pathways meet Jaccard overlap coefficient threshold based upon shared genes pathways. default overlap stored multiEnrichMap() output object mem_canonical.  can provide Jaccard overlap threshold directly, argument overlap. Values 0 1. threshold can estimated mem_find_overlap(), based upon network connectivity.  Notice distinct subnetworks, called “components”, connected . can pull component subset_igraph_components(). Components ordered size, largest smallest, can keep largest using argument keep=1, second largest keep=2, . also call two helper functions: removeIgraphBlanks() removes blank colors multi-color nodes, pie nodes, colored rectangle nodes. helps show remaining colors without whitespace. relayout_with_qfr() Fruchterman-Reingold layout, argument repulse used adjust spacing nodes. Also updates useful attributes, spreads node labels reduce label overlaps.","code":"g <- mem_multienrichplot(mem_canonical,    do_plot=FALSE,    overlap=0.3,    node_factor=2,    repulse=3.5) jam_igraph(g,    node_factor=2,    use_shadowText=TRUE) title(main=\"overlap=0.3\") use_overlap <- mem_find_overlap(mem_canonical); g <- mem_multienrichplot(mem_canonical,    overlap=use_overlap,    do_plot=FALSE,    node_factor=3,    repulse=3.5) jam_igraph(g,    node_factor=3,    use_shadowText=TRUE) title(main=paste0(\"overlap=\", use_overlap)) ## You can alternatively pull out any other component g_sub <- subset_igraph_components(g, keep=1);  ## Re-apply network layout, and remove blank colors g_sub <- relayout_with_qfr(repulse=3.5,    removeIgraphBlanks(g_sub))  ## Plot jam_igraph(g_sub,    node_factor=3,    label_factor=2,    use_shadowText=TRUE)"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"enrichment-p-value-heatmap","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Multi-Enrichment Map","what":"Enrichment P-value Heatmap","title":"How to import and use Ingenuity IPA enrichment data","text":"mem_enrichment_heatmap() produces heatmap Enrichment versus pathway, -log10(P-value) heatmap. also provided :mem_plot_folio(mem, do_which=1) Argument p_cutoff used set Pvalue, default inherits threshold data provided. Cells shaded P-value threshold, making clear entries significant. cells colorized – every P-value threshold colored, displayed white, even P-value less 1.  data can plotted heatmap.  Argument color_by_column=TRUE applies color gradient column, using colorV colors defined multiEnrichMap().","code":"mem_enrichment_heatmap(mem_canonical,    p_cutoff=0.05); mem_enrichment_heatmap(mem_canonical,    style=\"heatmap\",    p_cutoff=0.05); memhm <- mem_enrichment_heatmap(mem_canonical,    style=\"heatmap\",    color_by_column=TRUE);"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"gene-pathway-heatmap","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Multi-Enrichment Map","what":"Gene-Pathway Heatmap","title":"How to import and use Ingenuity IPA enrichment data","text":"can view pathway-gene matrix using function mem_gene_path_heatmap() produces heatmap pathway-gene incidence matrix. heatmap core multienrichjam. also provided :mem_plot_folio(mem, do_which=2) function estimate number pathway clusters, can customized: column_split=3 produce 3 pathway clusters. row_split=10 produce 10 gene clusters. Colors across top heatmap indicate enrichment P-values. Colors left heatmap indicate genes present enrichment test. directional gene hits provided, left heatmap also indicate directionality.  follow-analysis, can pull pathway cluster heatmap , using heatmap_column_order():","code":"hm <- mem_gene_path_heatmap(mem_canonical,    column_cex=0.5,    row_cex=0.6); ComplexHeatmap::draw(hm,    merge_legends=TRUE) hm_sets <- heatmap_column_order(hm); hm_sets; #> $A #>                Glioma Signaling   Synaptic Long Term Depression  #>              \"Glioma Signaling\" \"Synaptic Long Term Depression\"  #>        Growth Hormone Signaling                  mTOR Signaling  #>      \"Growth Hormone Signaling\"                \"mTOR Signaling\"  #>         Fc Epsilon RI Signaling                p70S6K Signaling  #>       \"Fc Epsilon RI Signaling\"              \"p70S6K Signaling\"  #>  #> $B #>                           Hepatic Cholestasis  #>                         \"Hepatic Cholestasis\"  #>                                RAR Activation  #>                              \"RAR Activation\"  #>   Dopamine-DARPP32 Feedback in cAMP Signaling  #> \"Dopamine-DARPP32 Feedback in cAMP Signaling\"  #>  #> $C #>   Tight Junction Signaling            HIPPO signaling  #> \"Tight Junction Signaling\"          \"HIPPO signaling\""},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"full-cnet-plot","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test","what":"Full Cnet plot","title":"How to import and use Ingenuity IPA enrichment data","text":"Concept network (Cnet) plot shows every pathway-gene relationship. helper function memIM2cnet() creates Cnet plot mem_canonical output. , also pipe result helper functions: fixSetLabels() applies pathway label word wrap relayout_with_qfr() applies network layout adjusts node labels removeIgraphBlanks() removes blank colors igraph nodes  Extract largest connected subnetwork.","code":"#cnet <- mem_canonical$multiCnetPlot1b; cnet <- mem_canonical %>%     memIM2cnet() %>%    fixSetLabels() %>%    removeIgraphBlanks() %>%    relayout_with_qfr(repulse=4);  withr::with_par(list(mar=c(5,4,4,2)+0.1), {    jam_igraph(cnet,       use_shadowText=TRUE,       node_factor=0.5,       vertex.label.cex=0.6);    mem_legend(mem_canonical); }) g2 <- cnet; g2_sub <- subset_igraph_components(cnet, keep=1)  #plot(g2_sub); jam_igraph(g2_sub,    use_shadowText=TRUE,    label_factor=0.5,    node_factor=0.5);"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"subset-cnet-by-cluster","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Full Cnet plot","what":"Subset Cnet by Cluster","title":"How to import and use Ingenuity IPA enrichment data","text":"Subset pathway nodes subsetCnetIgraph(), using hm_sets defined .","code":"cnet_sub <- subsetCnetIgraph(cnet,    repulse=3.5,    includeSets=unlist(hm_sets[c(\"A\")])); jam_igraph(cnet_sub,    node_factor=1,    use_shadowText=TRUE,    label_dist_factor=3,    label_factor=1.3); mem_legend(mem_canonical);"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"subset-cnet-options","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > Full Cnet plot","what":"Subset Cnet Options","title":"How to import and use Ingenuity IPA enrichment data","text":"Subset pathway nodes subsetCnetIgraph(), using custom subset pathways. Alternatively, subset network attributes: minSetDegree=6: pathways least 6 genes minGeneDegree=2: genes present 2 pathways (used ). useful defaults: remove_singlets=TRUE: remove singlet nodes connections. force_relayout=TRUE: re-calculated layout. do_reorder=TRUE: re-order nodes color. spread_labels=TRUE: re-position labels away incoming edges remove_blanks=FALSE: optionally remove blank colors pie nodes.","code":"cnet3 <- multienrichjam::subsetCnetIgraph(cnet,    repulse=5,    minSetDegree=6,    minGeneDegree=1); jam_igraph(cnet3,    node_factor=0.7,    use_shadowText=TRUE); mem_legend(mem_canonical);"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"jam_igraph-for-igraph-plots","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test","what":"jam_igraph() for igraph plots","title":"How to import and use Ingenuity IPA enrichment data","text":"jam_igraph() customized igraph::plot(), benefits: edge_bundling=\"connections\" (default) improves rendering edges bundling edges node clusters, drawn bezier curve use_shadowText=TRUE (optional) draw labels contrasting border improve legibility text labels rescale=FALSE (default) keeps network layout aspect ratio instead scaling coordinates fit size. plot window. also properly scales node edge sizes. convenient resizing: label_factor: adjusts label.cex multiplier node_factor: adjusts node.size multiplier edge_factor: adjusts edge.width multiplier label_dist_factor re-scales label.dist values multiplier","code":""},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"simple-resizing","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > jam_igraph() for igraph plots","what":"Simple resizing","title":"How to import and use Ingenuity IPA enrichment data","text":"Consider following changes, demonstrated : node_factor=2: nodes 2x larger edge_factor=2: edges 2x wider label_factor=1.2: labels 20% larger use_shadowText=TRUE: shadow text labels label_dist_factor=5: label distance 5x farther node center","code":"jam_igraph(cnet3,    node_factor=2,    edge_factor=2,    label_factor=1.2,     label_dist_factor=5,    use_shadowText=TRUE)"},{"path":"https://jmw86069.github.io/multienrichjam/articles/importIPA.html","id":"colored-edges","dir":"Articles","previous_headings":"Analyze IPA enrichments from one enrichment test > jam_igraph() for igraph plots","what":"Colored edges","title":"How to import and use Ingenuity IPA enrichment data","text":"Colorize edges based upon node colors, inspired Gephi netowrk visualization tool.","code":"jam_igraph(color_edges_by_nodes(cnet3, alpha=0.7),    edge_bundling=\"connections\",    edge_factor=2,    node_factor=2,    label_factor=1.2,     label_dist_factor=5,    use_shadowText=TRUE)"},{"path":"https://jmw86069.github.io/multienrichjam/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James M. Ward. Author, maintainer, copyright holder.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Farris S, Ward JM, Carstens KE, Samadi M, Wang Y, Dudek SM (2019). “Hippocampal Subregions Express Distinct Dendritic Transcriptomes Reveal Differences Mitochondrial Function CA2.” Cell Reports, 29(2), 522-539. doi:10.1016/j.celrep.2019.08.093.","code":"@Article{,   title = {Hippocampal Subregions Express Distinct Dendritic Transcriptomes that Reveal Differences in Mitochondrial Function in CA2},   author = {Shannon Farris and James M. Ward and Kelly E. Carstens and Mahsa Samadi and Yu Wang and Serena M. Dudek},   year = {2019},   journal = {Cell Reports},   volume = {29},   number = {2},   pages = {522-539},   doi = {10.1016/j.celrep.2019.08.093}, }"},{"path":"https://jmw86069.github.io/multienrichjam/index.html","id":"multienrichjam","dir":"","previous_headings":"","what":"Analysis and Visualization of Multiple Gene Set Enrichments","title":"Analysis and Visualization of Multiple Gene Set Enrichments","text":"goal multienrichjam implement MultiEnrichMap, extension EnrichMap Enrichment Map, originally envisioned implemented Cytoscape plugin lab Dr. Gary Bader Bader lab EnrichmentMap, reference: Merico,et al, PLoS One, 2010), re-implemented larger analysis workflow R Dr. Guangchuang Yu R packages: clusterProfiler, enrichplot. MultiEnrichMap extension relatively straightforward set functions help enable comparison enrichment results multiple gene set enrichment tests.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/index.html","id":"package-reference","dir":"","previous_headings":"","what":"Package Reference","title":"Analysis and Visualization of Multiple Gene Set Enrichments","text":"full online function reference available via pkgdown documentation: Full multienrichjam command reference","code":""},{"path":"https://jmw86069.github.io/multienrichjam/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"Analysis and Visualization of Multiple Gene Set Enrichments","text":"Install using R package remotes command: remotes package, can install CRAN: Note changed recommended installation using devtools using remotes remotes package much smaller fewer dependencies.","code":"remotes::install_github(\"jmw86069/multienrichjam\",    dependencies=TRUE); install.packages(\"remotes\");"},{"path":"https://jmw86069.github.io/multienrichjam/multienrichjam_dev_notes.html","id":null,"dir":"","previous_headings":"","what":"multienrichjam dev notes","title":"multienrichjam dev notes","text":".onLoad() function defined zzz.R adds igraph shapes ‘jampie’, ‘ellipse’, ‘coloredrectangle’. updating shape functions using ‘devtools’ active development, must also add shape R session. Adding generic methods S4 objects Test existing generic function, ‘getName=TRUE’ part tells package provided generic function isGeneric(\"score\", getName=TRUE) isGeneric(\"abbreviate\", getName=TRUE) Adding data include R package, use R function examples Create R object active R session, example ‘Memtest’, usethis::use_data(Memtest, overwrite=TRUE) Migrating mem list Mem S4 object Clean argument names multiEnrichMap() Change cutoffRowMinP p_cutoff","code":"igraph::add_shape(\"jampie\",    clip=shape.jampie.clip,    plot=shape.jampie.plot)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/add_pathway_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Add directionality to pathway enrichment — add_pathway_direction","title":"Add directionality to pathway enrichment — add_pathway_direction","text":"Add directionality pathway enrichment","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/add_pathway_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add directionality to pathway enrichment — add_pathway_direction","text":"","code":"add_pathway_direction(   x,   gene_hits,   delim = \"/\",   dir_colname = \"z-score\",   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/add_pathway_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add directionality to pathway enrichment — add_pathway_direction","text":"x enrichResult object returned clusterProfiler::enricher() gene_hits numeric vector, values c(-1, 1) indicate , respectively, whose names(gene_hits) match gene symbols (values) x@result$geneID. names(gene_hits) match values geneID column, direction score ultimately populated NA values. delim character string delimiter used enrichResult object, default: \"/\" dir_colname character string indicating column name create, default \"z-score\". verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/add_pathway_direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add directionality to pathway enrichment — add_pathway_direction","text":"enrichResult object, directional values populated result column name defined dir_colname. genes gene set present gene_hits expected directional value NA.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/add_pathway_direction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add directionality to pathway enrichment — add_pathway_direction","text":"function uses pathway enrichment data provided enrichResult object. Data added new column (default \"z-score\") numeric values indicating direction change. requires gene_hits direction change gene, used determine - -regulated genes gene set. default equation uses IPA z-score activation, since z-score beneficial properties downstream visualization functions. symmetric around zero, implies reasonable thresholds. Note genes involved enrichment present gene_hits data, resulting directional value expected NA, treated \"non-directional\" downstream visualization functions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/add_pathway_direction.html","id":"ipa-z-score-activation-calculation","dir":"Reference","previous_headings":"","what":"IPA z-score activation calculation","title":"Add directionality to pathway enrichment — add_pathway_direction","text":"IPA Activation \"z-score\" uses following formula:   Citation IPA formula: https://doi.org/10.1093/bioinformatics/btt703 referenced: IPA FAQ - Statistical Calculations","code":"z <- (N_genes_up - N_genes_down) / sqrt(N_genes_up + N_genes_down)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/add_pathway_direction.html","id":"direction-calculation-deprecated-","dir":"Reference","previous_headings":"","what":"Direction calculation (deprecated)","title":"Add directionality to pathway enrichment — add_pathway_direction","text":"deprecated calculation \"direction\" shown :","code":"direction_1 <- (N_genes_up - N_genes_down) / (N_genes); # then log2(1.2 + x) transformed direction <- log2(1.2 + abs(direction_1)) * sign(direction_1)"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_nodeset.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Cnet node set — adjust_cnet_nodeset","title":"Adjust Cnet node set — adjust_cnet_nodeset","text":"Adjust Cnet node set","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_nodeset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Cnet node set — adjust_cnet_nodeset","text":"","code":"adjust_cnet_nodeset(   g,   set_nodes = NULL,   x = 0,   y = 0,   percent_spacing = NULL,   expand = 0,   rotate_degrees = 0,   cnet_nodesets = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_nodeset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Cnet node set — adjust_cnet_nodeset","text":"g igraph Cnet plot, vertex attribute nodeType contains values \"Gene\" \"Set\", produced memIM2cnet(). set_nodes character vector one set names, defined names nodes nodeType=\"Set\" node nodeType=\"Gene\" connected. example set_nodes=c(\"\", \"B\") return Gene nodes connected Set nodes \"\" \"B\". Alternatively, one can refer cluster node name one member cluster, convenience option. x, y numeric indicating relative amount move nodes node set, based upon overall range x y values layout coordinates. percent_spacing numeric within node spacing percentage max x/y layout ranges. option preferred expand trying keep nodeset spacing consistent overall layout. general rule, use summarize_node_spacing(g)$nearest_within column 'Median' determine node spacing nodeset, adjust nodeset relatively consistent median spacing. expand numeric relative amount expand node coordinates, expand=0 expansion, expand=1 expand coordinates 100% distance center cluster, twice original distance; expand=-1 expand coordinates half distance center. rotate_degrees numeric value indicating rotation degrees adjust node coordinates, relative center coordinates. cnet_nodesets list optional provide known nodesets upfront, order avoid re-determining nodesets. Otherwise get_cnet_nodesets() called, large networks may introduce small time lag. verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_nodeset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Cnet node set — adjust_cnet_nodeset","text":"function intended help adjust node set, defined set \"Gene\" nodes connect \"Set\" nodes. nodes usually clustered together Cnet plot, can manipulated group using function. Use get_cnet_nodeset(g) get node sets Cnet igraph object. Specifically, function can used expand, rotate, move cluster nodes Cnet network layout. purpose usually help visual clarity plot, reduce node label overlaps.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_nodeset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Cnet node set — adjust_cnet_nodeset","text":"","code":"# the examples below are for internal data # and will be rewritten to work with example data if (1 == 2) { g <- mem_dmjdm_gp_20_plots_jikl$cnet_collapsed_set; set_nodes <- c(\"J\", \"L\") g2 <- adjust_cnet_nodeset(g, set_nodes=c(\"J\", \"L\"), expand=0.5)  jam_igraph(g) g2 <- adjust_cnet_nodeset(g, set_nodes=c(\"I\", \"K\", \"L\"), x=0.01, y=-0.01, expand=0.2) g2 <- adjust_cnet_nodeset(g2, set_nodes=c(\"I\", \"J\", \"K\", \"L\"), x=-0.08, y=-0.05, expand=0.2) g2 <- adjust_cnet_nodeset(g2, set_nodes=c(\"I\", \"L\"), x=-0.05, y=0.05, expand=0.3) g2 <- adjust_cnet_nodeset(g2, set_nodes=c(\"I\", \"J\", \"L\"), x=-0.02, y=0.03, expand=0.3) g2 <- adjust_cnet_nodeset(g2, set_nodes=c(\"I\", \"K\"), x=0.03, y=0.09, expand=0.) g2 <- adjust_cnet_nodeset(g2, set_nodes=c(\"I\", \"J\", \"K\"), x=0.02, y=-0.01, expand=0.) g2 <- adjust_cnet_nodeset(g2, set_nodes=c(\"I\", \"J\"), x=0.01, y=-0.00, expand=0.1) g2 <- adjust_cnet_nodeset(g2, set_nodes=c(\"J\"), x=-0.03, y=-0.02, expand=0.) jam_igraph(g2) }"},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_set_relayout_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Set nodes then relayout Gene nodes — adjust_cnet_set_relayout_gene","title":"Adjust Set nodes then relayout Gene nodes — adjust_cnet_set_relayout_gene","text":"Adjust Cnet Set nodes relayout Gene nodes","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_set_relayout_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Set nodes then relayout Gene nodes — adjust_cnet_set_relayout_gene","text":"","code":"adjust_cnet_set_relayout_gene(   g,   nodes = NULL,   x = 0,   y = 0,   use_grep = TRUE,   do_reorder = TRUE,   spread_labels = TRUE,   repulse = 4,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_set_relayout_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Set nodes then relayout Gene nodes — adjust_cnet_set_relayout_gene","text":"g igraph Cnet object nodes character vector one Set nodes. x, y numeric values passed nudge_igraph_node(). use_grep logical passed nudge_igraph_node(). do_reorder logical indicating whether nodes re-positioned within subcluster calling reorderIgraphNodes(). spread_labels logical indicating whether labels re-oriented around node calling spread_igraph_labels(). repulse numeric value passed layout_with_qfr() indicate repulsion force. Typical values range 3 loosely-packed nodes, 5 higher closely-packed nodes. verbose logical indicating whether print verbose output. ... additional arguments passed functions nudge_igraph_node(), layout_with_qfr(), spread_igraph_labels(), reorderIgraphNodes().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_cnet_set_relayout_gene.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Set nodes then relayout Gene nodes — adjust_cnet_set_relayout_gene","text":"function operates Cnet igraph object, distinguished node attribute \"nodeType\" value \"Gene\" Gene nodes, \"Set\" Set nodes. function intended help move Set node improve visual spacing nodes, re-positions Gene nodes using layout_with_qfr(), keeping Set nodes fixed positions. calls nudge_igraph_node() using arguments nodes,x,y, defines layout coordinates Set nodes constraints therefore allowed change calling layout_with_qfr(). Note Gene node coordinates allowed change, even Gene nodes included nodes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_polygon_border.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust polygon border to inner or outer edge — adjust_polygon_border","title":"Adjust polygon border to inner or outer edge — adjust_polygon_border","text":"Adjust polygon border inner outer edge Adjust rectangle border","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_polygon_border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust polygon border to inner or outer edge — adjust_polygon_border","text":"","code":"adjust_polygon_border(   x,   y = NULL,   type = \"inner\",   lwd_inch = 1/96,   inner_cex = 1.001,   lwd = par(\"lwd\"),   lwd_buffer = 0,   verbose = FALSE,   ... )  adjust_rect_border(   x,   y,   rectangles = NULL,   type = \"inner\",   lwd = par(\"lwd\"),   lwd_buffer = 0,   lwd_inch = 1/96,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_polygon_border.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust polygon border to inner or outer edge — adjust_polygon_border","text":"x numeric polygon coordinates along x-axis. Multiple polygons can supplied separating polygon NA, similar polygon() breaks coordinates separate polygons position missing values. y numeric polygon coordinates along x-axis. type character string indicating border displayed: \"inner\": polygon shrunk half border line width \"outer\": polygon expanded half border line width lwd_inch numeric conversion line width lwd units per inch, default lwd=1 defined 1/96 inch. inner_cex numeric minor adjustment calculations lwd numeric define intended line width resulting polygon border. default uses par(\"lwd\"). ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_polygon_border.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust polygon border to inner or outer edge — adjust_polygon_border","text":"list elements x y representing adjusted polygon coordinates. event input x y coordinates represent multiple polygons, output x y also NA values positioned polygon.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_polygon_border.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust polygon border to inner or outer edge — adjust_polygon_border","text":"function intends allow displaying polygon border line covers inner outer edge border . result, polygon border two adjacent polygons can displayed without overlapping . adjust_rect_border() convenience wrapper adjust_polygon_border() intended use graphics::symbols() form graphics::symbols(x, y, rectangles).","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/adjust_polygon_border.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust polygon border to inner or outer edge — adjust_polygon_border","text":"","code":"a <- head(seq(from=0, to=360, length.out=6), 3) + 90; xl <- round(10 * c(cos(a/180 * pi) * 5, 0)) / 10; y <- round(10 * sin(a/180 * pi) * 5 / 10); y <- y - min(y); yl <- c(y, y[3]); xr <- xl * -1; yr <- yl; lwdl <- 6; lwdr <- 6; lwdo <- 5; par(\"ljoin\"=\"mitre\",    \"lend\"=\"round\",    \"mar\"=c(3, 3, 1, 1)) plot(NULL, bty=\"L\",    xlim=c(-5, 30), ylim=c(-15, 10),    #xlim=c(20, 30), ylim=c(0, 10),    type=\"n\", asp=1, xlab=\"\", ylab=\"\") abline(h=c(0, -15), lwd=0.5, col=\"black\", xpd=FALSE)  polygon(x=xl, y=yl,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xr, y=yr,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) jamba::drawLabels(x=0, y=10, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Problem: Two adjacent polygon\\nborders overlap.\")  xy2l <- adjust_polygon_border(x=xl, y=yl, type=\"inner\", lwd=lwdl) xy2r <- adjust_polygon_border(x=xr, y=yr, type=\"inner\", lwd=lwdr)  # draw properly resized polygon with inner border polygon(x=xy2l$x + 25, y=xy2l$y,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x + 25, y=xy2r$y,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) jamba::drawLabels(x=25, y=10, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Solution: Adjust polygons so adjacent\\ninner borders are both visible.\")  # draw border around the pentagon # except notice the border also overlaps the original polygon borders polygon(x=xy2l$x, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) xy <- list(x=c(head(xl, 3), rev(head(xr, 3))),    y=c(head(yl, 3), rev(head(yr, 3))) - 15) polygon(x=xy$x, y=xy$y, col=NA, border=\"gold\", lwd=lwdo) jamba::drawLabels(x=0, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Problem: The overall polygon border\\noverlaps the inner polygon borders.\")  # adjust for outer border xy2 <- adjust_polygon_border(x=xy$x, y=xy$y, type=\"outer\", lwd=lwdo) # draw properly resized polygon with inner border polygon(x=xy2l$x + 25, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x + 25, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) # now draw outer border polygon(x=xy2$x + 25, y=xy2$y,    col=NA, border=\"gold\", lwd=lwdo) jamba::drawLabels(x=25, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Solution: Both the inner and outer\\nborders are visible.\")    # another example using different border line widths lwdl <- 10; lwdr <- 5; lwdo <- 6; plot(NULL, bty=\"L\",    xlim=c(-5, 30), ylim=c(-15, 10),    type=\"n\", asp=1, xlab=\"\", ylab=\"\") abline(h=c(0, -15), lwd=0.5, col=\"black\", xpd=FALSE)  polygon(x=xl, y=yl,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xr, y=yr,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) jamba::drawLabels(x=0, y=10, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Problem: Two adjacent borders\\noverlap, and the line widths\\nare not aligned.\")  xy2l <- adjust_polygon_border(x=xl, y=yl, type=\"inner\", lwd=lwdl) xy2r <- adjust_polygon_border(x=xr, y=yr, type=\"inner\", lwd=lwdr)  # draw properly resized polygon with inner border polygon(x=xy2l$x + 25, y=xy2l$y,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x + 25, y=xy2r$y,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) jamba::drawLabels(x=25, y=10, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Solution: Inner borders are both visible\\nand well-aligned.\")  # draw border around the pentagon # except notice the border also overlaps the original polygon borders polygon(x=xy2l$x, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) xy <- list(x=c(head(xl, 3), rev(head(xr, 3))),    y=c(head(yl, 3), rev(head(yr, 3))) - 15) polygon(x=xy$x, y=xy$y, col=NA, border=\"gold\", lwd=lwdo) jamba::drawLabels(x=0, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Problem: The overall border still\\noverlaps the inner polygon borders.\")  # adjust for outer border xy2 <- adjust_polygon_border(x=xy$x, y=xy$y, type=\"outer\", lwd=lwdo) # draw properly resized polygon with inner border polygon(x=xy2l$x + 25, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x + 25, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) # now draw outer border polygon(x=xy2$x + 25, y=xy2$y,    col=NA, border=\"gold\", lwd=lwdo) jamba::drawLabels(x=25, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Solution: The inner and outer\\nborders are all visible.\")    # final example showing how to draw an additional border lwdl <- 10; lwdr <- 5; lwdo <- 6; plot(NULL, bty=\"L\",    xlim=c(-5, 30), ylim=c(-15, 10),    type=\"n\", asp=1, xlab=\"\", ylab=\"\") abline(h=c(0, -15), lwd=0.5, col=\"black\", xpd=FALSE)  # vanilla polygon border polygon(x=xy$x, y=xy$y + 15,    col=\"indianred3\", border=\"darkorchid4\", lwd=lwdo) jamba::drawLabels(x=0, y=10, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Problem: A vanilla polygon is drawn,\\nwe want to add a border.\") # draw the same polygon polygon(x=xy$x + 25, y=xy$y + 15,    col=\"indianred3\", border=\"darkorchid4\", lwd=lwdo) # add another outer border xy3 <- adjust_polygon_border(x=xy$x, y=xy$y, type=\"outer\", lwd=lwdo,    lwd_buffer=lwdo / 2) polygon(x=xy3$x + 25, y=xy3$y + 15,    col=NA, border=\"skyblue\", lwd=lwdo) xy4 <- adjust_polygon_border(x=xy$x, y=xy$y, type=\"inner\", lwd=lwdo,    lwd_buffer=lwdo / 2) polygon(x=xy4$x + 25, y=xy4$y + 15,    col=NA, border=\"yellow\", lwd=lwdo) jamba::drawLabels(x=25, y=10, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Solution: Use 'lwd_buffer' to adjust\\nfor the existing border line width.\")  # more complicated example with inner and outer borders # draw properly resized polygon with inner border polygon(x=xy2l$x, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) # now draw outer border xy5 <- adjust_polygon_border(x=xy$x, y=xy$y, type=\"outer\", lwd=lwdo) polygon(x=xy5$x, y=xy5$y,    col=NA, border=\"skyblue\", lwd=lwdo) jamba::drawLabels(x=0, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Problem: A polygon with inner and\\nouter borders is drawn,\\nwe want to add more borders.\")  # draw same polygons polygon(x=xy2l$x + 25, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x + 25, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) polygon(x=xy5$x + 25, y=xy5$y,    col=NA, border=\"skyblue\", lwd=lwdo) # add inner borders xy6 <- adjust_polygon_border(x=xl, y=yl, type=\"inner\", lwd=lwdl,    lwd_buffer=lwdl) # note col=\"#FFFFFF01\" is required for the final sharp polygon corner polygon(x=c(xy6$x, xy6$x[c(0)]) + 25,    y=c(xy6$y, xy6$y[c(0)]) - 15,    col=\"#FFFFFF01\", border=\"yellow\", lwd=lwdl) points(x=c(xy6$x, xy6$x[c(0)]) + 25,lend=\"butt\",    y=c(xy6$y, xy6$y[c(0)]) - 15,    pch=as.character(seq_along(c(xy6$x, xy6$x[c(0)]))),    col=\"black\", cex=0.5) xy7 <- adjust_polygon_border(x=xr, y=yr, type=\"inner\", lwd=lwdr,    lwd_buffer=lwdr) polygon(x=c(xy7$x, xy7$x[c(0)]) + 25,    y=c(xy7$y, xy7$y[c(0)]) - 15,    col=\"#FFFFFF01\", border=\"yellow\", lwd=lwdr) # new outer border xy8 <- adjust_polygon_border(x=xy$x, y=xy$y, type=\"outer\", lwd=lwdo,    lwd_buffer=lwdo) polygon(x=xy8$x + 25, y=xy8$y,    col=\"#FFFFFF01\", border=\"red\", lwd=lwdo) jamba::drawLabels(x=25, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Solution: Use 'lwd_buffer' with\\nproper line widths.\\n(red and yellow)\")   # show the effect of col=NA plot(NULL, bty=\"L\",    xlim=c(-10, 25), ylim=c(-15, -5),    type=\"n\", asp=1, xlab=\"\", ylab=\"\") abline(h=c(0, -15), lwd=0.5, col=\"black\", xpd=FALSE) # note that adjusted borders must be recalculated for new xlim,ylim xy2l <- adjust_polygon_border(x=xl, y=yl, type=\"inner\", lwd=lwdl) xy2r <- adjust_polygon_border(x=xr, y=yr, type=\"inner\", lwd=lwdr) xy5 <- adjust_polygon_border(x=xy$x, y=xy$y, type=\"outer\", lwd=lwdo) # draw polygons polygon(x=xy2l$x, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) polygon(x=xy5$x, y=xy5$y,    col=NA, border=\"skyblue\", lwd=lwdo) polygon(x=xy2l$x + 15, y=xy2l$y - 15,    col=\"indianred3\", border=\"navy\", lwd=lwdl) polygon(x=xy2r$x + 15, y=xy2r$y - 15,    col=\"dodgerblue\", border=\"darkorchid3\", lwd=lwdr) polygon(x=xy5$x + 15, y=xy5$y,    col=NA, border=\"skyblue\", lwd=lwdo) # add inner borders xy6 <- adjust_polygon_border(x=xl, y=yl, type=\"inner\", lwd=lwdl*2,    lwd_buffer=lwdl) # note col=\"#FFFFFF01\" is required for the final sharp polygon corner polygon(x=c(xy6$x, xy6$x[c(0)]) + 0,    y=c(xy6$y, xy6$y[c(0)]) - 15,    col=NA, border=\"yellow\", lwd=lwdl*2) polygon(x=c(xy6$x, xy6$x[c(0)]) + 15,    y=c(xy6$y, xy6$y[c(0)]) - 15,    col=\"#FFFFFF01\", border=\"yellow\", lwd=lwdl*2) jamba::drawLabels(x=0, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Problem: Using col=NA causes the polygon corner\\nto be 'ended', not 'joined'.\") jamba::drawLabels(x=15, y=-5, adjPreset=\"top\",    drawBox=FALSE,    labelCex=0.8,    txt=\"Solution: Use col='#FFFFFF01' to force\\nproper sharp polygon corners.\")     # example with multiple polygons vectorized # generate an n-pointed star n <- 3; stars <- lapply(seq_len(n), function(i){    angle <- seq(from=(i-1)*pi*2/n, to=i*pi*2/n, length=3);    angle <- c(angle, angle[c(1, 1)], NA) + (n-2) * pi/(n * 2);    xp <- cos(angle) * c(1, 2, 1, 0, 1, 1)    yp <- sin(angle) * c(1, 2, 1, 0, 1, 1)    cbind(x=xp, y=yp) }) star_colors <- colorjam::rainbowJam(n) plot(NULL, bty=\"L\",    type=\"n\", asp=1, xlim=c(-2, 7), ylim=c(-6, 2.2),    xlab=\"\", ylab=\"\") polygon(jamba::rbindList(stars),    col=jamba::alpha2col(star_colors, alpha=0.5),    border=star_colors,    lwd=10) points(jamba::rbindList(stars), pch=20) jamba::drawLabels(x=0, y=-1.5, adjPreset=\"bottom\",    drawBox=FALSE,    labelCex=0.8,    txt=paste0(\"Problem: Base R polygons\\n\",       \"have overlapping borders.\\n\",       \"Black points show each corner.\"))  stars_xy <- jamba::rbindList(stars) stars_xy[,1] <- stars_xy[,1] + 5; stars_xy_inner <- adjust_polygon_border(x=stars_xy, lwd=10) polygon(stars_xy_inner,    col=jamba::alpha2col(star_colors, alpha=0.5),    border=star_colors,    lwd=10) jamba::drawLabels(x=5, y=-1.5, adjPreset=\"bottom\",    drawBox=FALSE,    labelCex=0.8,    txt=paste0(\"Solution: Polygon inner borders\\n\",       \"display each border color.\\n\",       \"And the triangle is properly sized!)\"))  stars_xy_inner[[2]] <- stars_xy_inner[[2]] - 5; polygon(x=jamba::rbindList(stars)[,1] + 5,    y=jamba::rbindList(stars)[,2] - 5,    col=\"white\",    border=\"black\",    lwd=2) polygon(stars_xy_inner,    col=jamba::alpha2col(star_colors, alpha=0.5),    border=star_colors,    lwd=10) # the inner border adjustment can be vectorized stars_xy_inner2 <- adjust_polygon_border(x=stars_xy_inner[[1]],    y=stars_xy_inner[[2]], lwd=5, lwd_buffer=5) polygon(stars_xy_inner2,    col=NA,    border=\"#FFFFEE88\",    lwd=5)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_cnet_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Cnet border color by directionality — apply_cnet_direction","title":"Apply Cnet border color by directionality — apply_cnet_direction","text":"Apply Cnet border color directionality","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_cnet_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Cnet border color by directionality — apply_cnet_direction","text":"","code":"apply_cnet_direction(   cnet,   hitim = NULL,   col = circlize::colorRamp2(breaks = c(-1, 0, 1), colors = c(\"blue\", \"grey80\",     \"firebrick3\")),   col_l_max = 80,   hide_solo_pie = TRUE,   frame_blank = default_igraph_values()$vertex$frame.color,   frame_lwd_blank = 0.2,   border_lwd = 2,   do_reorder = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_cnet_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Cnet border color by directionality — apply_cnet_direction","text":"cnet igraph object node attribute \"pie.color\" populated list character vectors, named enrichment. enrichment names match colnames(hitim). hitim numeric matrix values centered zero change, positive values +1 -regulation, negative values -1 -regulation. values converted color using color function col. col function takes numeric input assigns color. default assigns red positive values, blue negative values, white zero, using colorjam::col_div_xf(1.2). col_l_max numeric maximum HCL Lightness permitted output colors, example middle color \"RdBu_r\" nearly white, may preferable apply darker grey color. hide_solo_pie logical indicating whether single-color border applied \"frame.color\" individual \"pie.border\" entries. hide_solo_pie=TRUE wedges (one ) pie.border color, pie.border defined NA, instead frame.color assigned color. pie.lwd frame.lwd assigned border_lwd, since pie.border NA rendered, frame.color rendered. hide_solo_pie=FALSE pie wedge border color assigned pie.border, frame.color assigned frame_blank, frame.lwd assigned frame_lwd_blank useful displaying small outer frame node. frame_blank character string define color used \"frame.color\" colors defined \"pie.border\". case, frame drawn around inner pie.border colors, serves add visual clarity. frame border can blank (frame_blank=\"transparent\") can thinner line, controlled frame_lwd_blank=0.2. default, default igraph vertex frame.color used, defined default_igraph_values()$vertex$frame.color. frame_lwd_blank numeric line width nodes \"blank\" frame, means pie.border colors defined. case frame border can invisible (frame_lwd_blank=0) thin line (default frame_lwd_blank=0.2) surround inner borders drawn pie.border. border_lwd numeric line width used whenever node matched rownames(hitim). colors applied pie.color, border defined pie.lwd. colors applied frame.color, border defined frame.lwd. (Soon become frame.width.) do_reorder logical indicating whether call reorder_igraph_nodes() resulting igraph, border color can used sort conditions. Note do_reorder=TRUE, relevant arguments passed ... reorder_igraph_nodes() : colorV - controls expected order colors, supplied known upfront. sortAttributes - usually contains appropriate default values nodeSortBy - usually contains appropriate default values orderByAspect=TRUE - controls whether left-right top-bottom order affected aspect ratio nodeset. ... additional arguments passed reorder_igraph_nodes() do_reorder=TRUE.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_cnet_direction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Cnet border color by directionality — apply_cnet_direction","text":"function specifically requires \"pie.color\" node attribute cnet object igraph populated list colors whose name enrichment, matches colnames(hitim) supplied hit incidence matrix. node names V(cnet)$name also must match rownames(hitim), otherwise \"pie.border\" \"coloredrect.border\" assigned previous value. case \"frame.color\" retains original value. function may run multiple times different hitim, example using geneIMdirection enrichIMdirection two steps. multiple colors given node, populated node attributes \"pie.border\" list form. nodes, attribute \"frame.color\" set NULL displayed top pie wedge colors. matching rownames(hitim), colors identical, \"pie.border\" populated NULL, pie wedges show color. Also single-wedge pie nodes, process avoids drawing small line top node. Instead attribute \"frame.color\" populated one unique border color, outer border colorized.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_nodeset_spacing.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply minimum node spacing for each Cnet node set — apply_nodeset_spacing","title":"Apply minimum node spacing for each Cnet node set — apply_nodeset_spacing","text":"Apply minimum node spacing Cnet node set","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_nodeset_spacing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply minimum node spacing for each Cnet node set — apply_nodeset_spacing","text":"","code":"apply_nodeset_spacing(   cnet,   percent_spacing = 3,   apply_negative = FALSE,   metric = c(\"median\", \"minimum\"),   nodesets = NULL,   tolerance = 1.05,   cnet_nodesets = NULL,   debug = FALSE,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_nodeset_spacing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply minimum node spacing for each Cnet node set — apply_nodeset_spacing","text":"cnet igraph object contains attribute \"nodeType\" values nodeType=c(\"Gene\", \"Set\"), consistent use get_cnet_nodeset() adjust_cnet_nodeset(). node layout expected stored igraph::graph_attr(cnet, \"layout\"). percent_spacing numeric indicating target spacing relation maximum x-axis y-axis span layout coordinates. example percent_spacing=4 require median spacing nodes nodeset least 4 percent larger x-axis y-axis ranges layout input cnet. apply_negative logical indicating whether shrink node spacing spacing larger target percent spacing. default apply_negative=FALSE allows nodes exceed spacing, adjusts node spacing nodeset threshold. metric character string indicating metric used summarize nodeset spacing: \"median\" - takes median spacing nodes nodeset, end result least half nodes percent_spacing distance, \"typical distance nodes\". option useful may one node pair close together, nodes consistent distance nearest node neighbor. \"minimum\" - takes minimum spacing nodes nodeset, end result requires nodes least percent_spacing distance. function - function can provided takes numeric vector node distances, produces single numeric summary value, scaled relative maximum xy axis range. option allow using mean(), quantile function function(x){quantile(x, 0.3)}. nodesets character optional subset nodesets adjust, default nodesets=NULL adjust nodesets. Values can specified either form nodeset names, one members nodeset. tolerance numeric value used apply small tolerance distance threshold, example default tolerance=1.05 requires nodes 5% lower actual threshold adjusting nodes. additional activation threshold experimental may necessary. mainly intended reduce calculations nodesets small rounding error acceptable, can happen overall plot range adjusted rounds small node coordinate adjustments like function, nudge_igraph_node(), apply_nodeset_spacing(), adjust_cnet_set_relayout_gene(). cnet_nodesets list optional provide known nodesets upfront, order avoid re-determining nodesets. debug logical indicating whether print debug information without adjusting nodeset spacing. option useful see summary information nodeset spacing choosing percent_spacing threshold. verbose logical indicating whether print verbose output. output includes text printed debug=TRUE except nodes adjusted debug=FALSE. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_nodeset_spacing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply minimum node spacing for each Cnet node set — apply_nodeset_spacing","text":"igraph Cnet object, whose nodes adjusted according arguments given.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/apply_nodeset_spacing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply minimum node spacing for each Cnet node set — apply_nodeset_spacing","text":"function automates process spacing nodesets Cnet plot calling adjust_cnet_nodeset() nodesets whose median nearest node distance threshold. default nodes must least percent_spacing distance apart, relative maximum x-axis y-axis layout coordinate range. Roughly speaking, nodes clearly visible distance nodes least 3 percent coordinate range. Nodes compressed distance unless using argument apply_negative=TRUE. Note function detect two clusters overlap. specific layout adjustments use adjust_cnet_nodeset(). future, function may attempt re-position nodesets relative , process tends iterative guaranteed solution. nodeset contains one node, calculated distance reported NA verbose=TRUE debug=TRUE. However internal purposes nodeset treated nodeset spacing exactly percent_spacing subsequent adjustments performed nodeset.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/ashape.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha shape calculation — ashape","title":"Alpha shape calculation — ashape","text":"Alpha shape calculation set points, alpha threshold","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/ashape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha shape calculation — ashape","text":"","code":"ashape(x, y = NULL, alpha, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/ashape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha shape calculation — ashape","text":"x, y numeric vector coordinate points. alpha numeric alpha threshold use. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/ashape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha shape calculation — ashape","text":"ashape object, list containing: edges: x,y coordinates Delauney triangulation alpha-shape. length: length alpha-shape. alpha: value alpha used. alpha.extremes: integer index points alpha-extremes. delvor.obj: delvor object Delauney/Voronoi supporting data. x: x,y coordinates input data","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/ashape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alpha shape calculation — ashape","text":"function primarily intended called make_point_hull(), since function also iterates alpha values finds suitable, successful, threshold.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/ashape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha shape calculation — ashape","text":"","code":"n <- 300 theta <- runif(n, 0, 2*pi) r <- sqrt(runif(n, 0.25^2, 0.5^2)) x <- cbind(0.5+r*cos(theta), 0.5+r*sin(theta)) alpha <- 0.1 ashape.obj <- ashape(x, alpha=alpha)  plot(ashape.obj$x, asp=1) segments(x0=ashape.obj$edges[, \"x1\"], x1=ashape.obj$edges[, \"x2\"],    y0=ashape.obj$edges[, \"y1\"], y1=ashape.obj$edges[, \"y2\"])"},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_angles.html","id":null,"dir":"Reference","previous_headings":"","what":"Average geometric angles — avg_angles","title":"Average geometric angles — avg_angles","text":"Average geometric angles","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_angles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average geometric angles — avg_angles","text":"","code":"avg_angles(x, w = 1, maxAngle = 360, na.rm = TRUE, ...)"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_angles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average geometric angles — avg_angles","text":"","code":"x <- c(90, 180); avg_angles(x); #> [1] 135"},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_colors_by_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Average colors by list — avg_colors_by_list","title":"Average colors by list — avg_colors_by_list","text":"Average colors list","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_colors_by_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average colors by list — avg_colors_by_list","text":"","code":"avg_colors_by_list(   x,   useWeightedHue = TRUE,   Cmethod = c(\"mean\", \"max\", \"min\"),   Lmethod = c(\"mean\", \"max\", \"min\"),   c_min = 4,   grey_hue = 359,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_colors_by_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average colors by list — avg_colors_by_list","text":"x list character vectors. useWeightedHue logical indicating whether weight hue wheel using colorjam::h2hw() colorjam::hw2h() effectively converts RGB angles RYB (red-yellow-blue), therefore makes additive color blending sensible. Specifically, \"yellow blue makes green\". ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_colors_by_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average colors by list — avg_colors_by_list","text":"vector R colors.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_colors_by_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Average colors by list — avg_colors_by_list","text":"simple wrapper function intended provide rapid average color, supplied list color vectors hex R color name format. function simply converts color HCL, determines color hue angle (0 360) calculates average angular color hue using avg_angles(), applies maximum C L values determine new color. deliberately intended ignore muddiness averaging multiple colors. Colors modified elements 2 entries. method also operates unique set colors, substantially efficient large lists contain unique subsets colors.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/avg_colors_by_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average colors by list — avg_colors_by_list","text":"","code":"x <- list(input1=c(red=\"red\", blue=\"blue\"),    input2=c(blue=\"blue\", gold=\"gold\"),    input3=c(red=\"red\", yellow=\"yellow\")); x_avg <- avg_colors_by_list(x, useWeightedHue=TRUE); jamba::showColors(list(    input1=c(x[[1]], x_avg[1]),    input2=c(x[[2]], x_avg[2]),    input2=c(x[[3]], x_avg[3])),    main=\"With weighted hue\")   x_avg <- avg_colors_by_list(x, useWeightedHue=FALSE); jamba::showColors(list(    input1=c(x[[1]], x_avg[1]),    input2=c(x[[2]], x_avg[2]),    input2=c(x[[3]], x_avg[3])),    main=\"Without weighted hue\")"},{"path":"https://jmw86069.github.io/multienrichjam/reference/bulk_cnet_adjustments.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk Cnet plot adjustments — bulk_cnet_adjustments","title":"Bulk Cnet plot adjustments — bulk_cnet_adjustments","text":"Bulk Cnet plot adjustments","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/bulk_cnet_adjustments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk Cnet plot adjustments — bulk_cnet_adjustments","text":"","code":"bulk_cnet_adjustments(   g,   nodeset_adj,   node_adj,   apply_negative = TRUE,   nodesets = NULL,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/bulk_cnet_adjustments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk Cnet plot adjustments — bulk_cnet_adjustments","text":"g igraph object expected Cnet object vertex attribute 'nodeType' containing values 'Gene' 'Set'. nodeset_adj data.frame recognizing five colnames: nodeset: character name nodeset x,y: numeric x,y coordinate adjustments add existing coordinates rotate_degrees: numeric angle degrees rotate existing nodes percent_spacing: absolute spacing enforce nodes nodeset. node_adj data.frame recognizing five colnames: node: character name node x,y: numeric x,y coordinate adjustments add existing coordinates label.dist: numeric value add existing label distance. label.degree: numeric angle degrees add existing angle. apply_negative logical whether allow shrinking nodeset spacing. nodesets list output get_cnet_nodesets(), list named nodeset, containing character vector node names. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/bulk_cnet_adjustments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bulk Cnet plot adjustments — bulk_cnet_adjustments","text":"igraph object applying adjustments.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/bulk_cnet_adjustments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bulk Cnet plot adjustments — bulk_cnet_adjustments","text":"function applies series adjustments nodesets nodes Cnet igraph object. Nodesets adjusted first, nodes adjusted afterward. order important x,y coordinates may altered nodeset first, node adjustment applied. x,y coordinate adjustments performed using scaled units, using max x- y-range plot layout. Cnet igraph plots assumed use asp=1 enforce aspect ratio 1, order maintain intended visual distances used layout algorithms. Therefore possible expand plot layout overall scale wider , thereby affecting scaled unit space. event, function intended replicated effect done launch_shinycat().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/call_fn_ellipsis_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Call function using safe ellipsis arguments — call_fn_ellipsis_deprecated","title":"Call function using safe ellipsis arguments — call_fn_ellipsis_deprecated","text":"Call function using safe ellipsis arguments","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/call_fn_ellipsis_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call function using safe ellipsis arguments — call_fn_ellipsis_deprecated","text":"","code":"call_fn_ellipsis_deprecated(FUN, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/call_fn_ellipsis_deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call function using safe ellipsis arguments — call_fn_ellipsis_deprecated","text":"FUN function called arguments ... ... arguments passed FUN() safe manner.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/call_fn_ellipsis_deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call function using safe ellipsis arguments — call_fn_ellipsis_deprecated","text":"output FUN() called relevant named arguments ellipsis ...","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/call_fn_ellipsis_deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Call function using safe ellipsis arguments — call_fn_ellipsis_deprecated","text":"function deprecated, instead please use jamba::call_fn_ellipsis(). function wrapper function intended help pass ellipsis arguments ... parent function external function safe way. include arguments ... recognized external function. external function FUN arguments formals() includes ellipsis ..., ... passed -without change. external function FUN arguments formals() include ellipsis ..., named arguments ... recognized FUN passed, defined names(formals(FUN)). Note arguments must named.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/call_fn_ellipsis_deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call function using safe ellipsis arguments — call_fn_ellipsis_deprecated","text":"","code":"new_mean <- function(x, trim=0, na.rm=FALSE) {    mean(x, trim=trim, na.rm=na.rm) } x <- c(1, 3, 5, NA); new_mean(x, na.rm=TRUE); #> [1] 3 # throws an error as expected (below) # new_mean(x, na.rm=TRUE, color=\"red\");  call_fn_ellipsis_deprecated(new_mean, x=x, na.rm=TRUE, color=\"red\") #> [1] 3 # throws an error as expected (below) # call_fn_ellipsis_deprecated(new_mean, x=x, color=\"red\")"},{"path":"https://jmw86069.github.io/multienrichjam/reference/cell_fun_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"ComplexHeatmap cell function with bivariant color — cell_fun_bivariate","title":"ComplexHeatmap cell function with bivariant color — cell_fun_bivariate","text":"ComplexHeatmap cell function bivariant color","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cell_fun_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ComplexHeatmap cell function with bivariant color — cell_fun_bivariate","text":"","code":"cell_fun_bivariate(   m,   prefix = \"\",   suffix = \"\",   cex = 1,   col_hm,   outline = FALSE,   outline_style = c(\"none\", \"darker\", \"contrast\", \"lighter\", \"black\", \"same\"),   abbrev = FALSE,   show = NULL,   rot = 0,   sep = \"\\n\",   mcolor = NULL,   pch = NULL,   size_fun = NULL,   size_by = 1,   grid_color = \"grey80\",   type = c(\"bivariate\", \"univariate\"),   invert = FALSE,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/cell_fun_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ComplexHeatmap cell function with bivariant color — cell_fun_bivariate","text":"m list 2 matrix objects. first two matrix objects used bivariate color. prefix, suffix character vectors define prefix suffix value m cell. cex numeric adjustment fontsize used label col_hm function whose first two arguments accept numeric values, returns single color. Note mcolor provided, argument ignored. outline logical indicating whether draw outline around heatmap cell outline_style character string indicating type outline draw, also requires outline=TRUE. Options: none: uses outline even outline=TRUE darker: always uses darker color (black) contrast: uses contrasting color setTextContrastColor() lighter: always uses lighter color (white) black: always uses \"black\" : use color fill color abbrev logical indicating whether numeric values abbreviated using jamba::asSize(..., kiloSize=1000) effectively reduces large numbers k thousands, M millions (M Mega), G billions (G Giga), etc. show numeric indicating list elements m used formulate cell label, NULL use label. rot numeric rotation degrees, rotate labels inside heatmap cell. Mainly useful heatmaps extremely tall cells, use rot=90 vertical text. sep character string used separator multiple labels inside cell, used show one value. mcolor character matrix R colors, nrow() ncol() matrix m. mcolor supplied, colors used directly, col_hm used. pch numeric point type, used size_fun also defined. Together arguments allow customized points. size_fun function used define point size, pch also defined. Together arguments allow customized points. grid_color character valid R color used style=\"dotplot\" draw lines center cell. type character string indicating whether color function uses bivariate univariate logic. argument intended allow function used scenarios consistency. invert logical indicating whether invert color fill, cell filled color, circle drawn empty top. ... additional arguments passed col_hm() allow custom options relevant function.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cell_fun_bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ComplexHeatmap cell function with bivariant color — cell_fun_bivariate","text":"function serves convenient method use bivariate color scale (biscale) color heatmap cells. See: https://kwstat.github.io/pals/ https://nowosad.github.io/post/cbc-bp2/ https://cran.r-project.org/web/packages/biscale/vignettes/biscale.html function takes two numeric data matrices, color function accepts two numeric values input returns color. function can also optionally display text label inside heatmap cell, use argument show indicate matrix matrices m use label.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/cell_fun_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ComplexHeatmap cell function with bivariant color — cell_fun_bivariate","text":"","code":"set.seed(12); m <- matrix(rnorm(36)*2.5, ncol=4) colnames(m) <- LETTERS[1:4] rownames(m) <- letters[1:9] m2 <- m; m2[] <- abs(rnorm(36)*3); mcolor <- matrix(ncol=3,    c(\"white\", \"white\", \"white\",    \"royalblue4\", \"gold\", \"red\"),    byrow=TRUE); col_bivariate <- colorRamp2D(    column_breaks=seq(from=-2, to=2, length.out=3),    row_breaks=seq(from=0, to=5, length.out=2),    mcolor); display_colorRamp2D(col_bivariate)   # the heatmap can be created in one step hm <- ComplexHeatmap::Heatmap(m * m2,    border=TRUE,    col=col_bivariate,    heatmap_legend_param=list(       color_bar=\"discrete\",       border=TRUE,       at=-4:4),    cell_fun=cell_fun_bivariate(list(m, m2),       col_hm=col_bivariate,       prefix=c(\"-log10P: \", \"z-score: \"),       show=2:1),    show_heatmap_legend=FALSE, )  lgds <- make_legend_bivariate(col_bivariate,    ylab=\"-log10pvalue\",    xlab=\"z-score\"); #> Loading required namespace: gridtext ComplexHeatmap::draw(hm, annotation_legend_list=lgds)   lgds2 <- make_legend_bivariate(col_bivariate,    row_breaks=seq(from=0, to=2, by=0.25),    ylab=\"-log10pvalue\"); ComplexHeatmap::draw(hm, annotation_legend_list=lgds2)   # heatmap using point circles ctmax <- 6; point_size_max <- 12; point_size_min <- 1; size_fun_custom <- approxfun(    x=c(1, ctmax),    yleft=0,    ties=\"ordered\",    yright=point_size_max,    y=c(1,       point_size_max)); ct_ticks <- seq(from=0, to=6); ct_tick_sizes <- size_fun_custom(ct_ticks);  hm2 <- ComplexHeatmap::Heatmap(m * m2,    border=TRUE,    col=col_bivariate,    heatmap_legend_param=list(       color_bar=\"discrete\",       border=TRUE,       at=-4:4),    cell_fun=cell_fun_bivariate(list(m, m2),       pch=21,       size_fun=size_fun_custom,       size_by=2,       outline_style=\"black\",       col_hm=col_bivariate,       prefix=c(\"-log10P: \", \"z-score: \"),       show=NULL),    show_heatmap_legend=FALSE, ) ComplexHeatmap::draw(hm2, annotation_legend_list=lgds)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/check_Mem.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Mem object — check_Mem","title":"Check Mem object — check_Mem","text":"Check whether Mem object valid.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/check_Mem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Mem object — check_Mem","text":"","code":"check_Mem(object)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/check_Mem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Mem object — check_Mem","text":"object Mem object","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/check_Mem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Mem object — check_Mem","text":"requires: slotName(object): \"memIM\", \"enrichIM\", \"geneIM\", \"enrichList\" object@memIM inherit \"matrix\" object@enrichIM inherit \"matrix\" object@geneIM inherit \"matrix\" colnames(object@memIM) equal rownames(object@enrichIM) rownames(object@memIM) equal colnames(object@geneIM) names(enrichList) equal colnames(object@enrichIM) General guidance Mem objects: TBD","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Cnet igraph as a data.frame — cnet2df","title":"Summarize Cnet igraph as a data.frame — cnet2df","text":"Summarize Cnet igraph data.frame","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Cnet igraph as a data.frame — cnet2df","text":"","code":"cnet2df(g, getNeighbors = TRUE, checkSubsets = getNeighbors, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Cnet igraph as a data.frame — cnet2df","text":"g igraph object containing Cnet data, specifically vertex attribute name \"nodeType\" values \"Set\" \"Gene\", \"Set\" nodes connected \"Gene\" nodes. getNeighbors logical indicating whether include connected neighbor node names. checkSubsets logical indicating whether test \"Set\" nodes determine neighbors represented another \"Set\" node. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Cnet igraph as a data.frame — cnet2df","text":"data.frame node name, label, degree (number edges), membership (based upon connected component), getNeighbors=TRUE includes comma-delimited names neighboring nodes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Cnet igraph as a data.frame — cnet2df","text":"function provides data.frame summary igraph object containing \"Cnet\" data, including vertex attribute \"nodeType\" values \"Set\" \"Gene\", \"Set\" nodes connected \"Gene\" nodes. data.frame intended provide convenient method subsetting nodes, typically based upon connected cluster, minimum number edges per node. example, filter connected component containing node interest, filter \"Set\" nodes one \"Gene\".","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2im.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Cnet igraph to incidence matrix — cnet2im","title":"Convert Cnet igraph to incidence matrix — cnet2im","text":"Convert Cnet igraph incidence matrix","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2im.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Cnet igraph to incidence matrix — cnet2im","text":"","code":"cnet2im(g = NULL, df = NULL, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2im.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Cnet igraph to incidence matrix — cnet2im","text":"g igraph object containing Cnet data, specifically vertex attribute name \"nodeType\" values \"Set\" \"Gene\", \"Set\" nodes connected \"Gene\" nodes. df data.frame optional input instead g, usually result previous call cnet2df(). ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2im.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Cnet igraph to incidence matrix — cnet2im","text":"numeric matrix colnames defined \"Set\" node names, rownames defined \"Gene\" node names.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnet2im.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Cnet igraph to incidence matrix — cnet2im","text":"function takes igraph object containing \"Cnet\" data, including vertex attribute \"nodeType\" values \"Set\" \"Gene\", \"Set\" nodes connected \"Gene\" nodes. returns incidence matrix whose columns \"Set\" node names whose rows \"Gene\" node names.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnetplotJam.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a cnetplot igraph object — cnetplotJam","title":"Create a cnetplot igraph object — cnetplotJam","text":"Create cnetplot igraph object","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnetplotJam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a cnetplot igraph object — cnetplotJam","text":"","code":"cnetplotJam(   x,   showCategory = 5,   categorySize = \"geneNum\",   nodeLabel = c(\"Name\", \"Description\", \"ID\"),   foldChange = NULL,   fixed = TRUE,   doPlot = FALSE,   categoryColor = \"#E5C494\",   geneColor = \"#B3B3B3\",   normalizeGeneSize = TRUE,   labelCex = 0.45,   colorSub = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnetplotJam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a cnetplot igraph object — cnetplotJam","text":"x enrichResults object showCategory integer number categories include resulting Cnet plot. categorySize character value indicating size pathway nodes, \"geneNum\" sizes nodes number genes pathway, \"pvalue\" sizes nodes enrichment P-value using format -log10(pvalue). nodeLabel character value indicating colname .data.frame(x) use node label. Depending upon source data, may alternative colnames suitable node labels. foldChange numeric vector named gene, NULL. supplied, vector names must use nomenclature x input object, can inspected print(head(x@gene)). fixed optional argument passed netplot. doPlot logical indicating whether plot result. categoryColor, geneColor character color, used colorize category (pathway) nodes, gene nodes, respectively. normalizeGeneSize logical indicating whether re-scale gene node sizes mean gene node size larger median category node size. option intended help gene category node sizes relative proportion. labelCex numeric value re-scale label text igraph object, applied directly igraph object. colorSub character vector valid R colors, whose names compared node names, example V(g)$name %% names(colorSub). verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnetplotJam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a cnetplot igraph object — cnetplotJam","text":"purpose function mimic steps DOSE:::cnetplot() except plot output, provide customizations. function calls cnetplot_internalJam(), among things adds node attribute resulting igraph, \"nodeType\", nodeType=\"Gene\" identifies gene nodes, nodeType=\"Set\" identifies pathway/gene set nodes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnetplot_internalJam.html","id":null,"dir":"Reference","previous_headings":"","what":"cnetplot internal function — cnetplot_internalJam","title":"cnetplot internal function — cnetplot_internalJam","text":"cnetplot internal function","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnetplot_internalJam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cnetplot internal function — cnetplot_internalJam","text":"","code":"cnetplot_internalJam(   inputList,   categorySize = \"geneNum\",   showCategory = 5,   pvalue = NULL,   foldChange = NULL,   fixed = TRUE,   DE.foldChange = NULL,   categoryColor = \"#E5C494\",   geneColor = \"#B3B3B3\",   colorRamp = \"RdBu_r\",   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/cnetplot_internalJam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cnetplot internal function — cnetplot_internalJam","text":"function intended mimic DOSE:::cnetplot_internal() function support cnetplotJam() customizations, including plotting output, including additional custom igraph attributes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/collapse_mem_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Multienrichment clusters — collapse_mem_clusters","title":"Collapse Multienrichment clusters — collapse_mem_clusters","text":"Collapse Multienrichment clusters","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/collapse_mem_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Multienrichment clusters — collapse_mem_clusters","text":"","code":"collapse_mem_clusters(   mem,   clusters,   choose = NULL,   per_cluster = Inf,   byCols = c(\"composite_rank\", \"minp_rank\", \"gene_count_rank\"),   return_type = c(\"cnet\", \"mem\"),   max_labels = 4,   max_nchar_labels = 25,   include_cluster_title = TRUE,   cluster_color_min_fraction = 0.5,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/collapse_mem_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Multienrichment clusters — collapse_mem_clusters","text":"cluster_color_min_fraction numeric value 0 1 used define cnet colors cluster. number significant pathways calculated per cluster enrichment using mem$enrichIMcolors, fraction significant pathways versus max number per enrichment used filter. example cluster 10 pathways, might 8 significant pathways one enrichment result, 3 significant pathways another enrichment result. fraction enrichment 8/8 == 1 first enrichment, 3/8 = 0.375 second enrichment. cluster_color_min_fraction=0.5 (default) first enrichment color included, second enrichment color. intent represent enrichment colors least half (0.5) pathways representative (max) enrichment color. Therefore, cluster one significant pathway given enrichment typically representive enrichment, enrichment color included.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/collapse_mem_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Multienrichment clusters — collapse_mem_clusters","text":"default return_type=\"cnet\" function returns augmented Cnet plot. labels cluster defined input names(clusters), however igraph attribute \"set_labels\" includes abbreviated label top ranked sets cluster. label probably closest thing summarizing composition cluster.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/collapse_mem_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapse Multienrichment clusters — collapse_mem_clusters","text":"function similar rank_mem_clusters() starts mem results multiEnrichMap() list clusters pathways/sets. Instead ranking choosing exemplars clusters, simply collapses cluster one super-set contains union genes. also run rank_mem_clusters() event one want collapse top per_cluster entries cluster, default include .","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/colorRamp2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Color ramp for bivariate colors — colorRamp2D","title":"Color ramp for bivariate colors — colorRamp2D","text":"Color ramp bivariate colors","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/colorRamp2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color ramp for bivariate colors — colorRamp2D","text":"","code":"colorRamp2D(   column_breaks,   row_breaks,   mcolor,   na_color = \"grey15\",   return_rgb = FALSE,   transparency = 0,   space = \"sRGB\",   verbose = FALSE,   ... )"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/colorRamp2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color ramp for bivariate colors — colorRamp2D","text":"","code":"mcolor <- matrix(ncol=3,    c(\"seashell\", \"salmon1\", \"firebrick3\",       \"gray99\", \"lightgoldenrod1\", \"gold\",       \"aliceblue\", \"skyblue\", \"dodgerblue3\")); row_breaks <- c(0, 0.5, 1); column_breaks <- c(-1, 0, 1); rownames(mcolor) <- row_breaks; colnames(mcolor) <- column_breaks; jamba::imageByColors(mcolor); title(    cex.main=1.5,    cex.lab=1.5,    main=\"Bivariate color scale\",    xlab=\"Directionality\",    ylab=\"Score\");   col_fun <- colorRamp2D(column_breaks=column_breaks,    row_breaks=row_breaks,    mcolor=mcolor) display_colorRamp2D(col_fun, pretty.n=c(4, 5));  display_colorRamp2D(col_fun, pretty.n=NULL);   mcolor1 <- matrix(ncol=3,    c(\"white\", \"red\",       \"white\", \"gold\",       \"white\", \"blue3\")); row_breaks1 <- c(0, 1); column_breaks1 <- c(-1, 0, 1); rownames(mcolor1) <- row_breaks1; colnames(mcolor1) <- column_breaks1; jamba::imageByColors(mcolor1);   col_fun1 <- colorRamp2D(column_breaks=column_breaks1,    row_breaks=row_breaks1,    space=\"LUV\",    mcolor=mcolor1) display_colorRamp2D(col_fun1);"},{"path":"https://jmw86069.github.io/multienrichjam/reference/colors_from_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordered colors from a list of color vectors — colors_from_list","title":"Ordered colors from a list of color vectors — colors_from_list","text":"Ordered colors list color vectors","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/colors_from_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordered colors from a list of color vectors — colors_from_list","text":"","code":"colors_from_list(x, return_type = c(\"colors\", \"order\"), verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/colors_from_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordered colors from a list of color vectors — colors_from_list","text":"x list character vectors contain valid R colors.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/colors_from_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordered colors from a list of color vectors — colors_from_list","text":"character vector unique colors x","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/colors_from_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ordered colors from a list of color vectors — colors_from_list","text":"function takes list colors returns unique order colors based upon order vectors list. mainly intended called reorderIgraphNodes(), however function useful inferring proper order unique colors list various subsets colors. basic assumption exists one true order unique colors, vector list contains subset colors consistent true order colors. function uses vectors contain two colors, therefore requires unique colors present subset vectos list length >= 2. uses vectors two colors, calculates average observed rank color, uses average rank define overall color order. unique colors present vectors two colors, fallback sort uses colorjam::sort_colors().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Color edges by nodegroups — color_edges_by_nodegroups","title":"Color edges by nodegroups — color_edges_by_nodegroups","text":"Color edges nodegroups","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color edges by nodegroups — color_edges_by_nodegroups","text":"","code":"color_edges_by_nodegroups(   g,   nodegroups,   nodegroup_colors = NULL,   edge_alpha = NULL,   Crange = c(60, 100),   Lrange = c(45, 85),   verbose = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color edges by nodegroups — color_edges_by_nodegroups","text":"g igraph object contains vertex node attribute \"color\" seen igraph::vertex_attr(g, \"color\"). nodegroups list communities object references nodes g assigns one nodegroups. edge_alpha numeric NULL, numeric value sets edge alpha transparency, edge_alpha=0 completely transparent, edge_alpha=0.5 50% transparent, edge_alpha=1 completely transparent, opaque. edge_alpha=NULL alpha values supplied colorjam::blend_colors() blends two values. verbose logical indicating whether print verbose output. ... additional arguments passed colorjam::blend_colors().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color edges by nodegroups — color_edges_by_nodegroups","text":"igraph object edge color attribute updated represent result blending node colors, seen igraph::edge_attr(g)$color.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Colorize igraph edges by nodes — color_edges_by_nodes","title":"Colorize igraph edges by nodes — color_edges_by_nodes","text":"Colorize igraph edges using node colors","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colorize igraph edges by nodes — color_edges_by_nodes","text":"","code":"color_edges_by_nodes(   g,   edge_alpha = NULL,   Crange = c(0, 100),   Lrange = c(0, 65),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colorize igraph edges by nodes — color_edges_by_nodes","text":"g igraph object contains vertex node attribute \"color\" seen igraph::vertex_attr(g, \"color\"). edge_alpha numeric NULL, numeric value sets edge alpha transparency, edge_alpha=0 completely transparent, edge_alpha=0.5 50% transparent, edge_alpha=1 completely transparent, opaque. edge_alpha=NULL alpha values supplied colorjam::blend_colors() blends two values. ... additional arguments passed colorjam::blend_colors().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colorize igraph edges by nodes — color_edges_by_nodes","text":"igraph object edge color attribute updated represent result blending node colors, seen igraph::edge_attr(g)$color.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Colorize igraph edges by nodes — color_edges_by_nodes","text":"function colorizes edges blending colors nodes involved, calling colorjam::blend_colors(). color node depends upon node shape, color colors used render node shape used edge. example: shape=\"pie\" uses average color V(g)$pie.color shape=\"coloredrectangle\" uses avereage color V(g)$coloredrect.color everything else uses V(g)$color","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Color igraph edges using node colors (deprecated) — color_edges_by_nodes_deprecated","title":"Color igraph edges using node colors (deprecated) — color_edges_by_nodes_deprecated","text":"Color igraph edges using node colors (deprecated)","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color igraph edges using node colors (deprecated) — color_edges_by_nodes_deprecated","text":"","code":"color_edges_by_nodes_deprecated(g, alpha = NULL, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes_deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color igraph edges using node colors (deprecated) — color_edges_by_nodes_deprecated","text":"g igraph object alpha NULL numeric vector value 0 1, 0 transparent 1 non-transparent. supplied, value passed jamba::alpha2col() apply alpha transparency edge color. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_edges_by_nodes_deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color igraph edges using node colors (deprecated) — color_edges_by_nodes_deprecated","text":"Note: function deprecated favor color_edges_by_nodes(). function uses average color two nodes involved edge, applies new edge color. color node depends upon node shape, shape \"pie\" uses average color \"pie.color\", shape \"coloredrectangle\" uses avereage color \"coloredrect.color\". Everything else uses \"color\". function relies upon avg_colors_by_list() blend multiple colors together.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_nodes_by_nodegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Color edges by nodegroups — color_nodes_by_nodegroups","title":"Color edges by nodegroups — color_nodes_by_nodegroups","text":"Color edges nodegroups","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_nodes_by_nodegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color edges by nodegroups — color_nodes_by_nodegroups","text":"","code":"color_nodes_by_nodegroups(   g,   nodegroups,   nodegroup_colors = NULL,   node_alpha = NULL,   Crange = c(60, 100),   Lrange = c(45, 85),   color_attributes = c(\"color\"),   verbose = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_nodes_by_nodegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color edges by nodegroups — color_nodes_by_nodegroups","text":"g igraph object contains vertex node attribute \"color\" seen igraph::vertex_attr(g, \"color\"). nodegroups list communities object references nodes g assigns one nodegroups. verbose logical indicating whether print verbose output. ... additional arguments passed colorjam::blend_colors(). edge_alpha numeric NULL, numeric value sets edge alpha transparency, edge_alpha=0 completely transparent, edge_alpha=0.5 50% transparent, edge_alpha=1 completely transparent, opaque. edge_alpha=NULL alpha values supplied colorjam::blend_colors() blends two values.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/color_nodes_by_nodegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color edges by nodegroups — color_nodes_by_nodegroups","text":"igraph object edge color attribute updated represent result blending node colors, seen igraph::edge_attr(g)$color.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/communities2nodegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert communities object to nodegroups list format — communities2nodegroups","title":"Convert communities object to nodegroups list format — communities2nodegroups","text":"Convert communities object nodegroups list format","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/communities2nodegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert communities object to nodegroups list format — communities2nodegroups","text":"","code":"communities2nodegroups(wc, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/communities2nodegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert communities object to nodegroups list format — communities2nodegroups","text":"wc communities object returned igraph functions cluster_optimal(), cluster_walktrap(), cluster_leading_eigen(). ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/communities2nodegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert communities object to nodegroups list format — communities2nodegroups","text":"list character vectors, vector contains names igraph nodes. algorithm defined input object, included attribute output list, accessible attr(, \"algorithm\"). optional value \"cluster_names\" present communities object, used define output list names.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/communities2nodegroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert communities object to nodegroups list format — communities2nodegroups","text":"Note function \"lossy\", output list contain information necessary reconstitute input communities object detail. However, output list can converted communities object accepted igraph related functions require object type input value.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/curateIPAcolnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Curate Ingenuity IPA colnames — curateIPAcolnames","title":"Curate Ingenuity IPA colnames — curateIPAcolnames","text":"Curate Ingenuity IPA colnames","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/curateIPAcolnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Curate Ingenuity IPA colnames — curateIPAcolnames","text":"","code":"curateIPAcolnames(   jDF,   ipaNameGrep = c(\"^Name$\", \"^ID$\", \"Canonical Pathways\", \"Upstream Regulator\",     \"Diseases or Functions Annotation\", \"Diseases . Functions\", \"My Lists\",     \"Ingenuity Toxicity Lists\", \"My Pathways\"),   geneGrep = c(\"Molecules in Network\", \"Target molecules\", \"Molecules\", \"Symbol\"),   geneCurateFrom = c(\" [(](complex|includes others)[)]\", \"^[,]+|[,]+$\"),   geneCurateTo = c(\"\", \"\"),   convert_ipa_slash = TRUE,   ipa_slash_sep = \":\",   verbose = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/curateIPAcolnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Curate Ingenuity IPA colnames — curateIPAcolnames","text":"jDF data.frame one Ingenuity IPA enrichment test. ipaNameGrep vector regular expression patterns used recognize name enriched entity, example biological pathway, network, disease category, etc. geneGrep regular expression pattern used recognize column containing genes, molecules tested enrichment found enriched entity. geneCurateFrom, geneCurateTo vector patterns replacements, respectively, used curate values gene column. replacement rules used ensure genes delimited consistently, leading trailing delimiters. verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/curateIPAcolnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Curate Ingenuity IPA colnames — curateIPAcolnames","text":"function intended help curate colnames observed Ingenuity IPA enrichment data. IPA enrichment data includes multiple types enrichment tests, slightly different column headers. function intended make colnames consistent. function rename first recognized gene colname \"geneNames\" consistency downstream analyses. values recognized gene colname curated using geneCurateFrom,geneCurateTo multiple pattern-replacement substitutions. mechanism used ensure consistent delimiters values used enrichment table. colname matching \"-log.*p.value\" considered -log10 P-value, converted normal P-values consistency downstream analyses. recognized P-value column renamed \"P-value\" consistency downstream analyses. recognized P-value column contains range, example \"0.00017-0.0023\", lower P-value chosen. case, higher P-value stored new column \"max P-value\". P-value ranges reported disease category analysis Ingenuity IPA, collating individual pathways disease category storing range enrichment P-values.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/deconcat_df2.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconcatenate delimited column values in a data.frame — deconcat_df2","title":"Deconcatenate delimited column values in a data.frame — deconcat_df2","text":"Deconcatenate delimited column values data.frame","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/deconcat_df2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconcatenate delimited column values in a data.frame — deconcat_df2","text":"","code":"deconcat_df2(x, column, split = \"[,; |/]+\", blank = \"\", ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/deconcat_df2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconcatenate delimited column values in a data.frame — deconcat_df2","text":"x data.frame compatible object column character vector one colnames(x) de-concatenated. split character pattern used strsplit() split multiple values column. blank character string used replace entries otherwise zero-length returned strsplit(). ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/deconcat_df2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deconcatenate delimited column values in a data.frame — deconcat_df2","text":"function deconcatenates delimited values column data.frame calling strsplit() column values, repeating values columns match lengths() following strsplit(). function includes correction cases strsplit() otherwise return zero-length entries, otherwise dropped output. function, zero-length entries replaced blank=\"\" rows dropped output.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/deconcat_df2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deconcatenate delimited column values in a data.frame — deconcat_df2","text":"","code":"df <- data.frame(one=c(\"AB\", \"BC\", \"AC\"),    two=c(\"a,b\", \"b,c\", \"a,c\")); deconcat_df2(df, column=\"two\") #>      one two #> 1_v1  AB   a #> 1_v2  AB   b #> 2_v1  BC   b #> 2_v2  BC   c #> 3_v1  AC   a #> 3_v2  AC   c"},{"path":"https://jmw86069.github.io/multienrichjam/reference/default_igraph_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Default igraph parameter values — default_igraph_values","title":"Default igraph parameter values — default_igraph_values","text":"Default igraph parameter values","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/default_igraph_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default igraph parameter values — default_igraph_values","text":"","code":"default_igraph_values()"},{"path":"https://jmw86069.github.io/multienrichjam/reference/default_igraph_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default igraph parameter values — default_igraph_values","text":"list default igraph plotting data parameters, including \"plot\", \"vertex\", \"edge\".","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/display_colorRamp2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Display colors from bivariate color function — display_colorRamp2D","title":"Display colors from bivariate color function — display_colorRamp2D","text":"Display colors bivariate color function","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/display_colorRamp2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display colors from bivariate color function — display_colorRamp2D","text":"","code":"display_colorRamp2D(   col_fun,   pretty.n = 12,   xlab = \"\",   ylab = \"\",   main = \"\",   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/display_colorRamp2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display colors from bivariate color function — display_colorRamp2D","text":"col_fun function output colorRamp2D(). pretty.n numeric passed pretty() determine y-axis x-axis label breaks, respectively, NULL use breaks encoded col_fun. xlab, ylab, main character strings passed title(). ... additional arguments passed title().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/display_colorRamp2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display colors from bivariate color function — display_colorRamp2D","text":"function provides rudimentary method displaying bivariate 2-D color matrix colorRamp2D().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/drawEllipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw ellipse — drawEllipse","title":"Draw ellipse — drawEllipse","text":"Draw ellipse","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/drawEllipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw ellipse — drawEllipse","text":"","code":"drawEllipse(   x,   y,   a = 1,   b = 1,   angle = 0,   segment = NULL,   arc.only = TRUE,   nv = 100,   deg = TRUE,   border = NULL,   col = NA,   lty = 1,   lwd = 1,   draw = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/drawEllipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw ellipse — drawEllipse","text":"x, y numeric coordinates, x can two-column numeric matrix x,y coordinates. , b numeric values indicating x- y-axis radius, rotation angle non-zero. angle numeric value indicating rotation ellipse. segment NULL numeric vector two values indicating start end angles ellipse, prior rotation. arc.logical indicating whether draw ellipse arc without connecting center ellipse. Set arc.=FALSE segment include full circle, draw wedge. nv numeric number vertices around center draw. deg logical indicating whether input angle segment values degrees, deg=FALSE radians. border, col, lty, lwd arguments passed graphics::polygon(). draw logical indicating whether draw ellipse. ... additional arguments passed graphics::polygon() draw=TRUE.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/drawEllipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw ellipse — drawEllipse","text":"invisible list x,y coordinates","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/drawEllipse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw ellipse — drawEllipse","text":"function draws ellipse centered given coordinates, rotated given degrees relative center point, give x- y-axis radius values.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/drawEllipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw ellipse — drawEllipse","text":"","code":"par(\"mar\"=c(2, 2, 2, 2)); plot(NULL,    type=\"n\",    xlim=c(-5, 20),    ylim=c(-5, 18),    ylab=\"\", xlab=\"\", bty=\"L\",    asp=1); xy <- drawEllipse(    x=c(1, 11, 11, 11),    y=c(1, 11, 11, 11),    a=c(5, 5, 5*1.5, 5),    b=c(2, 2, 2*1.5, 2),    angle=c(20, -15, -15, -15),    segment=c(0, 360, 0, 120, 120, 240, 240, 360),    arc.only=c(TRUE, FALSE, FALSE, TRUE),    col=jamba::alpha2col(c(\"red\", \"gold\", \"dodgerblue\", \"darkorchid\"), alpha=0.5),    border=c(\"red\", \"gold\", \"dodgerblue\", \"darkorchid\"),    lwd=1,    nv=99) points(x=c(1, 11), y=c(1, 11), pch=20, cex=2) jamba::drawLabels(x=c(12, 3, 13, 5),    y=c(14, 10, 9, 2),    labelCex=0.7,    drawBox=FALSE,    adjPreset=c(\"topright\", \"left\", \"bottomright\", \"top\"),    txt=c(\"0-120 degrees,\\nangle=-15,\\narc.only=TRUE\",       \"120-240 degrees,\\nangle=-15,\\narc.only=TRUE,\\nlarger radius\",       \"240-360 degrees,\\nangle=-15,\\narc.only=FALSE\",       \"angle=20\"))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_bipartite.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle edges in a bipartite graph — edge_bundle_bipartite","title":"Bundle edges in a bipartite graph — edge_bundle_bipartite","text":"Bundle edges bipartite graph","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_bipartite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle edges in a bipartite graph — edge_bundle_bipartite","text":"","code":"edge_bundle_bipartite(g, type = \"nodeType\", ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_bipartite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle edges in a bipartite graph — edge_bundle_bipartite","text":"g igraph object type character name vertex attribute defines node type. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_bipartite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle edges in a bipartite graph — edge_bundle_bipartite","text":"function performs edge bundling bipartite network graphs, expected contain two classes nodes. general situation lends well bundling edges shared connections, subset nodes one class bind set nodes class. nodes typically co-located network layout, works well style edge bundling.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_nodegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle edges using node groups — edge_bundle_nodegroups","title":"Bundle edges using node groups — edge_bundle_nodegroups","text":"Bundle edges using node groups","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_nodegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle edges using node groups — edge_bundle_nodegroups","text":"","code":"edge_bundle_nodegroups(   g,   nodegroups,   shape = NULL,   params = NULL,   midpoint = 0.5,   detail = 10,   draw_lines = TRUE,   nodegroup_midpoints = NULL,   linear_cor_threshold = 1,   bundle_style = getOption(\"jam.bundle_style\", \"bezier\"),   bundle_self = FALSE,   verbose = FALSE,   debug = getOption(\"debug\", FALSE),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_nodegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle edges using node groups — edge_bundle_nodegroups","text":"g igraph contains layout coordinates graph attributes, stored igraph::graph_attr(g, \"layout\"). nodegroups list node names, object class \"communities\" produced igraph::cluster_* methods igraph::cluster_walktrap(). Note every node must represented. shape character (optional) used override vertex.shape passed params. recycled number nodes, example igraph::vcount(g). params function representing igraph plotting parameters used rendering time. output also produced parse_igraph_plot_params() use jam_igraph() plotting, passed node edge rendering functions. midpoint numeric vector one values ranging 0 1 define control point positions along line two nodegroup center coordinates. one nodegroup contains one node, line segment shortened end node border clipping corresponding node shape. position along line defined relative first node edge, toward second node edge. Using midpoint=0.5 guarantees control point exact middle, midpoint=c(0.2, 0.8) use two control points 20% 80% distance along line segment resulting edge closely follows line segment. detail integer number intermediate points along spline render edge. draw_lines logical indicating whether render edge splines calculating . nodegroup_midpoints list experimental support defining specific control points used bundled edges. fully implemented yet. future, require two nodegroups defined set control point coordinates, requirement location control points. linear_cor_threshold numeric value 0 1. Coordinates edge, intermediate control point coordinates used xspline() create curved spline node node. However, nodes intermediate control points already linear, edge treated linear edge. test linearity, cor() correlation calculated, values linear_cor_threshold considered linear. driving problem control point colinear two nodes, control point positioned outside two nodes. Without modification, line appear pass one node beyond node, arrow (directed) pointing back node opposite direction. bundle_style character string describing type curvature use edge bundles: \"bezier\": (default) calls bezier::bezier() define bezier curve using edge control points. \"xspline\": calls graphics::xspline() define XSpline curve using edge control points, however method  customized include edge endpoint twice, makes intermediate curve much rounder normal. \"angular\": calls graphics::xspline() define XSpline curve using edge control points. shape tends appear angular, thus name. \"bezierPath\": calls ggforce:::bezierPath() ggforce available, producing bezier curve using edge control points. Note method appears identical \"bezier\" , likely removed future release. \"subway\": experimental method uses \"angular\" appearance, repeated intermediate control points intended group bundled edges linear segment. intent \"dodge\" edges along line segment, similar appearance subway maps, however fully implemented. bundle_self logical indicate whether edges begin end nodegroup bundled nodegroup center coordinate. bundle_self=FALSE forces edges within nodegroup rendered straight lines, therefore using nodegroup center control point. bundle_self=TRUE overrides validation check requires distance center points two nodegroups distance least 0.5% layout coordinate span. can visual aid connections bundle center nodegroup, especially nodegroup almost fully connected. verbose logical indicating whether print verbose output. debug logical indicating whether plot debug output may helpful understanding edge bundle control points. specify debug edge bundling, use substring \"bundl\", example options(\"debug\"=\"bundling\"). ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_nodegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle edges using node groups — edge_bundle_nodegroups","text":"data.frame edge spline point represented row, breaks edges defined NA coordinates.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_nodegroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle edges using node groups — edge_bundle_nodegroups","text":"edge bundling technique relies upon form node grouping, usually derived network community detection, bipartite nodesets (see get_bipartite_nodeset() details.) Given set node groups, edges bundled entering exiting node group, along linear path two node group center positions, using spline function intermediate control points. default spline uses initial node positions, midpoint along line two respective node groups. midpoints can adjusted argument midpoint vector one fractional positions 0 1. useful alternative midpoint=c(0.3, 0.7) adds two control points along linear path node group centers, tends make edges bundle closer together longer distance. used bipartite nodesets, edges bundled nodeset individual nodes. edge bundling rules , default midpoint=c(0.4, 0.6) centered half distance nodeset center, single node. case, midpoint directional, always pointing nodeset single node, therefore can adjusted closer nodeset center midpoint=0.2 closer single node midpoint=0.8.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/edge_bundle_nodegroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle edges using node groups — edge_bundle_nodegroups","text":"","code":"# using community detection karate <- igraph::make_graph(\"Zachary\") igraph::V(karate)$name <- as.character(seq_len(igraph::vcount(karate)))  # run any igraph::cluster_*() wc <- igraph::cluster_louvain(karate) # define list nodegroups_wc <- split(igraph::V(karate)$name, wc$membership)  # bonus points for colorizing nodes and edges by community igraph::V(karate)$color <- colorjam::group2colors(igraph::membership(wc)); igraph::V(karate)$label.color <- jamba::setTextContrastColor(igraph::V(karate)$color); igraph::V(karate)$frame.color <- jamba::makeColorDarker(igraph::V(karate)$color); karate <- color_edges_by_nodes(karate);  # update graph layout layout_xy <- igraph::layout_with_graphopt(karate); igraph::graph_attr(karate, \"layout\") <- layout_xy;  jam_igraph(karate,    edge_bundling=\"nodegroups\",    nodegroups=nodegroups_wc,    use_shadowText=TRUE);"},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichDF2enrichResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame to enrichResult — enrichDF2enrichResult","title":"Convert data.frame to enrichResult — enrichDF2enrichResult","text":"Convert data.frame enrichResult","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichDF2enrichResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame to enrichResult — enrichDF2enrichResult","text":"","code":"enrichDF2enrichResult(   enrichDF = NULL,   pvalueCutoff = 1,   pAdjustMethod = \"none\",   keyColname = c(\"itemsetID\", \"ID\", \"Name\", \"Pathway\"),   pathGenes = \"pathGenes\",   geneColname = c(\"geneNames\", \"geneID\", \"Gene\", \"Genes\"),   geneHits = \"geneHits\",   geneRatioColname = c(\"GeneRatio\", \"^Ratio\"),   geneDelim = \"[,/ ]+\",   geneSep = \",\",   pvalueColname = c(\"P.Value\", \"Pvalue\", \"FDR\", \"adj.P.Val\"),   descriptionColname = c(\"Description\", \"Name\", \"Pathway\", \"ID\"),   msigdbGmtT = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichDF2enrichResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame to enrichResult — enrichDF2enrichResult","text":"enrichDF data.frame representing gene set enrichment results. pvalueCutoff numeric value range 0 1, define P-value threshold enrichment results considered downstream processing. pAdjustMethod character string define P-value adjustment method, \"none\" additional adjustment. See stats::p.adjust() valid values. keyColname character value colname(enrichDF) containing unique row identifier. can pathway_ID uniquely identifying value. pathGenes character value colname(enrichDF) containing number genes pathway. value derived geneRatioColname needed. geneColname character value colname(enrichDF) containing delimiited genes pathway. geneHits character value colname(enrichDF) containing integer count gene hits pathway. value derived geneRatioColname needed. geneRatioColname character value colname(enrichDF) containing character ratio gene hits pathway size, format \"50/100\". value used either \"pathGenes\" \"geneHits\" supplied. geneDelim character regular expression pattern used separate genes pathGenes column vector character values. pvalueColname character value colname(enrichDF) containing enrichment P-values use downstream processing. msigdbGmtT optional gmtT object, representation arules::transactions-class. (currently implemented.) verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichDF2enrichResult.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data.frame to enrichResult — enrichDF2enrichResult","text":"function takes data.frame containing gene set enrichment results, converts proper enrichResult object, compatible methods provided clusterProfiler package.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert enrichList to data.frame — enrichList2df","title":"Convert enrichList to data.frame — enrichList2df","text":"Convert enrichList single data.frame, merging results","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert enrichList to data.frame — enrichList2df","text":"","code":"enrichList2df(   enrichList,   keyColname = c(\"ID\", \"Name\", \"pathway\", \"itemsetID\", \"Description\"),   geneColname = c(\"geneID\", \"geneNames\", \"Genes\"),   geneCountColname = c(\"gene_count\", \"Count\", \"geneCount\", \"geneHits\"),   pvalueColname = c(\"padjust\", \"p.adjust\", \"adjp\", \"padj\", \"qvalue\", \"qval\", \"q.value\",     \"pvalue\", \"p.value\", \"pval\", \"FDR\"),   pvalueFloor = 1e-200,   msigdbGmtT = NULL,   geneDelim = \"[,/ ]+\",   geneSep = \",\",   verbose = FALSE,   debug = 0,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert enrichList to data.frame — enrichList2df","text":"enrichList list enrichResult data.frame objects. keyColname, geneColname, geneCountColname, pvalueColname character string indicating column use, vector column names order priority. pvalueFloor numeric lowest permitted P-value, intended prevent using actual zero 0 may occur sometimes upstream processing rounds value. msigdbGmtT currently implemented. geneDelim character pattern used split genes. geneSep character string used join genes, default \",\" uses comma-delimited values. verbose logical indicating whether print verbose output. debug integer used debugging, values 0, 1, 2, 3 recognized. Value 0, default, performs debug. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert enrichList to data.frame — enrichList2df","text":"data.frame combined results across enrichList.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert enrichList to data.frame — enrichList2df","text":"function takes one enrichment results, combines results one data.frame. Genes combined, reporting unique genes sorted order. numeric columns report lowest highest value, appropriate: P-value columns report lowest observed value, pvalueColname Count columns report highest observed value, except primary count column reports number unique genes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2geneHitList.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract gene hit list from list of enrichResult — enrichList2geneHitList","title":"Extract gene hit list from list of enrichResult — enrichList2geneHitList","text":"Extract gene hit list list enrichResult","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2geneHitList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract gene hit list from list of enrichResult — enrichList2geneHitList","text":"","code":"enrichList2geneHitList(   enrichList,   geneColname,   geneDelim = \"[,/ ]\",   make_unique = TRUE,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2geneHitList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract gene hit list from list of enrichResult — enrichList2geneHitList","text":"list character vectors, containing unique set genes involved enrichment.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2geneHitList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract gene hit list from list of enrichResult — enrichList2geneHitList","text":"function mainly internal use multienrichjam, takes list enrichResult objects, determines full set genes involved enrichResult. function also works ComplexHeatmap::HeatmapList objects.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2IM.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert enrichList to IM incidence matrix — enrichList2IM","title":"Convert enrichList to IM incidence matrix — enrichList2IM","text":"Convert enrichList IM incidence matrix","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2IM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert enrichList to IM incidence matrix — enrichList2IM","text":"","code":"enrichList2IM(   enrichList,   addAnnotations = TRUE,   keyColname = c(\"ID\", \"Name\", \"pathway\", \"itemsetID\"),   valueColname = c(\"qvalue\", \"q.value\", \"padj\", \"pvalue\", \"p.value\"),   emptyValue = NA,   verbose = FALSE,   GmtT = NULL,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2IM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert enrichList to IM incidence matrix — enrichList2IM","text":"enrichList list enrichResult objects addAnnotations logical implemented, argument paired GmtT. keyColname character used match colnames, referring unique identifier. Values column become column headers resulting incidence matrix. valueColname character used match colnames determine value place cell incidence matrix. emptyValue numeric value used fill empty cells incidence matrix. NULL valueColname contains \"gene\", \"count\", \"num\", \"hit\" emptyValue=0, otherwise emptyValue=1 used assumption valueColname refers P-values. verbose logical indicating whether print verbose output. GmtT (currently implemented), alternative gene set object format uses arules::transactions class, efficient object robust access functions arules. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichList2IM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert enrichList to IM incidence matrix — enrichList2IM","text":"function takes list enrichResult objects creates incidence matrix using value defined valueColname. TODO: Port use venndir::list2im_value(), may moved proper R package set list manipulation, without dependencies incurred venndir.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichMapJam.html","id":null,"dir":"Reference","previous_headings":"","what":"Create enrichMap igraph object — enrichMapJam","title":"Create enrichMap igraph object — enrichMapJam","text":"Create enrichMap igraph object enrichResult.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichMapJam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create enrichMap igraph object — enrichMapJam","text":"","code":"enrichMapJam(   x,   n = 50,   vertex.label.font = 1,   vertex.label.cex = 1,   keyColname = \"ID\",   nodeLabel = c(\"Name\", \"Description\", \"ID\"),   descriptionColname = \"Description\",   nodeLabelFunc = NULL,   overlapThreshold = 0.2,   msigdbGmtT = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichMapJam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create enrichMap igraph object — enrichMapJam","text":"x enrichResult data.frame containing enrichment results, specifically expecting colnames contain one c(\"ID\",\"Description\",\"Name\") represent node name, c(\"Description\") represent description, present. n numeric value indicating maximum number nodes include final network. vertex.label.font, vertex.label.cex numeric values define default node label font size. keyColname, nodeLabel, descriptionColname character vectors indicating colname use node name label. nodeLabelFunc function, default NULL, option apply V(g)$name order create V(g)$label. One suggestion use fixSetLabels() applies word wrap, optional max character length. overlapThreshold numeric value indicating minimum Jaccard overlap, edges lower values deleted igraph object. msigdbGmtT currently implemented. ... additional arguments passed enrichDF2enrichResult() input x data.frame.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichMapJam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create enrichMap igraph object — enrichMapJam","text":"igraph object, whose nodes represent enriched pathway, sized based upon number genes involved enrichment, colored based upon log10(Pvalue) using colorjam::vals2colorLevels(), function applies color gradient numeric range. edge attributes: overlap containing Jaccard overlap, overlap_count number genes common two nodes, overlap_max_pct maximum percent overlap two nodes (overlap count)/(smaller node size).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/enrichMapJam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create enrichMap igraph object — enrichMapJam","text":"function also called enrichResult2emap(). function minor extension original function DOSE::enrichMap() now rewritten source package enrichplot::emapplot(). major differences: function returns igraph object, can manipulated using network-related functions. function calculates overlap using dist(...,method=\"binary\") much faster method calculating Jaccard overlap. function also calculates overlap count, another helpful measure filtering network connections, example remove links one gene, even overlap required threshold. Many spurious network connections removed filter, appears helpful option.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter mem multienrichment object by Gene names — filter_mem_genes","title":"Filter mem multienrichment object by Gene names — filter_mem_genes","text":"Filter mem multienrichment object Gene names","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter mem multienrichment object by Gene names — filter_mem_genes","text":"","code":"filter_mem_genes(mem, includeGenes = NULL, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter mem multienrichment object by Gene names — filter_mem_genes","text":"mem list object returned multiEnrichMap() includeGenes character vector genes, matched rownames(mem$memIM) ... additional arguments ignored","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter mem multienrichment object by Gene names — filter_mem_genes","text":"list object mem data content","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_genes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter mem multienrichment object by Gene names — filter_mem_genes","text":"intended internal function. simply takes character vector gene names, subsets incidence matrix data mem object. performs filtering. function called subset_mem(), recommended method subset mem object.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter mem multienrichment object by Set names — filter_mem_sets","title":"Filter mem multienrichment object by Set names — filter_mem_sets","text":"Filter mem multienrichment object Set names","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter mem multienrichment object by Set names — filter_mem_sets","text":"","code":"filter_mem_sets(mem, includeSets = NULL, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter mem multienrichment object by Set names — filter_mem_sets","text":"mem list object returned multiEnrichMap() includeSets character vector sets, matched colnames(mem$memIM) ... additional arguments ignored","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter mem multienrichment object by Set names — filter_mem_sets","text":"list object mem data content","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/filter_mem_sets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter mem multienrichment object by Set names — filter_mem_sets","text":"intended internal function. simply takes character vector set names, subsets incidence matrix data mem object. performs filtering. function called subset_mem(), recommended method subset mem object.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_colname.html","id":null,"dir":"Reference","previous_headings":"","what":"Find colname by character string or pattern matching — find_colname","title":"Find colname by character string or pattern matching — find_colname","text":"Find colname character string pattern matching","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_colname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find colname by character string or pattern matching — find_colname","text":"","code":"find_colname(   pattern,   x,   max = 1,   index = FALSE,   require_non_na = TRUE,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_colname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find colname by character string or pattern matching — find_colname","text":"pattern character vector containing text strings regular expression patterns. x input data.frame R object contains colnames. max integer maximum number results return. index logical indicating whether return column index integer vector. index=FALSE returns matching colnames(x); index=TRUE returns matching column numbers integer vector. require_non_na logical indicating whether require column contain non-NA values, default TRUE. intent function find colnames whose data match expectations, require_non_na TRUE, function continue finds column non-NA values. ... additional arguments passed jamba::provigrep().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_colname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find colname by character string or pattern matching — find_colname","text":"character vector length max, pattern match found returns NULL. Also colnames(x) returns NULL.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_colname.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find colname by character string or pattern matching — find_colname","text":"function intended help find colname given character vector expected values regular expression patterns. default returns first matching value, can return multiple max=Inf. colnames(x) NULL returned. order operations: Match exact string. Match exact string case-insensitive manner. Match start string using jamba::provigrep(). Match end string using jamba::provigrep(). Match string using jamba::provigrep(). results first successful operation returned. duplicate colnames(x) first unique name returned.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_enrich_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Find enrichment colnames — find_enrich_colnames","title":"Find enrichment colnames — find_enrich_colnames","text":"Find enrichment colnames","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_enrich_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find enrichment colnames — find_enrich_colnames","text":"","code":"find_enrich_colnames(   x,   keyColname = c(\"ID\", \"Name\", \"pathway\", \"itemsetID\", \"Description\"),   nameColname = c(\"Name\", \"pathway\", \"Description\", \"itemsetID\", \"ID\"),   descriptionColname = c(\"Description\", \"Name\", \"Pathway\", \"ID\"),   geneColname = c(\"geneID\", \"geneNames\", \"Genes\"),   countColname = c(\"gene_count\", \"count\", \"geneHits\"),   geneRatioColname = c(\"GeneRatio\", \"^Ratio\"),   pvalueColname = c(\"padjust\", \"p.adjust\", \"adjp\", \"padj\", \"qvalue\", \"qval\", \"q.value\",     \"pvalue\", \"p.value\", \"pval\", \"FDR\"),   directionColname = c(\"activation.z.{0,1}score\", \"z.{0,1}score\"),   pathGenes = c(\"setSize\", \"pathGenes\", \"Count\"),   geneHits = c(\"Count\", \"geneHits\", \"gene_count\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_enrich_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find enrichment colnames — find_enrich_colnames","text":"x data.frame, enrichList, Mem, list data.frame objects. keyColname character default 'ID' indicating primary identifier set. column may numeric identifier. nameColname character default 'Name', set name, typically short name set. descriptionColname character default 'Description' longer set description. use nameColname keyColname needed. geneColname character default 'geneID' containing delimited genes associated enrichment result. countColname character default 'Count' number genes geneColname column. calculated needed. geneRatioColname character default 'GeneRatio' numeric (decimal) ratio test genes pathway genes, character indication form '6/24' 'tested/pathway' gene counts. pvalueColname character default 'padjust' best available column use statistical significance enrichment. directionColname character default 'zscore' directional score, typically z-score reasonably scaled numeric value sign indicates directionality, '+' meaning activated '-' meaning suppressed. pathGenes character default 'setSize' indicating number genes set tested enrichment. number always reported, however used 'multienrichjam', required clusterProfiler functions. geneHits character default 'Count' indicating number genes geneColname column. calculated needed. verbose logical default FALSE, whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_enrich_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find enrichment colnames — find_enrich_colnames","text":"character recognized colnames named type column, using NA column types found. list named column name argument, one character value NULL entry.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/find_enrich_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find enrichment colnames — find_enrich_colnames","text":"","code":"newborn_txt <- system.file(\"extdata\",    \"Newborns-IPA.txt\",    package=\"multienrichjam\"); ipa_dfs <- importIPAenrichment(newborn_txt); find_enrich_colnames(ipa_dfs[[1]]) #> $keyColname #> [1] \"Name\" #>  #> $nameColname #> [1] \"Name\" #>  #> $descriptionColname #> [1] \"Name\" #>  #> $geneColname #> [1] \"geneNames\" #>  #> $countColname #> NULL #>  #> $geneRatioColname #> [1] \"Ratio\" #>  #> $pvalueColname #> [1] \"P-value\" #>  #> $directionColname #> NULL #>  #> $pathGenes #> NULL #>  #> $geneHits #> NULL #>   er <- enrichDF2enrichResult(ipa_dfs[[1]]) find_enrich_colnames(er) #> $keyColname #> [1] \"ID\" #>  #> $nameColname #> [1] \"Description\" #>  #> $descriptionColname #> [1] \"Description\" #>  #> $geneColname #> [1] \"geneID\" #>  #> $countColname #> [1] \"Count\" #>  #> $geneRatioColname #> [1] \"GeneRatio\" #>  #> $pvalueColname #> [1] \"p.adjust\" #>  #> $directionColname #> NULL #>  #> $pathGenes #> [1] \"setSize\" #>  #> $geneHits #> [1] \"Count\" #>"},{"path":"https://jmw86069.github.io/multienrichjam/reference/fixSetLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix Set labels for legibility — fixSetLabels","title":"Fix Set labels for legibility — fixSetLabels","text":"Fix Set labels legibility","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/fixSetLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix Set labels for legibility — fixSetLabels","text":"","code":"fixSetLabels(   x,   wrap = TRUE,   width = 40,   maxNchar = Inf,   suffix = \"...\",   nodeType = c(\"Set\", \"Gene\", \"any\"),   do_abbreviations = TRUE,   adjustCase = TRUE,   lowercaseAll = TRUE,   removeGrep = \"^(KEGG|PID|REACTOME|BIOCARTA|NABA|SA|SIG|ST|WP|HALLMARK)[_. ]\",   words_from = c(\"als\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"Vii\", \"Viii\", \"ix\", \"x\", \"trna\",     \"rrna\", \"rna\", \"dna\", \"mirna\", \"mrna\", \"snrna\", \"snorna\", \"scrna\", \"lincrna\", \"Il\",     \"Ecm\", \"Nk\", \"Pi3k.Akt\", \"Akt\", \"Pi3k\", \"tgf\", \"nfkb\", \"NK.Kappa.B\",     \"Pi3kaktmtorsignaling\", \"Pi3kaktmtor\", \"PI3kakt\", \"aktmtor\", \"mtorsignaling\",     \"Pi3kci\", \"Pi3kgamma\", \"Pi 3k\", \"Ppar(alpha|a)\", \"Ppar(gamma|g)\", \"Ppar\",     \"Udp N Acetyl Glucosamine\", \"Mtor\", \"Gpcr\", \"Gpcrs\", \"Tnfa|Tnfalpha\", \"Tnfr1\",     \"Tnfr2\", \"Tnfs\", \"Tnf\", \"Tnfsf\", \"Tnfrelated\",       \"Tgf(beta|b)\", \"Tgfbr\",     \"TGF Beta\", \"Akt1\", \"Igf1akt\", \"Foxo\", \"Hdacs\", \"Hdac\", \"Hat\", \"Hats\",     \"Nicotinic Acetylcholine Receptors|Acetylcholine Nicotinic Receptors\", \"G CSF\",     \"Gm Csf\", \"M Csf\", \"IL([0-9]+)[-. _]([0-9]+)pathway\", \"Jak Stat([1-9]*)\",     \"Mkk3 6pathway\", \"MAP([23]*)K([0-9]*)\", \"P38[ ]*MAPK\", \"MAPK1 3\", \"Erk MAPK\", \"Erk\",     \"Erks\", \"Interferon([a-z]*)\", \"([A-Za-z0-9]+[a-qs-z])mediated\", \"Lncrna|Lincrna\",     \"Microrna([s]*)\", \"125 DIHYDROXYVITAMIN D3\", \"Tweak\", \"Er\", \"Vegfavegfr2\",     \"Vegfr1 2\",       \"Vegf\", \"Vegfr([1-9]*)\", \"Egfr\", \"Egfrviii\", \"Egfegfr\",     \"Smad2 3(pathway|nuclear)\", \"Smad2 3\", \"Nf Kb\", \"Nfkappab\", \"C Jun\", \"C Fos\", \"Ap 1\",     \"Apoe\", \"([AG])tpase\", \"Kras\", \"Uv\", \"Sarscov2\", \"Sars Cov ([12])\", \"Sars Cov\",     \"Covid19\", \"Cellspecific\", \"([a-zA-Z0-9]+)like\", \"([TB]|NK) Cell\"),   words_to = c(\"ALS\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"tRNA\",     \"rRNA\", \"RNA\", \"DNA\", \"miRNA\", \"mRNA\", \"snRNA\", \"snoRNA\", \"scRNA\", \"lincRNA\", \"IL\",     \"ECM\", \"NK\", \"PI3K/AKT\", \"AKT\", \"PI3K\", \"TGF\", \"NFKB\", \"NFKB\",     \"PI3K/AKT/mTOR Signaling\", \"PI3K/AKT/mTOR\", \"PI3K/AKT\", \"AKT/mTOR\", \"mTOR Signaling\",     \"PI3KCI\", \"PI3Kgamma\", \"PI3K\", \"PPARalpha\", \"PPARgamma\", \"PPAR\", \"UDP-GlcNAc\",     \"mTOR\", \"GPCR\", \"GPCRs\", \"TNFa\", \"TNFR1\", \"TNFR2\", \"TNFs\", \"TNF\", \"TNFSF\",     \"TNF-related\", \"TGFbeta\", \"TGFbeta-Receptor\",       \"TGFbeta\", \"AKT1\", \"IGF1/AKT\",     \"FOXO\", \"HDACs\", \"HDAC\", \"HAT\", \"HATs\", \"Nicotinic Acetylcholine Receptors\", \"G-CSF\",     \"GM-CSF\", \"M-CSF\", \"IL-\\\\1/IL-\\\\2 Pathway\", \"JAK/STAT\\\\1\", \"MKK3/MKK6 Pathway\",     \"MAP\\\\1K\\\\2\", \"p38-MAPK\", \"MAPK1/MAPK3\", \"ERK-MAPK\", \"ERK\", \"ERKs\", \"IFN\\\\1\",     \"\\\\1-Mediated\", \"lncRNA\", \"microRNA\\\\1\", \"1,25-dihydroxyvitamin D3\", \"TWEAK\",     \"ER\", \"VEGFA/VEGFR2\", \"VEGFR1/VEGFR2\", \"VEGF\", \"VEGFR\\\\1\", \"EGFR\", \"EGFRvIII\",     \"EGF/EGFR\", \"Smad2/3 \\\\1\", \"Smad2/3\", \"NFKB\", \"NFKB\", \"C-jun\", \"C-fos\",           \"AP-1\", \"APOE\", \"\\\\1TPase\", \"KRAS\", \"UV\", \"SARS-CoV-2\", \"SARS-CoV-\\\\1\",     \"SARS-CoV\", \"COVID19\", \"Cell-Specific\", \"\\\\1-Like\", \"\\\\1-cell\"),   add_from = NULL,   add_to = NULL,   abbrev_from = c(\"Extracellular.Matrix\", \"Mitochondri(um|a|al|on)\", \"Interferon\",     \"(IL|Interleukin[ ]*)([0-9]+)\", \"Subsequent\", \"Signaling (pathway|system)\", \"Of The\",     \"^Signaling by \", \" Pathway[s]*$\", \"Expression\", \"The Role \"),   abbrev_to = c(\"ECM\", \"Mito\", \"IFN\", \"IL-\\\\2\", \"\", \"Signaling\", \"Of\", \"\", \"\", \"Expr.\",     \"Role \"),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/fixSetLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix Set labels for legibility — fixSetLabels","text":"x following objects: character vector igraph object. V(g)$name attribute used input, resulting label stored V(g)$label. wrap logical indicating whether apply word wrap, based upon supplied width argument. width integer value used wrap=TRUE, sent base::strwrap(). maxNchar numeric value Inf limit maximum characters allowed string. option preferred wrap=TRUE feasible, example heatmap labels. NULL Inf limit applied. See base::nchar(). suffix character value, default \"...\", used maxNchar Inf. string shortened maxNchar, suffix helps indicate additional text. nodeType character string ussed x igraph, limit changes nodes attribute values \"nodeType\". Use \"\" NULL affect nodes. do_abbreviations logical, default TRUE, whether apply abbrev_from,abbrev_to. patterns intended specifically help shorten long phrase, possibly removing words, using common abbreviations. adjustCase logical, default TRUE,  indicating whether adjust uppercase lowercase lettering calling jamba::ucfirst(). default sets characters lowercase, applies uppercase first letter word. lowercaseAll logical used adjustCase=TRUE, passed jamba::ucfirst() removeGrep character regular expression pattern used remove patterns resulting label. default removes common canonical pathway source prefix terms use MSigDB data, example KEGG, BIOCARTA, PID, etc. Use \"\" NULL skip step. Multiple values can defined, applied order. words_from, words_to character vectors pattern, replacement, respectively. pattern matched case-insensitive manner, case-sensitive replacements applicable. uses perl-based regular expression matching base::gsub(), expression \\\\b can used enforce word boundary, either via delimiter, whitespace, end string. add_from, add_to character vectors used addition words_from,words_to. values applied words_from,words_to, user-defined replacements priority. abbrev_from, abbrev_to character vectors used do_abbreviations=TRUE. defaults \"opinionated\", intended shorten common phrases seem critical understanding meaning biological pathways. abbreviations used relatively common phrases terms, abbreviation seems unambiguous fairly widely recognized. Examples: \"Extracellular Matrix\" becomes \"ECM\" \"Mitochondrial\" becomes \"Mito\" \" Pathway\" end phrase removed, required understand rest label. \"Signaling \" start phrase removed, also typically necessary understand label. ... additional arguments passed jamba::ucfirst(x, ...), example firstWordOnly=TRUE capitalize first word.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/fixSetLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix Set labels for legibility — fixSetLabels","text":"vector igraph object, match input x.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/fixSetLabels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix Set labels for legibility — fixSetLabels","text":"function convenient wrapper several steps edit gene set pathways labels slightly legible. operates either character vector, igraph object. use custom ,replacements, along default replacements, supply custom replacements arguments add_from,add_to. use custom ,replacements, without applying defaults, supply custom replacements arguments words_from,words_to.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/fixSetLabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix Set labels for legibility — fixSetLabels","text":"","code":"x <- c(\"KEGG_INSULIN_SIGNALING_PATHWAY\",    \"KEGG_T_CELL_RECEPTOR_SIGNALING_PATHWAY\",    \"KEGG_NEUROTROPHIN_SIGNALING_PATHWAY\"); fixSetLabels(x); #> [1] \"Insulin Signaling\"         \"T-cell Receptor Signaling\" #> [3] \"Neurotrophin Signaling\"    fixSetLabels(x, do_abbreviations=FALSE); #> [1] \"Insulin Signaling Pathway\"         \"T-cell Receptor Signaling Pathway\" #> [3] \"Neurotrophin Signaling Pathway\"     jamba::nullPlot(); jamba::drawLabels(txt=x,    preset=c(\"top\", \"center\", \"bottom\"));"},{"path":"https://jmw86069.github.io/multienrichjam/reference/flip_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip direction of igraph edges — flip_edges","title":"Flip direction of igraph edges — flip_edges","text":"Flip direction igraph edges","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/flip_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip direction of igraph edges — flip_edges","text":"","code":"flip_edges(g, edge_idx, verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/flip_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip direction of igraph edges — flip_edges","text":"g igraph object edge_idx integer index edges order stored igraph::E(g), igraph calls \"edge sequence\" character name node, defined \"node1|node2\". example \"D|\" define edge node name \"D\" node name \"\". verbose=TRUE summary table printed show edges flipped. verbose logical indicating whether print verbose output. verbose=TRUE summary table printed columns: edge_seq: input edge sequence, example edge_idx provided character vector, input vector printed . edge_seq_matched: edge sequence matched g object. example, edge_idx input character vector, edges match g input included . edge_idx: integer index values edges flipped. NA value indicates edge flipped, happen input edge_idx provided character vector edges match g input. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/flip_edges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flip direction of igraph edges — flip_edges","text":"function simply flips direction igraph edges, keeping node edge attributes. Note function flip order nodes edge defined edge_idx, regardless whether igraph directed graph. edge_idx provided character vector edge sequence, entries match edges g ignored. summary table printed verbose=TRUE.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/flip_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip direction of igraph edges — flip_edges","text":"","code":"am <- matrix(ncol=5, nrow=5, byrow=TRUE,    data=c(0,0,0,0,0,       1,0,0,0,0,       1,0,0,0,0,       1,0,0,0,0,       1,0,0,0,0),    dimnames=list(head(LETTERS, 5),       head(LETTERS, 5))) am; #>   A B C D E #> A 0 0 0 0 0 #> B 1 0 0 0 0 #> C 1 0 0 0 0 #> D 1 0 0 0 0 #> E 1 0 0 0 0 g1 <- igraph::graph_from_adjacency_matrix(am) plot(g1);  g2 <- flip_edges(g1, 3:4); plot(g2);"},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_bipartite_nodeset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get partite/connected graph nodesets — get_bipartite_nodeset","title":"Get partite/connected graph nodesets — get_bipartite_nodeset","text":"Get partite/connected graph nodesets defined shared connections","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_bipartite_nodeset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get partite/connected graph nodesets — get_bipartite_nodeset","text":"","code":"get_bipartite_nodeset(   g,   type = \"nodeType\",   set_nodes = NULL,   sep = \",\",   return_type = c(\"list\", \"df\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_bipartite_nodeset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get partite/connected graph nodesets — get_bipartite_nodeset","text":"g igraph object contains one attribute column node type. type character string node/vertex attribute represents node type. set_nodes character NULL, contains set node neighbors requested nodeset. example, one might want nodes connect c(\"\", \"B\", \"C\"). set_nodes=NULL nodesets returned. sep character string used delimiter node names defining nodeset name return_type character string indicating type data return: \"list\" returns list nodesets, element list character vector node names. \"df\" returns data.frame detailed annotation node, including nodesets, neighbor nodes, etc. verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_bipartite_nodeset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get partite/connected graph nodesets — get_bipartite_nodeset","text":"method development, intent bundle edges large subset nodes connected node neighbors. typical graph may two nodes neighbors, situation tends happen much often bipartite graphs, nodes one type permitted node neighbors type. required method work, however. driving scenario Cnet (concept network) plots, bipartite network \"Gene\" \"Set\" nodes. fairly common multiple genes present one pathways. result, nodes often positioned near natural -product connected neighbor nodes. Identifying nodeset identical node neighbors enables useful operations: re-positioning, rotating, expanding, compressing whole nodeset layout improve network graph aesthetics, node label readability, reducing overlaps edge bundling improve visual distinctiveness multiple nodesets","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_cnet_nodeset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cnet node set by connected Sets — get_cnet_nodeset","title":"Get Cnet node set by connected Sets — get_cnet_nodeset","text":"Get Cnet node set connected Sets","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_cnet_nodeset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cnet node set by connected Sets — get_cnet_nodeset","text":"","code":"get_cnet_nodeset(g, set_nodes = NULL, sep = \",\", filter_set_only = TRUE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_cnet_nodeset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cnet node set by connected Sets — get_cnet_nodeset","text":"g igraph object specifically containing Cnet plot data, node attribute \"nodeType\" values c(\"Gene\", \"Set\"). set_nodes character vector one set names, defined names nodes nodeType=\"Set\" node nodeType=\"Gene\" connected. example set_nodes=c(\"\", \"B\") return Gene nodes connected Set nodes \"\" \"B\". set_nodes=NULL function returns list set_nodes observed. sep character string used delimited combining set_nodes name. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_cnet_nodeset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cnet node set by connected Sets — get_cnet_nodeset","text":"character vector argument set_nodes supplied character vector; set_nodes NULL, function returns list character vectors whose names represent Set node names connected Gene node, multiple Set node names delimited sep.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_cnet_nodeset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Cnet node set by connected Sets — get_cnet_nodeset","text":"function operates Cnet igraph object, distinguished node attribute \"nodeType\" value \"Gene\" Gene nodes, \"Set\" Set nodes. function returns Gene nodes connected Sets given argument set_nodes. useful identify genes connected Set \"\" \"B\" example, words Gene nodes specific subcluster Cnet igraph. set_nodes NULL, function returns list containing character vectors, vector represents Gene nodes connected combination Set nodes. option useful obtaining possible Gene subclusters. function also called adjust_cnet_nodeset() order manipulate nodes subcluster group, example calling nudge_igraph_node() whole set nodes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_hull_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data for alpha hull (internal) — get_hull_data","title":"Get data for alpha hull (internal) — get_hull_data","text":"Get data alpha hull (internal)","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_hull_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data for alpha hull (internal) — get_hull_data","text":"","code":"get_hull_data(   x,   verbose = FALSE,   hull_method = \"ahull\",   buffer = NULL,   alpha = NULL,   expand = 0.1,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_hull_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data for alpha hull (internal) — get_hull_data","text":"x numeric matrix x,y coordinates verbose logical indicating whether print verbose output hull_method character string preferred hull method. alpha numeric passed ashape() expand numeric used define alpha based upon coordinate range. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_hull_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data for alpha hull (internal) — get_hull_data","text":"function intended internal use make_point_hull() exported convenient re-use functions relevant.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_arrow_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get igraph arrow mode — get_igraph_arrow_mode","title":"Get igraph arrow mode — get_igraph_arrow_mode","text":"Get igraph arrow mode","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_arrow_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get igraph arrow mode — get_igraph_arrow_mode","text":"","code":"get_igraph_arrow_mode(graph, arrow.mode = NULL)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_arrow_mode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get igraph arrow mode — get_igraph_arrow_mode","text":"function mimics internal function igraph:::.get.arrow.mode().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain or create layout for igraph object — get_igraph_layout","title":"Obtain or create layout for igraph object — get_igraph_layout","text":"Obtain create layout igraph object","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain or create layout for igraph object — get_igraph_layout","text":"","code":"get_igraph_layout(g, layout = NULL, make_circular = TRUE, verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain or create layout for igraph object — get_igraph_layout","text":"g igraph object layout one : numeric matrix layout coordinates, nrow(layout) equal number nodes igraph::vcount(g). function takes igraph input, returns numeric matrix layout coordinates. NULL: use layout embedded g using igraph::graph_attr(g, \"layout\") exists. exist, make_circular=TRUE causes new layout created arbitrary circular coordinates; make_circular=FALSE return NULL. make_circular logical indicating whether create makeshift layout input data already contain layout coordinates, layout supplied. verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain or create layout for igraph object — get_igraph_layout","text":"numeric matrix x,y coordinates nrow equal number nodes input, igraph::vcount(g). Note rownames() defined match node names igraph::V(g)$name, unlike default igraph layouts.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/get_igraph_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain or create layout for igraph object — get_igraph_layout","text":"function simple helper function intended retrieve node layout igraph object. layout supplied function used define specific layout matrix.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/grid_with_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Heatmap with title and subtitle using grid viewports — grid_with_title","title":"Draw Heatmap with title and subtitle using grid viewports — grid_with_title","text":"Draw Heatmap title subtitle using grid viewports","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/grid_with_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Heatmap with title and subtitle using grid viewports — grid_with_title","text":"","code":"grid_with_title(   object,   title = NULL,   title_fontsize = 18,   title_just = \"centre\",   caption = NULL,   caption_fontsize = 12,   caption_just = \"left\",   caption_x = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/grid_with_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Heatmap with title and subtitle using grid viewports — grid_with_title","text":"object object class \"Heatmap\", \"gTree\", object methods::hasMethod(\"draw\", class(object)) TRUE. title character string used title. NULL nchar(title)==0 title displayed. title_fontsize numeric value indicating font size, units \"points\". title_just character string indicating justification (alignment) title. caption, caption_fontsize, caption_just arguments equivalent title_* arguments. caption_x numeric value grid units specifying position caption text. default caption_just \"left\" caption_x defined grid::unit(0.2, \"npc\"), positions caption left side (20% left edge) plot, text proceeding right point. verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/grid_with_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Heatmap with title and subtitle using grid viewports — grid_with_title","text":"byproduct function draw grid visualization includes title subtitle, object center.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/grid_with_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw Heatmap with title and subtitle using grid viewports — grid_with_title","text":"function likely work grid ComplexHeatmap input. objects draw() defined may work properly. Note: function may superceded ability include overall title using ComplexHeatmap::draw(), originally possible. function intended help make easier wrap heatmap ComplexHeatmap::Heatmap() inside relevant grid viewports order display one large title top resulting visualization, optionally one subtitle bottom visualization. input can one heatmap (Heatmap object), object class \"gTree\", object method draw() associated , detected methods::hasMethod(\"draw\", class(object)). good example \"gTree\" object result calling draw() inside grid::grid.grabExpr(), example: grid::grid.grabExpr(ComplexHeatmap::draw(...)) ComplexHeatmap::draw() function extended capability arranging one heatmaps associated annotations.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/gsubs_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern replacement with multiple patterns — gsubs_remove","title":"Pattern replacement with multiple patterns — gsubs_remove","text":"Pattern replacement multiple patterns","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/gsubs_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pattern replacement with multiple patterns — gsubs_remove","text":"","code":"gsubs_remove(   pattern,   replacement,   x,   ignore.case = TRUE,   replaceMultiple = rep(TRUE, length(pattern)),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/gsubs_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pattern replacement with multiple patterns — gsubs_remove","text":"pattern character vector patterns replacement character vector replacements x character vector input data curated ignore.case logical indicating whether perform pattern matching case-insensitive manner, ignore.case=TRUE ignore uppercase/lowercase distinction. ... additional arguments passed base::gsub() base::sub(). replace_multiple logical vector indicating whether perform global substitution, replace_multiple=FALSE replace first occurrence pattern, using base::sub(). Note vector can refer individual entries pattern.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/gsubs_remove.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pattern replacement with multiple patterns — gsubs_remove","text":"function simple wrapper around base::gsub() considering series pattern-replacement combinations. applies pattern match replacement order therefore vectorized.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/handle_igraph_param_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle igraph attribute parameter list — handle_igraph_param_list","title":"Handle igraph attribute parameter list — handle_igraph_param_list","text":"Handle igraph attribute parameter list, internal function jam_igraph()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/handle_igraph_param_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle igraph attribute parameter list — handle_igraph_param_list","text":"","code":"handle_igraph_param_list(   x,   attr,   factor_l,   i_values = NULL,   attr_type = c(\"node\", \"vertex\", \"edge\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/handle_igraph_param_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle igraph attribute parameter list — handle_igraph_param_list","text":"x igraph object attr character name attribute update x. factor_l list numeric vector function: list numeric vectors names(factor_l) correspond attribute names, names numeric vectors attribute values attribute names attribute values used match relevant entities type attr_type. matching entities, attribute values used defined attribute name attr, multiplied matching numeric value factor_l. numeric vector directly multiplied i_values produce adjusted output vector i_values. function used modify i_values calling factor_l(i_values) produce adjusted output i_values. i_values vector attribute values represent current attribute values x attribute attr. attr_type character string indicating type entity adjusted x: \"node\" \"vertex\" refers igraph::vertex_attr() \"edge\" refers igraph::edge_attr() ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/handle_igraph_param_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle igraph attribute parameter list — handle_igraph_param_list","text":"vector attribute values representing attr.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/handle_igraph_param_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Handle igraph attribute parameter list — handle_igraph_param_list","text":"mechanism intended help update igraph attributes bulk operations attribute values associated nodes edges. commonly, argument factor_l multiplied numeric attributes scale attribute values, example label font size, node size. example:   function call match node attribute nodeType, size nodes attribute value nodeType=\"Set\" multiplied size * 2, nodeType=\"Gene\" multiplied size * 1.","code":"handle_igraph_param_list(x,    attr=\"size\",    factor_l=list(nodeType=c(Gene=1, Set=2)),    i_values=rep(1, igraph::vcount(x)),    attr_type=\"node\")"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/heatmap_column_order_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Heatmap column order — heatmap_column_order_deprecated","title":"Return Heatmap column order — heatmap_column_order_deprecated","text":"Return Heatmap column order list character vectors (deprecated)","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/heatmap_column_order_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Heatmap column order — heatmap_column_order_deprecated","text":"","code":"heatmap_column_order_deprecated(hm)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/heatmap_row_order_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Heatmap row order (deprecated) — heatmap_row_order_deprecated","title":"Return Heatmap row order (deprecated) — heatmap_row_order_deprecated","text":"Return Heatmap row order list character vectors","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/heatmap_row_order_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Heatmap row order (deprecated) — heatmap_row_order_deprecated","text":"","code":"heatmap_row_order_deprecated(hm)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/highlight_edges_by_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlight edges connected to a node or nodes — highlight_edges_by_node","title":"Highlight edges connected to a node or nodes — highlight_edges_by_node","text":"Highlight edges connected node nodes","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/highlight_edges_by_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highlight edges connected to a node or nodes — highlight_edges_by_node","text":"","code":"highlight_edges_by_node(   g,   node = NULL,   highlight_color = \"royalblue3\",   highlight_width = NULL,   highlight_cex = 2,   nonhighlight_alpha = NULL,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/highlight_edges_by_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highlight edges connected to a node or nodes — highlight_edges_by_node","text":"g igraph object node character node name, integer node index. highlight_color character color used highlighting, default 'royalblue'. highlight_width numeric default NULL, set fixed edge width. highlight_cex numeric default 2, multiplies edge width expansion factor. nonhighlight_alpha numeric default NULL, applies optional alpha transparency non-highlighted edges. Values must 0 (transparent) 1 (opaque), value 0.5 recommended used. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/highlight_edges_by_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Highlight edges connected to a node or nodes — highlight_edges_by_node","text":"igraph object adjusting edge attributes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/highlight_edges_by_node.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Highlight edges connected to a node or nodes — highlight_edges_by_node","text":"function highlights edges connected one nodes applying color, adjusting edge width. Note edge attributes 'width' 'color' yet defined igraph object, defined stored object using default_igraph_values(). example: default_igraph_values()$edge$width default_igraph_values()$edge$color.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/highlight_edges_by_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Highlight edges connected to a node or nodes — highlight_edges_by_node","text":"","code":"cnet1 <- make_cnet_test(seed=1); # highlight edges by node cnet1h <- highlight_edges_by_node(cnet1, \"CA\", nonhighlight_alpha=0.5) # plot the original jam_igraph(cnet1, node_factor=2, label_factor=2)  # plot the highlighted variant jam_igraph(cnet1h, node_factor=2, label_factor=2, label_dist_factor=3)   # highlight edges using nodeset nodesets <- get_cnet_nodeset(cnet1) cnet1hns <- highlight_edges_by_node(cnet1,    nodesets[[grep(\"CA\", nodesets)]],    nonhighlight_alpha=0.5) jam_igraph(cnet1hns, node_factor=2, label_factor=2, label_dist_factor=3,    mark.groups=unname(nodesets[grep(\"CA\", nodesets)]))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/igraph2pieGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert igraph to use pie node shapes — igraph2pieGraph","title":"Convert igraph to use pie node shapes — igraph2pieGraph","text":"Convert igraph use pie node shapes","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/igraph2pieGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert igraph to use pie node shapes — igraph2pieGraph","text":"","code":"igraph2pieGraph(   g,   valueIM = NULL,   valueIMcolors = NULL,   colorV = NULL,   updateLabels = FALSE,   maxNchar = 62,   backgroundColor = \"white\",   seed = 123,   defineLayout = FALSE,   repulse = 3.6,   removeNA = FALSE,   NAvalues = c(NA, \"transparent\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/igraph2pieGraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert igraph to use pie node shapes — igraph2pieGraph","text":"function converts igraph use pie node shapes, pie wedges colored using values derived numeric matrix valueIM pre-defined character matrix containing colors valueIMcolors. Note pie wedge sizes equally-sized vary score, instead color intensity applied pie wedge. Node names using V(g)$name matching rownames(valueIMcolors) colorized node shape converted pie. nodes modified. valueIMcolors defined, derived valueIM using colorjam::matrix2heatColors(). case, colorV defines color used numeric values column, options passed colorjam::matrix2heatColors() via ... arguments.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list.html","id":null,"dir":"Reference","previous_headings":"","what":"convert incidence matrix to list — im2list","title":"convert incidence matrix to list — im2list","text":"convert incidence matrix list","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert incidence matrix to list — im2list","text":"","code":"im2list(x, empty = c(NA, \"\", 0, FALSE), ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert incidence matrix to list — im2list","text":"x matrix equivalent object colnames(x) indicating list set names, rownames(x) indicating list contents. empty character vector incidence matrix values considered \"empty\" therefore indicate row x present given column x. items considered present. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert incidence matrix to list — im2list","text":"list character vectors, list names defined colnames(x), list elements vectors contain values rownames(x).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert incidence matrix to list — im2list","text":"function converts incidence matrix, equivalent data.frame, list. matrix contain either numeric values c(0, 1), logical values c(TRUE,FALSE), otherwise values considered either zero == FALSE, non-zero == TRUE. resulting list named colnames(x) input, contain members named rownames(x) either non-zero, contain TRUE. Values NA converted zero 0 therefore ignored.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert incidence matrix to list — im2list","text":"","code":"im <- matrix(c(0,1,-1,1,1,NA,-1,0,1),    ncol=3,    nrow=3,    dimnames=list(letters[1:3], LETTERS[1:3])) print(im); #>    A  B  C #> a  0  1 -1 #> b  1  1  0 #> c -1 NA  1 # matrix input im2list(im); #> $A #> [1] \"b\" \"c\" #>  #> $B #> [1] \"a\" \"b\" #>  #> $C #> [1] \"a\" \"c\" #>   # data.frame imdf <- data.frame(im); print(imdf); #>    A  B  C #> a  0  1 -1 #> b  1  1  0 #> c -1 NA  1 im2list(im); #> $A #> [1] \"b\" \"c\" #>  #> $B #> [1] \"a\" \"b\" #>  #> $C #> [1] \"a\" \"c\" #>   # logical input imtf <- (!im == 0); print(imtf); #>       A    B     C #> a FALSE TRUE  TRUE #> b  TRUE TRUE FALSE #> c  TRUE   NA  TRUE im2list(imtf); #> $A #> [1] \"b\" \"c\" #>  #> $B #> [1] \"a\" \"b\" #>  #> $C #> [1] \"a\" \"c\" #>"},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"convert incidence matrix to list — im2list_dep","title":"convert incidence matrix to list — im2list_dep","text":"convert incidence matrix list","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert incidence matrix to list — im2list_dep","text":"","code":"im2list_dep(x, verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list_dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert incidence matrix to list — im2list_dep","text":"list character vectors, list names defined colnames(x), vectors contain values rownames(x).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/im2list_dep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert incidence matrix to list — im2list_dep","text":"function converts incidence matrix, equivalent data.frame, list. matrix contain either numeric values c(0, 1), logical values c(TRUE,FALSE), otherwise values considered either zero == FALSE, non-zero == TRUE. resulting list named colnames(x) input, contain members named rownames(x) either non-zero, contain TRUE. Values NA converted zero 0 therefore ignored. function uses transactions class arules R package, testing substantially faster similar techniques variety R packages.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"Import Ingenuity Pathway Analysis 'IPA' results, default reverting IPA symbols input values","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"","code":"importIPAenrichment(   ipaFile,   headerGrep =     \"(^|\\t)((expr.|-log.|)p-value|Pvalue|Score($|\\t)|Symbol($|\\t)|Ratio($|\\t)|Consistency.Score|Master.Regulator($|\\t))\",   ipaNameGrep = c(\"Pathway\", \"Regulator$\", \"Regulators\", \"Regulator\", \"Disease\",     \"Toxicity\", \"Category\", \"Categories\", \"Function\", \"Symbol$\", \"^ID$\",     \"My.(Lists|Pathways)\"),   geneGrep = c(\"Molecules in Network\", \"Target molecules\", \"Molecules\", \"Symbol\"),   geneCurateFrom = c(\"[ ]*[(](complex|includes others)[)][ ]*\", \"^[, ]+|[, ]+$\"),   geneCurateTo = c(\"\", \"\"),   method = 1,   sheet = 1,   sep = \"\\t\",   xlsxMultiSheet = TRUE,   useXlsxSheetNames = FALSE,   remove_blank_colnames = TRUE,   convert_ipa_slash = TRUE,   ipa_slash_sep = \":\",   revert_ipa_xref = TRUE,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"ipaFile one four input types described : character vector text file names; character vector Excel .xlsx file names; list data.frame objects. headerGrep regular expression pattern used recognize header columns found Ingenuity IPA enrichment data. ipaNameGrep vector regular expression patterns used recognize name enriched entity, example biological pathway, network, disease category, etc. geneGrep regular expression pattern used recognize column containing genes, molecules tested enrichment found enriched entity. geneCurateFrom, geneCurateTo vector patterns replacements, respectively, used curate values gene column. replacement rules used ensure genes delimited consistently, leading trailing delimiters. method integer value indicating method used import data text file, : method=1 uses data.table::read.table() textConnection argument; method=2 uses readr::read_tsv(). motivation use data.table::read.table() performed better presence UTF-8 characters alpha symbol. sheet integer value used ipaFile vector Excel .xlsx files, Excel format includes multiple worksheets. value extract enrichment data one worksheet Excel file. sep character string used ipaFile vector text files, split fields columns. default split fields tab character. xlsxMultiSheet logical indicating whether input Excel .xlsx files contain multiple worksheets. useXlsxSheetNames logicl indicating whether use Excel worksheet name imported enrichment table, importing .xlsx files, xlsxMultiSheet=FALSE. xlsxMultiSheet=TRUE name derived value matched using ipaNameGrep, case, expected multiple enrichment tables one worksheet. remove_blank_colnames logical indicating whether drop colnames() values contained c(NA, \"\"). option may preferable remove_blank_colnames=FALSE values column like zScore NA, still like retain column consistency data. found IPA report zScore values 4 fewer genes involved enrichment result. convert_ipa_slash logical indicating whether convert IPA gene naming conventions, currently genes considered one entity IPA system, example \"HSPA1A/HSPA1B\" considered one gene, even though two Entrez gene entries \"HSPA1A\" \"HSPA1B\" can represented. Regardless whether one genes provided IPA, considers one entity purpose pathway enrichment hypergeometric testing. Unfortunately, forward slash \"/\" also used clusterProfiler object enrichResult gene delimiter, hard-coded changed. automatically consider \"HSPA1A/HSPA1B\" two genes, causing mismatch IPA results. convert_ipa_slash=TRUE default, converts forward slash \"/\" value argument ipa_slash_sep. ipa_slash_sep character string used delimited convert_ipa_slash=TRUE, used replace genes contain forward slash \"/\" use another character. revert_ipa_xref logical indicating whether revert IPA gene symbols reported, requires IPA data contains section \"Analysis Ready Molecules\". verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"list data.frame objects, data.frame contains enrichment data one Ingenuity IPA enrichment tests.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"function parses Ingenuity Pathway Analysis ('IPA') enrichment data list data.frame objects downstream analysis. data.frame represents results one Ingenuity IPA test, however sections contain gene set enrichment results. default, argument revert_ipa_xref=TRUE convert IPA gene symbol values back original identifier. cases* behavior desirable, caveats: using platform data (example microarray data) use non-gene identifier, recommended use revert_ipa_xref=FALSE. cases, IPA gene symbol may user-friendly multienrichjam. option helpful view IPA gene symbols appear IPA report - even symbols sometimes match input row identifiers. helpful use revert_ipa_xref=TRUE identifier also used compare source data, example trying make expression heatmap genes involved enrichment results. option convert IPA gene symbol back Affymetrix probeset ID, example, probeset ID values used primary identifier measurement. probeset ID might convenient align input data matrix. primary reason option providing gene symbols input IPA, renamed IPA preferred gene symbols, therefore difficult match gene symbols provided IPA. case, output list contain entry \"Analysis Ready Molecules\" full IPA data table used analysis. data.frame also contain statistical columns, provided IPA upfront.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"Separate multiple IPA enrichment tables. Rename colnames consistent. Revert IPA gene aliases original user input (default optional).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"input-format","dir":"Reference","previous_headings":"","what":"Input format","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"ipaFile can text .txt file, text file contains IPA enrichment data tall format. format common. ipaFile can Excel .xlsx file, contains IPA enrichment data one tall worksheet tab. ipaFile can Excel .xlsx file, type IPA enrichment appears separate Excel worksheet tab. ipaFile can list data.frame objects. option intended IPA data already imported R separate data.frame objects.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"using \"Export \" 'IPA', default text format includes multiple enrichment tables concatenated together one file. enrichment table contains unique column headers, descriptive text line preceding column headers. function intended separate enrichment tables list data.frame objects, retain descriptive text names list.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/importIPAenrichment.html","id":"troubleshooting","dir":"Reference","previous_headings":"","what":"Troubleshooting","title":"Import Ingenuity Pathway Analysis 'IPA' results — importIPAenrichment","text":"common error occurs reverting IPA gene symbols original user-supplied identifier, default revert_ipa_xref=TRUE. errors step, consider revert_ipa_xref=FALSE retain gene symbol recognized IPA. downside approach may difficult equate input identifier. case look \"Analysis Ready Molecules\" data.frame contain user-provided values \"ID\"; IPA recognized symbol \"Name\", optionally column \"Symbol\" edited multienrichjam.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list.html","id":null,"dir":"Reference","previous_headings":"","what":"convert signed incidence matrix to list — imSigned2list","title":"convert signed incidence matrix to list — imSigned2list","text":"convert signed incidence matrix list","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert signed incidence matrix to list — imSigned2list","text":"","code":"imSigned2list(x, empty = c(NA, \"\", 0, FALSE), ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert signed incidence matrix to list — imSigned2list","text":"x matrix equivalent object colnames(x) indicating list set names, rownames(x) indicating list contents. empty character vector incidence matrix values considered \"empty\" therefore indicate row x present given column x. items considered present, assigned direction based upon value cell x. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert signed incidence matrix to list — imSigned2list","text":"list named numeric vectors, list names defined colnames(x), vector names derived rownames(x). Values vector indicate signed direction, c(-1,1).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert signed incidence matrix to list — imSigned2list","text":"function converts signed incidence matrix contains positive negative values, equivalent data.frame, list named vectors containing values c(-1, 1) indicate signed direction. input matrix contain numeric values positive negative values indicate directionality. input contains logical values c(TRUE,FALSE) direction assumed +1 positive. Values NA converted zero 0 therefore ignored. Values logical TRUE FALSE converted numeric output.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert signed incidence matrix to list — imSigned2list","text":"","code":"im <- matrix(c(0,1,-1,1,1,NA,-1,0,1),    ncol=3,    nrow=3,    dimnames=list(letters[1:3], LETTERS[1:3])) print(im); #>    A  B  C #> a  0  1 -1 #> b  1  1  0 #> c -1 NA  1 # matrix input im2list(im); #> $A #> [1] \"b\" \"c\" #>  #> $B #> [1] \"a\" \"b\" #>  #> $C #> [1] \"a\" \"c\" #>  imSigned2list(im); #> $A #>  b  c  #>  1 -1  #>  #> $B #> a b  #> 1 1  #>  #> $C #>  a  c  #> -1  1  #>  imSigned2list(im != 0); #> $A #> b c  #> 1 1  #>  #> $B #> a b  #> 1 1  #>  #> $C #> a c  #> 1 1  #>"},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"convert signed incidence matrix to list — imSigned2list_dep","title":"convert signed incidence matrix to list — imSigned2list_dep","text":"convert signed incidence matrix list","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert signed incidence matrix to list — imSigned2list_dep","text":"","code":"imSigned2list_dep(x, verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list_dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert signed incidence matrix to list — imSigned2list_dep","text":"list named numeric vectors, list names defined colnames(x), vector names derived rownames(x). Values vector indicate signed direction, c(-1,1).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/imSigned2list_dep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert signed incidence matrix to list — imSigned2list_dep","text":"function converts signed incidence matrix contains positive negative values, equivalent data.frame, list named vectors containing values c(-1, 1) indicate signed direction. input matrix contain numeric values positive negative values indicate directionality. input contains logical values c(TRUE,FALSE) direction assumed +1 positive. Values NA converted zero 0 therefore ignored. function uses transactions class arules R package, testing substantially faster similar techniques variety R packages.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/isColorBlank.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if colors are blank colors — isColorBlank","title":"Determine if colors are blank colors — isColorBlank","text":"Determine colors blank colors","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/isColorBlank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if colors are blank colors — isColorBlank","text":"","code":"isColorBlank(   x,   c_max = 7,   l_min = 95,   alpha_max = 0.1,   blankColor = c(\"#FFFFFF\", \"#FFFFFFFF\", \"transparent\"),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/isColorBlank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if colors are blank colors — isColorBlank","text":"x character vector R colors. c_max maximum chroma determined HCL color space, range color 0 maximum color 100. l_min numeric minimum luminance required color considered blank, combined c_max argument. threshold prevents grey colors considered blank, unless luminance threshold. alpha_max numeric value indicating alpha transparency color considered blank, range fully transparent 0, fully non-transparent 1. blankColor character vector R colors directly matched input x vector. value \"transparent\" useful , easily converted HCL color space. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/isColorBlank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine if colors are blank colors — isColorBlank","text":"function takes vector colors determines color considered \"blank color\", based upon direct match color chroma saturation luminance. example, extremely pale colors colorjam::vals2colorLevels() may considered \"blank\" color saturation extremely low. Similarly, colors extremely high alpha transparency may considered \"blank\".","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Jam wrapper to plot igraph — jam_igraph","title":"Jam wrapper to plot igraph — jam_igraph","text":"Jam wrapper plot igraph","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jam wrapper to plot igraph — jam_igraph","text":"","code":"jam_igraph(   x,   ...,   xlim = NULL,   ylim = NULL,   expand = 0.03,   rescale = FALSE,   node_factor = 1,   node_factor_l = NULL,   edge_factor = 1,   edge_factor_l = NULL,   label_factor = 1,   label_factor_l = NULL,   label_fontsize_l = NULL,   label_dist_factor = 1,   label_dist_factor_l = 1,   use_shadowText = FALSE,   edge_bundling = c(\"default\", \"connections\", \"none\", \"mark.groups\", \"nodegroups\"),   bundle_self = FALSE,   nodegroups = NULL,   render_nodes = TRUE,   render_edges = TRUE,   render_nodelabels = TRUE,   render_groups = TRUE,   vectorized_node_shapes = TRUE,   plot_grid = FALSE,   plot_function = jam_plot_igraph,   mark.groups = list(),   mark.shape = 1/2,   mark.col = NULL,   mark.alpha = 0.2,   mark.border = NULL,   mark.expand = NULL,   mark.lwd = 2,   mark.lty = 1,   mark.smooth = TRUE,   mark.cex = 1,   mark.x.nudge = 0,   mark.y.nudge = 0,   verbose = FALSE,   debug = NULL )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jam wrapper to plot igraph — jam_igraph","text":"x igraph object plotted ... additional arguments passed igraph::plot.igraph() xlim, ylim default x y axis limits. either value NULL range defined layout coordinate ranges, respectively, expanded adding expand side range. expand numeric value used expand x y axis ranges, 0.03 expands size 3%. rescale logical indicating whether rescale layout coordinates c(-1, 1). rescale=FALSE original layout coordinates used -without change. node_factor numeric value multiplied igraph::V(x)$size adjust relative size nodes common numeric scalar value. node_factor_l, label_factor_l, label_dist_factor_l list vectors, names list attribute names, names vector attributes values. values applied addition node_factor, label_factor, label_dist_factor, respectively. vector values used scalar multipliers, analogous node_factor. purpose apply scalar values different subsets nodes. example, consider: node_factor_l=list(nodeType=c(Gene=1, Set=2). list name \"nodeType\" says look igraph::vertex_attr(x, \"nodeType\"). Nodes nodeType=\"Gene\" use 1, nodeType=\"Set\" use 2 scalar value. edge_factor numeric value multiplied igraph::E(x)$width adjust relative width edges common numeric scalar value. label_factor numeric value multiplied igraph::V(x)$label.cex igraph::E(x)$label.cex adjust relative size labels nodes edges common numeric scalar value. label_dist_factor numeric value multiplied igraph::V(x)$label.dist adjust relative distance nodes labels node center common numeric scalar value. use_shadowText logical indicating whether use jamba::shadowText() instead graphics::text(), order render text labels subtle shadow-like outline around label. change improves legibility labels expense slightly longer plot rendering time. edge_bundling character string function, : \"default\" try detect appropriate method: nodegroups mark.groups defined, chooses matching option (see ); otherwise chooses \"connections\". \"none\" perform edge bundling. method best rendering straight edges, rendering multiple identical edges curvature defined igraph::igraph.plotting(). \"connections\" perform graph edge bundling shared connections calling edge_bundle_bipartite() edge_bundle_nodegroups(). option particularly good bipartite graphs concept networks (cnet plots). \"mark.groups\" perform graph edge bundling using mark.groups calling edge_bundle_nodegroups(). option equivalent \"nodegroups\" except uses mark.groups define node groupings. \"nodegroups\" perform graph edge bundling using nodegroups calling edge_bundle_nodegroups(). option equivalent \"mark.groups\" except uses nodegroups define node groupings. function call custom edge bundling function using igraph object x igraph parameters param input. output currently untested, intended enable alternative edge bundling functions may exist outside package. custom function able use node layout coordinates graph_attr(x, \"layout\"), render edges nodes. nodegroups list object output edge_bundle_bipartite() list element character vector vertex node names present igraph::V(x)$name. \"name\" vertex node attribute exists, integer index values used names. Note vertex nodes must represented nodegroup order corresponding edges plotted. render_nodes, render_edges logical indicating whether render vertex nodes, edges, respectively. Sometimes can useful call function byproduct outputs, example, jam_plot_igraph(graph, add=FALSE, render_nodes=FALSE, render_edges=FALSE) create new plot device appropriate axis ranges, can used render edge bundling results example. render_nodelabels logical indicating whether draw node labels, typically last operation plot sequence. Note node labels can rendered without also rendering nodes edges. render_groups logical indicating whether render groups mark.groups supplied. Groups rendered shaded polygon border. vectorized_node_shapes logical indicating whether plot vertex node shapes using vectorized operations. substantially faster, however one drawback nodes plotted order shape, affects positioning nodes node overlaps. tradeoff relatively minor, recommended either reposition nodes reduce prevent overlaps, adjust node sizes reduce overlaps. plot_grid logical indicating whether plot background grid indicating units 2% across layout network graph. units calculated consistent nudge_igraph_nodes(), adjust_cnet_nodeset() functions, scaled relative maximum x- y-coordinate range layout graph. Layout obtained get_igraph_layout() default uses supplied layout, graph attribute igraph::graph_attr(x, \"layout\"). Note default, jam_igraph() represents layout aspect ratio = 1, x-coordinates y-coordiantes represented spacing per unit. function calls plot_layout_scale() render grid lines. plot_function function renders graph, intended changed except customized uses. default plot_function=jam_plot_igraph() calls modified variant igraph:::plot.igraph(). mark.groups list vertex id vectors. interpreted set vertex groups. vertex group highlighted, plotting colored smoothed polygon around “” . See arguments control look polygons. mark.shape numeric scalar vector. Controls smoothness vertex group marking polygons. basically ‘shape’ parameter graphics::xspline() function, possible values -1 1. vector, different value used different vertex groups. mark.col scalar vector giving colors marking polygons, format accepted graphics::xspline(); e.g. numeric color ids, symbolic color names, colors RGB. mark.alpha numeric value 0 (transparent) 1 (opaque) indicating transparency mark.col color fill values, used mark.groups defined, mark.col defined. mark.border scalar vector giving colors borders vertex group marking polygons. NA, border drawn. mark.expand numeric scalar vector, size border around marked vertex groups. units vertex sizes. vector given, different values used different vertex groups. mark.lwd, mark.lty line line type parameters mark.groups polygon. mark.cex numeric adjustment mark label font size, used mark.groups supplied names(mark.groups). mark.x.nudge, mark.y.nudge numeric values units maximum x-axis y-axis range layout coordinates, used adjust label displayed names(mark.groups) defined. arguments passed make_point_hull() label.x.nudge, label.y.nudge, respectively. verbose logical indicating whether print verbose output. debug logical character vector attributes debug output plotted onscreen.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jam wrapper to plot igraph — jam_igraph","text":"function drop-replacement igraph::plot.igraph(), intended provide substantially faster vectorized plotting, render bundled edges requested, handle rescale=FALSE without requiring adjustments. Note function focuses recognizing graph options settings, passes work jam_plot_igraph() performs heavy work rendering graph. also provides convenient methods adjust node size, label font size, label distance node center, based upon node attributes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"vectorized-plots","dir":"Reference","previous_headings":"","what":"vectorized plots","title":"Jam wrapper to plot igraph — jam_igraph","text":"function calls jam_plot_igraph() replacement igraph::plot.igraph(), function implements vectorized plot features vectorized_node_shapes=TRUE default: multiple different vertex \"shape\" attributes, function renders nodes vectorized, one shape time. scenario, original igraph::plot.igraph() draws individual vertex, substantially slower (minutes compared 1-2 seconds) large igraph objects. multiple font families, labels rendered groups font family, order comply limitations graphics::text(). situation fairly rare, however speed improvement substantial, roughly minutes 1-2 seconds. igraph::plot.igraph() renders node label individually multiple font families.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"rescale-false","dir":"Reference","previous_headings":"","what":"rescale=FALSE","title":"Jam wrapper to plot igraph — jam_igraph","text":"default igraph::plot.igraph() uses rescale=TRUE, can distort layout coordinates fit within fixed x- y-axis range c(-1, 1). using rescale=FALSE xlim ylim values adjusted actual coordinate range. desired effect function jam_igraph() apply aspect=1 (asp=1) fixes aspect ratio coordinates represent visual Euclidean distance nodes, define xlim ylim accomodate full layout. function also adjusts node vertex.size vertex.label.dist proportionally.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"edge-bundling","dir":"Reference","previous_headings":"","what":"edge bundling","title":"Jam wrapper to plot igraph — jam_igraph","text":"edge_bundling something edge_bundling=\"none\", edge connections nodes rendered using specific function drawing curved splines bundle edges. approach igraph::plot.igraph() draws straight edges nodes. recommended method edge_bundling=\"default\" try detect appropriate method bundle edges. mark.groups nodegroups defined, default method \"connections\" bundles edges among nodes share connections. assumption nodes share connections usually similar layout coordinates, edge bundling usually intuitive. fact, large set nodes, often round cluster","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"adjust-node-size-label-size-label-distance","dir":"Reference","previous_headings":"","what":"Adjust node size, label size, label distance","title":"Jam wrapper to plot igraph — jam_igraph","text":"following arguments apply scaling nodes edges: node_factor - numeric multiplied node size edge_factor - numeric multiplied edge size label_factor - numeric multiplied label font size label_dist_factor - numeric multiplied label distance node center New attributes vertex.label.fontsize edge.label.fontsize define fixed fontsize points nodes edges, respectively. values modified vertex.label.cex edge.label.cex intended allow control specific fonts used final figure. Note calculations based upon par(\"ps\") represent device-dependent point size. value inappropriate, adjusted control font sizing. following arguments apply scale factor based upon node attribute: node_factor_l - list named vectors applied node size label_factor_l - list named vectors applied label_factor .   multiplier label font size. label_fontsize_l - list named vectors applied define specific, fixed label fontsize points, modified .   vertex.label.cex label_factor. label_dist_factor_l - list named vectors applied label distance node center factor_l technique follows:   specific example:   case, nodes attribute igraph::V(g)$nodeType == \"Gene\" use factor 1.5 Nodes attribute igraph::V(g)$nodeType == \"Set\" use factor 2 nodes adjusted.","code":"node_factor_l = list(node_attr_name = c(    attr_value1 = factor1,    attr_value2 = factor2)) node_factor_l = list(nodeType = c(    Gene=1.5,    Set=2))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"other-features","dir":"Reference","previous_headings":"","what":"Other features","title":"Jam wrapper to plot igraph — jam_igraph","text":"plot layout default rescaled c(-1, 1), therefore allowing direct control plot dimensions node sizes. plot aspect ratio fixed 1, renders many network layouts intended form, opposed scaling axis c(-1, 1), can impose distortion intended layout node distances. use_shadowText=TRUE node labels call jamba::shadowText() draws small partly transparent outline around labels, making legible overlap colored nodes. step effectively draws label n times, can slightly slow rendering overall figure. pie_to_jampie=TRUE, nodes shape=\"pie\" changed shape=\"jampie\" purpose rendering pie shapes vectorized fashion, instead drawn node separately. change substantial improvement rendering time. addition, optional node attributes available: pie.border control individual pie wedge borders, drawn inner borders pie wedge border visible without pie.lwd control line width pie wedge borders. pie.lty control line type pie wedge borders frame.color control frame border color drawn around full circular pie node. border drawn outer border, overlap internal pie wedge border colors. Default colors marked node groups mark.col mark.border defined upfront, call colorjam::rainbowJam() grDevices::rainbow(). colorjam::rainbowJam() produces visually distinct categorical colors. behavior can controlled supplying character vector specific colors mark.col mark.border. Note border match colors, can set \"grey45\" generally visible border. names(mark.groups) defined, values used labels, positioned outer edge polygon. label text size adjusted label.cex, position can adjusted mark.x.nudge, mark.y.nudge, units fraction maximum x- y-axis range (effectively fraction layout size). Optional argument nodegroups can supplied, list vectors, vector represents group nodes. nodegroups can used edge_bundling=\"nodegroups\" define custom edge bundling. option useful defining group nodes edge bundling, nodes used render group borders mark.groups. Finally, individual plot components can individually disabled: render_nodes=FALSE render_edges=FALSE render_groups=FALSE render_nodelabels=FALSE","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jam wrapper to plot igraph — jam_igraph","text":"","code":"# Example with karate karate <- igraph::make_graph(\"Zachary\"); cl <- igraph::cluster_louvain(karate); jam_igraph(karate,    layout=layout_with_qfrf(repulse=3.5),    mark.groups=cl,   mark.lwd=c(1:4),   mark.lty=1:4, mark.shape=1,   edge_bundling=\"default\")   # create example cnet data cnet <- make_cnet_test(num_sets=3)  ## example showing how to use the list form ## This form resizes nodes where igraph::V(g)$nodeType %in% \"Gene\" by 2x, ## and resizes nodes where igraph::V(g)$nodeType %in% \"Set\" by 3x. node_factor_l <- list(nodeType=c(Gene=1.2, Set=2));  ## This form multiplies label.dist for nodeType=\"Gene\" nodes by 1, ## and multiplies label.dist for nodeType=\"Set\" nodes by 0.5 label_dist_factor_l <- list(nodeType=c(Gene=1, Set=0.5))  par(\"mar\"=c(0, 0, 0, 0) + 0.5); jam_igraph(cnet,    use_shadowText=TRUE,    node_factor_l=node_factor_l,    label_factor=0.6,    label_factor_l=list(nodeType=c(Gene=1, Set=2)))  par(\"mar\"=c(2, 2, 2, 2));  # Example using edge bundling by community detection g <- igraph::make_graph(\"Zachary\"); gcom <- igraph::cluster_leading_eigen(g);  jam_igraph(g,    layout=layout_with_qfr,    edge_bundling=\"nodegroups\",    mark.groups=gcom,    nodegroups=gcom,    vertex.color=colorjam::group2colors(gcom$membership))   cfuncs <- list(cluster_leading_eigen=igraph::cluster_leading_eigen,    cluster_edge_betweenness=igraph::cluster_edge_betweenness,    cluster_fast_greedy=igraph::cluster_fast_greedy,    cluster_spinglass=igraph::cluster_spinglass) for (i in seq_along(cfuncs)) {    cfunc <- cfuncs[[i]];    gcom <- cfunc(g);    igraph::V(g)$color <- colorjam::group2colors(gcom$membership);    g <- color_edges_by_nodes(g);    set.seed(123);    jam_igraph(g,       layout=layout_with_qfr,       edge_bundling=\"nodegroups\",       nodegroups=gcom,       mark.groups=gcom)    title(main=names(cfuncs)[i]); }      # fancy example showing mark.groups and colorizing # edges using node colors gcom <- igraph::cluster_spinglass(g); igraph::V(g)$color <- colorjam::group2colors(gcom$membership); g <- color_edges_by_nodes(g); jam_igraph(g,    layout=layout_with_qfrf(repulse=3.2),    edge_bundling=\"nodegroups\",    nodegroups=gcom,    mark.groups=gcom) title(main=paste0(\"cluster_spinglass()\\n\",    \"edge_bundling='nodegroups'\"))   # same but different edge_style jam_igraph(g,    layout=layout_with_qfrf(repulse=3.2),    edge_bundling=\"nodegroups\",    nodegroups=gcom,    mark.groups=gcom,    bundle_style=\"xspline\",    detail=14) title(main=\"bundle_style='xspline'\")   # same but using node connections jam_igraph(g,    layout=layout_with_qfrf(repulse=3.2),    edge_bundling=\"connections\",    nodegroups=gcom,    mark.groups=gcom) title(main=\"edge_bundling='connections'\")"},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Render igraph arrows — jam_igraph_arrows","title":"Render igraph arrows — jam_igraph_arrows","text":"Render igraph arrows","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render igraph arrows — jam_igraph_arrows","text":"","code":"jam_igraph_arrows(   x1,   y1,   x2,   y2,   code = 2,   size = 1,   width = 1,   open = TRUE,   sh.adj = 0.1,   sh.lwd = 1,   sh.col = if (is.R()) par(\"fg\") else 1,   sh.lty = 1,   h.col = sh.col,   h.col.bo = sh.col,   h.lwd = sh.lwd,   h.lty = sh.lty,   arrows_only = FALSE,   curved = FALSE,   verbose = FALSE )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render igraph arrows — jam_igraph_arrows","text":"x1, y1, x2, y2 numeric coordinates initial final x y coordinates. code integer indicating position arrow: code=1 arrow positioned line end code=2 arrow positioned line start code=3 arrow positioned ends line size numeric scaled size arrow head, applied length width arrow head. width numeric scalar arrow head width, applied relative arrow width. open logical indicating whether arrow head filled polygon, otherwise outer \"V\" lines drawn. sh.adj numeric adjustment segment length, : sh.adj=0  extend edge line (underneath arrow head) end line sh.adj=1 extend edge line base arrow head sh.adj=1.1 leave gap approximately 10% arrow head length, edge line start arrow head. sh.lwd numeric line width main segment edge line sh.col character color main segment edge line sh.lty numeric line type main segment edge line h.col, h.col.bo character arrow head color arrow head border color, respectively. h.lwd numeric arrow head line width h.lty numeric arrow head line type arrows_only logical indicating whether draw arrows, arrows_only=FALSE draw arrows edge lines. curved logical indicating whether draw curved edges verbose logical indicating whether print verbose output.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph_arrows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render igraph arrows — jam_igraph_arrows","text":"function mimic internal igraph:::igraph.Arrows() permitted called directly CRAN-approved R packages.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_igraph_arrows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render igraph arrows — jam_igraph_arrows","text":"","code":"plot(NULL, xlim=c(-3, 3), ylim=c(-4, 4), type=\"n\", xlab=\"\", ylab=\"\", bty=\"n\") jam_igraph_arrows(-2, 3, 2, 3, code=1, open=FALSE, sh.col=\"blue\", sh.lwd=2) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] 3 #>  jam_igraph_arrows(-2, 2, 2, 2, code=2, open=FALSE, sh.col=\"red\", sh.lwd=2) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] 2 #>  jam_igraph_arrows(-2, 1, 2, 1, code=3, open=FALSE, sh.col=\"gold\", sh.lwd=2) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] 1 #>  jam_igraph_arrows(-2, 0, 2, 0, code=3, arrows_only=TRUE, open=FALSE, sh.col=\"purple4\", sh.lwd=2) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] 3.265617e-16 #>   jam_igraph_arrows(-2, -1, 2, -1, code=1, open=FALSE, sh.col=\"blue\", h.col=\"#FF000055\", sh.lwd=2, size=2, sh.adj=0.1) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] -1 #>  jam_igraph_arrows(-2, -2, 2, -2, code=1, open=FALSE, sh.col=\"blue\", h.col=\"#FF000055\", sh.lwd=2, size=2, sh.adj=1.1) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] -2 #>  jam_igraph_arrows(-2, -3, 2, -3, code=2, open=FALSE, sh.col=\"blue\", h.col=\"#FF000055\", sh.lwd=2, size=2, sh.adj=1.1) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] -3 #>  jam_igraph_arrows(-2, -4, 2, -4, code=3, open=FALSE, sh.col=\"blue\", h.col=\"#FF000055\", sh.lwd=2, size=2, sh.adj=1.1) #> $lab.x #> [1] -0.6666667 #>  #> $lab.y #> [1] -4 #>  text(x=rep(0, 8), y=seq(from=3, to=-4)+0.2,    labels=c(\"code=1\",       \"code=2\",       \"code=3\",       \"code=3, arrows_only=TRUE\",       \"code=1, size=2, sh.adj=0.1\",       \"code=1, size=2, sh.adj=1.1\",       \"code=2, size=2, sh.adj=1.1\",       \"code=3, size=2, sh.adj=1.1\"))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_mypie.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized mypie() function for igraph vertex pie polygons — jam_mypie","title":"Vectorized mypie() function for igraph vertex pie polygons — jam_mypie","text":"Vectorized mypie() function igraph vertex pie polygons","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_mypie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized mypie() function for igraph vertex pie polygons — jam_mypie","text":"","code":"jam_mypie(   x,   y,   values,   radius,   edges = 200,   col = NULL,   angle = 45,   density = NULL,   border = NULL,   frame.color = NULL,   frame.lwd = par(\"lwd\"),   lty = NULL,   lwd = par(\"lwd\"),   init.angle = 90,   inner_pie_border = getOption(\"inner_pie_border\", TRUE),   inner_cex = 1.01,   xy_max = NULL,   overclose_polygons = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_mypie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorized mypie() function for igraph vertex pie polygons — jam_mypie","text":"x, y numeric coordinate center igraph node. values numeric vector relative pie wedge sizes. radius numeric radius pie edges integer number edges make circle col character vector R colors fill pie wedge, order angle, density used draw lines fill pie node, passed polygon() border character vector R colors pie wedge border frame.color character R color used around entire pie circle. lty numeric character line type init.angle numeric angle degrees (0 360) 0 top circle, proceeding clockwide. inner_pie_border logical whether apply pie.border colors along inside pie wedge polygon, adjacent colors seen beside without overlapping adjacent borders. method currently development. overclose_polygons logical indicating whether close polygon coordinates extra couple points, ensure line join \"ljoin\" properly called drawing polygon. ... additional arguments passed polygon()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_mypie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorized mypie() function for igraph vertex pie polygons — jam_mypie","text":"data.frame columns suitable use polygon() column expanded vector form. Columns x y stored AsIs() list format, combined one NA value numeric vector. NA values cause polygon() draw series separate polygons one vectorized step, much faster drawing series polygons iterative loop.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_mypie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vectorized mypie() function for igraph vertex pie polygons — jam_mypie","text":"function called internally shape.jampie.plot(), intended direct use. See reorder_igraph_nodes() visual examples. function light rewrite igraph:::mypie(), except function determines polygon coordinates without drawing , instead returns polygon coordinates calling function shape.jampie.plot() turn draws polygons using vectorized approach described graphics::polygon(). See shape.jampie.plot() detail. disable pie.border set NA vertex.pie.border=NA V(g)[[2]]$pie.border <- NA. disable frame.color set NA vertex.frame.color=NA V(g)[2]$frame.color <- NA.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_mypie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vectorized mypie() function for igraph vertex pie polygons — jam_mypie","text":"","code":"# See reorder_igraph_nodes() for visual examples."},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_plot_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Jam igraph vectorized plot function (internal) — jam_plot_igraph","title":"Jam igraph vectorized plot function (internal) — jam_plot_igraph","text":"Jam igraph vectorized plot internal function called jam_igraph()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_plot_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jam igraph vectorized plot function (internal) — jam_plot_igraph","text":"","code":"jam_plot_igraph(   x,   ...,   axes = FALSE,   add = FALSE,   xlim = NULL,   ylim = NULL,   mark.groups = list(),   mark.shape = 1/2,   mark.col = NULL,   mark.alpha = 0.2,   mark.border = NULL,   mark.expand = NULL,   mark.lwd = 2,   mark.lty = 1,   mark.smooth = TRUE,   mark.cex = 1,   mark.x.nudge = 0,   mark.y.nudge = 0,   pie_to_jampie = TRUE,   use_shadowText = FALSE,   vectorized_node_shapes = TRUE,   edge_bundling = c(\"default\", \"connections\", \"none\", \"mark.groups\", \"nodegroups\"),   bundle_self = FALSE,   nodegroups = NULL,   render_nodes = TRUE,   render_edges = TRUE,   render_groups = TRUE,   render_nodelabels = TRUE,   params = NULL,   plot_grid = FALSE,   verbose = FALSE,   debug = NULL )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_plot_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jam igraph vectorized plot function (internal) — jam_plot_igraph","text":"x graph plot. ... Additional plotting parameters. See igraph.plotting complete list. axes Logical, whether plot axes, defaults FALSE. add Logical scalar, whether add plot current device, delete device's current contents first. xlim, ylim default x y axis limits. either value NULL range defined layout coordinate ranges, respectively, expanded adding expand side range. mark.groups list vertex id vectors. interpreted set vertex groups. vertex group highlighted, plotting colored smoothed polygon around “” . See arguments control look polygons. mark.shape numeric scalar vector. Controls smoothness vertex group marking polygons. basically ‘shape’ parameter graphics::xspline() function, possible values -1 1. vector, different value used different vertex groups. mark.col scalar vector giving colors marking polygons, format accepted graphics::xspline(); e.g. numeric color ids, symbolic color names, colors RGB. mark.alpha numeric value 0 (transparent) 1 (opaque) indicating transparency mark.col color fill values, used mark.groups defined, mark.col defined. mark.border scalar vector giving colors borders vertex group marking polygons. NA, border drawn. mark.expand numeric scalar vector, size border around marked vertex groups. units vertex sizes. vector given, different values used different vertex groups. mark.lwd, mark.lty line line type parameters mark.groups polygon. mark.cex numeric adjustment mark label font size, used mark.groups supplied names(mark.groups). mark.x.nudge, mark.y.nudge numeric values units maximum x-axis y-axis range layout coordinates, used adjust label displayed names(mark.groups) defined. arguments passed make_point_hull() label.x.nudge, label.y.nudge, respectively. pie_to_jampie logical indicating whether convert vertex shape \"pie\" \"jampie\" order use vectorized plotting. use_shadowText logical indicating whether use jamba::shadowText() instead graphics::text(), order render text labels subtle shadow-like outline around label. change improves legibility labels expense slightly longer plot rendering time. vectorized_node_shapes logical indicating whether plot vertex node shapes using vectorized operations. substantially faster, however one drawback nodes plotted order shape, affects positioning nodes node overlaps. tradeoff relatively minor, recommended either reposition nodes reduce prevent overlaps, adjust node sizes reduce overlaps. edge_bundling character string function, : \"default\" try detect appropriate method: nodegroups mark.groups defined, chooses matching option (see ); otherwise chooses \"connections\". \"none\" perform edge bundling. method best rendering straight edges, rendering multiple identical edges curvature defined igraph::igraph.plotting(). \"connections\" perform graph edge bundling shared connections calling edge_bundle_bipartite() edge_bundle_nodegroups(). option particularly good bipartite graphs concept networks (cnet plots). \"mark.groups\" perform graph edge bundling using mark.groups calling edge_bundle_nodegroups(). option equivalent \"nodegroups\" except uses mark.groups define node groupings. \"nodegroups\" perform graph edge bundling using nodegroups calling edge_bundle_nodegroups(). option equivalent \"mark.groups\" except uses nodegroups define node groupings. function call custom edge bundling function using igraph object x igraph parameters param input. output currently untested, intended enable alternative edge bundling functions may exist outside package. custom function able use node layout coordinates graph_attr(x, \"layout\"), render edges nodes. nodegroups list object output edge_bundle_bipartite() list element character vector vertex node names present igraph::V(x)$name. \"name\" vertex node attribute exists, integer index values used names. Note vertex nodes must represented nodegroup order corresponding edges plotted. render_nodes, render_edges logical indicating whether render vertex nodes, edges, respectively. Sometimes can useful call function byproduct outputs, example, jam_plot_igraph(graph, add=FALSE, render_nodes=FALSE, render_edges=FALSE) create new plot device appropriate axis ranges, can used render edge bundling results example. render_groups logical indicating whether render groups mark.groups supplied. Groups rendered shaded polygon border. render_nodelabels logical indicating whether draw node labels, typically last operation plot sequence. Note node labels can rendered without also rendering nodes edges. plot_grid logical indicating whether plot background grid indicating units 2% across layout network graph. units calculated consistent nudge_igraph_nodes(), adjust_cnet_nodeset() functions, scaled relative maximum x- y-coordinate range layout graph. Layout obtained get_igraph_layout() default uses supplied layout, graph attribute igraph::graph_attr(x, \"layout\"). Note default, jam_igraph() represents layout aspect ratio = 1, x-coordinates y-coordiantes represented spacing per unit. function calls plot_layout_scale() render grid lines. verbose logical indicating whether print verbose output. debug logical character vector attributes debug output plotted onscreen.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/jam_plot_igraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jam igraph vectorized plot function (internal) — jam_plot_igraph","text":"Note function intended called jam_igraph(), internal function intended called directly. jam_igraph() handles overall plot equivalent igraph::plot.igraph(), however calculates layout coordinates, defines useful x- y-axis ranges, adjusts node label sizes relevant layout data range. Specifically vertex.size=15 useful layout range rescaled -1 1; however using jam_igraph() vertex scaled relative actual layout ranges. steps reproduction igraph:::plot.igraph() four changes: Default rescale=FALSE, asp=1 means igraph layout drawn true layout coordinates without distortion. use default igraph::plot.igraph() behavior, use rescale=TRUE. new default may appropriate bipartite layout algorithms generate two columns, seems useful organic layouts aspect ratio 1 helps convey important meaning graph structure, namely enforcing consistent x- y-axis visual distance nodes. Related: xlim ylim values automatically adjusted include layout coordinate range. default igraph::plot.igraph(..., rescale=FALSE) adjust xlim ylim ranges, can problematic supplying layout function, therefore output node coordinates known plot rendering step. vectorized_node_shapes=TRUE default: multiple different vertex \"shape\" attributes, nodes rendered vectorized one shape time. original igraph::plot.igraph() draws individual vertex one one, substantially slower (minutes compared 1-2 seconds) large igraph objects. multiple font families, default plot function draws label one one. jam_plot_igraph() draws labels groups font family, order comply limitations graphics::text(). situation fairly rare, however speed improvement substantial, roughly minutes 1-2 seconds. fourth difference involves edge bundling: edge_bundling used, renders edges differently approach igraph::plot.igraph(), drawing curved splines bundle edges. distinctive features include: use_shadowText=TRUE node labels call jamba::shadowText() draws small partly transparent outline around labels, making legible overlap colored nodes. step effectively draws label n times, can slightly slow rendering overall figure. pie_to_jampie=TRUE, nodes shape=\"pie\" changed shape=\"jampie\" purpose rendering pie shapes vectorized fashion, instead drawn node separately. change substantial improvement rendering time. Default colors marked node groups mark.col mark.border defined upfront, call colorjam::rainbowJam() grDevices::rainbow(). colorjam::rainbowJam()produces visually distinct categorical colors. behavior can controlled supplying acharactervector specific colors formark.colandmark.border. Note border match colors, can set \"grey45\"` generally visible border. Optional argument nodegroups can supplied, list vectors, vector represents group nodes. nodegroups can used edge_bundling=\"nodegroups\" define custom edge bundling. Finally, individual plot components can individually disabled: render_nodes=FALSE render_edges=FALSE render_groups=FALSE render_nodelabels=FALSE Note function called default, called multienrichjam::jam_igraph(). arguments documented igraph::plot.igraph().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/label_communities.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign labels to igraph communities — label_communities","title":"Assign labels to igraph communities — label_communities","text":"Assign labels igraph communities","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/label_communities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign labels to igraph communities — label_communities","text":"","code":"label_communities(   wc,   labels = NULL,   add_catchwords = NULL,   num_keep_terms = 3,   keep_terms_sep = \",\\n\",   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/label_communities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign labels to igraph communities — label_communities","text":"wc communities object, list form nodegroups, list character vectors contain igraph node names. labels character vector optional labels assign directly community clusters. defined, auto-detection method used. add_catchwords character optional words include catchwords, excluded use final label. num_keep_terms integer maximum number terms included final output label, auto-detection used. keep_terms_sep character string used delimited separate term multiple terms concatenated together form cluster label. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/label_communities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign labels to igraph communities — label_communities","text":"communities list format matching input wc format. communities input, additional value cluster_names contain character vector names corresponding integer index wc$membership. nodegroups input, list names character vector cluster labels.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/launch_shinycat.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch ShinyCAT: Cnet Adjustment Tool — launch_shinycat","title":"Launch ShinyCAT: Cnet Adjustment Tool — launch_shinycat","text":"Launch ShinyCAT: Cnet Adjustment Tool","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/launch_shinycat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch ShinyCAT: Cnet Adjustment Tool — launch_shinycat","text":"","code":"launch_shinycat(g = NULL, envir = new.env(), ..., options = list(width = 1200))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/launch_shinycat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch ShinyCAT: Cnet Adjustment Tool — launch_shinycat","text":"g igraph object, can NULL variable 'g' defined 'envir'. envir environment assigned R-shiny function space, may useful capturing igraph object manipulation via R-shiny app. ... additional arguments ignored. options list additional settings, example: host: character string hostname IP address permit incoming connections. Use '0.0.0.0' accept incoming host names. port: numerical port listen incoming connections. quiet: logical whether launch.browser: logical whether launch web browser, default TRUE interactive sessions. display.mode: character string display mode: 'normal' recommended; 'showcase' displays code beside app.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/launch_shinycat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch ShinyCAT: Cnet Adjustment Tool — launch_shinycat","text":"environment invisibly, containing 'g' input igraph 'adj_cnet' output igraph manipulation R-shiny app. also contains two attributes reference: 'nodeset_adj': data.frame used adjust nodesets. 'node_adj': data.frame used adjust nodes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/launch_shinycat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch ShinyCAT: Cnet Adjustment Tool — launch_shinycat","text":"function launches R-shiny app 'ShinyCat' manipulate Cnet igraph object, expected contain node (vertex) attribute 'nodeType' values 'Gene' 'Set'. two ways retain resulting igraph object: Capture output function, environment described . Click \"Adjustments\" \"Save RData\", stores 'igraph` object 'adj_cnet'. function returns environment inside two objects: 'g': igraph data input 'adj_cnet': adjusted Cnet igraph output Additionally, 'adj_cnet' object contains two attributes: 'nodeset_adj', 'node_adj': data.frame objects used bulk_cnet_adjustments() convert 'g' 'adj_cnet'.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/launch_shinycat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch ShinyCAT: Cnet Adjustment Tool — launch_shinycat","text":"","code":"# create Cnet test data g <- make_cnet_test(); cnetenv <- new.env();  # you must catch the output to use the resulting igraph object # output_envir <- launch_shinycat();"},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfr.html","id":null,"dir":"Reference","previous_headings":"","what":"igraph layout using qgraph Fruchterman-Reingold — layout_with_qfr","title":"igraph layout using qgraph Fruchterman-Reingold — layout_with_qfr","text":"igraph layout using qgraph Fruchterman-Reingold","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"igraph layout using qgraph Fruchterman-Reingold — layout_with_qfr","text":"","code":"layout_with_qfr(   g,   repulse = 3.5,   area = 8 * (igraph::vcount(g)^2),   repulse.rad = (igraph::vcount(g)^repulse),   constraints = NULL,   constrain = NULL,   seed = 123,   weights = NULL,   niter = NULL,   max.delta = NULL,   cool.exp = NULL,   init = NULL,   groups = NULL,   rotation = NULL,   layout.control = 0.5,   round = TRUE,   digits = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"igraph layout using qgraph Fruchterman-Reingold — layout_with_qfr","text":"g igraph object repulse exponent power used scale radius effect around vertex. default slightly higher cube number vertices, number vertices increases, values 3.5 4 higher effective layout. area area plot, default square number vertices times 8. Changes plot area also affect values repulse repulse.rad. repulse.rad Repulse radius, defaults number vertices raised repulse power. constraints optional two-column matrix coordinates nodes modified, NA values nodes position can modified. constrain character optional vector node names constrained. argument convenient shortcut defining constraints, layout coordinate matrix NA values row coordinate free move, numeric values coordinate fixed. graph g contains layout igraph::graph_attr(g, \"layout\"), init can defined layout, constraints defined using constrain. ... arguments sent qgraph::qgraph.layout.fruchtermanreingold()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"igraph layout using qgraph Fruchterman-Reingold — layout_with_qfr","text":"two-column numeric matrix coordinates vertex.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"igraph layout using qgraph Fruchterman-Reingold — layout_with_qfr","text":"function provides Fruchterman-Reingold layout igraph object using implementation qgraph package, provides important configuration options deprecated igraph implementation. Notably, repulse.rad parameter helpful adjusting relative spacing vertices, higher values cause tighter packing vertices, lower values allows greater spacing vertices.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"igraph layout using qgraph Fruchterman-Reingold — layout_with_qfr","text":"","code":"if (suppressPackageStartupMessages(require(igraph))) { g  <- make_graph( ~ A-B-C-D-A, E-A:B:C:D,    F-G-H-I-F, J-F:G:H:I,    K-L-M-N-K, O-K:L:M:N,    P-Q-R-S-P, T-P:Q:R:S,    B-F, E-J, C-I, L-T, O-T, M-S,    C-P, C-L, I-L, I-P)  par(\"mfrow\"=c(2,2)); plot(g, main=\"default layout\\n(igraph)\");  plot(g, main=\"layout_with_fr\\n(igraph)\", layout=layout_with_fr);  plot(g, main=\"layout_with_qfr\\n(qgraph default)\", layout=layout_with_qfr);  plot(g, main=\"layout_with_qfr, repulse=6\\n(qgraph custom)\",    layout=function(g)layout_with_qfr(g, repulse=6)); }"},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfrf.html","id":null,"dir":"Reference","previous_headings":"","what":"igraph layout function using qgraph Fruchterman-Reingold — layout_with_qfrf","title":"igraph layout function using qgraph Fruchterman-Reingold — layout_with_qfrf","text":"igraph layout function using qgraph Fruchterman-Reingold","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"igraph layout function using qgraph Fruchterman-Reingold — layout_with_qfrf","text":"","code":"layout_with_qfrf(repulse = 3.5, seed = 123, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"igraph layout function using qgraph Fruchterman-Reingold — layout_with_qfrf","text":"repulse numeric value typically 3 5, passed layout_with_qfr(), turn passed qgraph::qgraph.layout.fruchtermanreingold(). seed numeric value used set R random seed, order make layouts consistent. ... additional arguments passed layout_with_qfr().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfrf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"igraph layout function using qgraph Fruchterman-Reingold — layout_with_qfrf","text":"function used calculate layout coordinates igraph object.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/layout_with_qfrf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"igraph layout function using qgraph Fruchterman-Reingold — layout_with_qfrf","text":"function returns layout function, can convenient calling igraph::plot.igraph(), order set layout parameters call.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2concordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list to concordance matrix — list2concordance","title":"Convert list to concordance matrix — list2concordance","text":"Convert list concordance matrix","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2concordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert list to concordance matrix — list2concordance","text":"","code":"list2concordance(x, naValue = NA, makeSigned = TRUE, verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2concordance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert list to concordance matrix — list2concordance","text":"x list named numerical vectors, sign (positive negative sign) indicates directionality, used calculate concordance, measure agreement overall set directions shared pair vectors. naValue value passed jamba::rmNA() used replace NaN values output matrix. NaN values result pair vectors shared non-zero named entry. makeSigned logical indicating whether force vectors input list x contain values c(-1,0,1), calling base::sign(). verbose logical indicating whether print verbose output. ... additional arguments passed list2imSigned().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2concordance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert list to concordance matrix — list2concordance","text":"function calculates pairwise concordance using Kruskal concordance coefficient (ref) using following equation: (number_agree - number_disagree) / (total_shared) equation applied pair named vectors input list x, reflects degree agreement direction (+ -) shared named elements, +1 perfect concordance (agreement), -1 perfect discordance (disagreement.) Values zero indicate equal agreement disagreement, therefore reflect concordance discordance. Values NA occur named entries shared. function calls list2imSigned() produce signed incidence matrix, used base::crossprod() calculate full matrix values.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2concordance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert list to concordance matrix — list2concordance","text":"","code":"set.seed(123); l123 <- lapply(jamba::nameVector(1:3), function(i){    jamba::nameVector(       sample(c(-1,-1,0,1), replace=TRUE, size=15),       letters[1:15]    ) }); list2concordance(l123); #>           1         2         3 #> 1 1.0000000 0.4285714 0.0000000 #> 2 0.4285714 1.0000000 0.3333333 #> 3 0.0000000 0.3333333 1.0000000  # observe the signed incidence matrix list2imSigned(l123); #>    1  2  3 #> a  0  0 -1 #> b  0  1 -1 #> c  0 -1  0 #> d -1  0  1 #> e  0  0 -1 #> f -1 -1 -1 #> g -1  1  0 #> h -1 -1  0 #> i  0 -1 -1 #> j -1 -1  1 #> k  1  0  0 #> l -1  1  1 #> m -1 -1 -1 #> n -1  0 -1 #> o -1 -1  0"},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2im.html","id":null,"dir":"Reference","previous_headings":"","what":"convert list to incidence matrix — list2im","title":"convert list to incidence matrix — list2im","text":"convert list incidence matrix","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2im.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert list to incidence matrix — list2im","text":"","code":"list2im(x, keepCounts = FALSE, emptyValue = 0, verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2im.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert list to incidence matrix — list2im","text":"x list vectors keepCounts boolean indicating whether return values indicating number occurrences item. emptyValue single value used blank entries, default zero 0. Use emptyValue=NA return NA missing entries. verbose boolean indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2im.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert list to incidence matrix — list2im","text":"numeric matrix whose rownames vector items input list, whole colnames list names.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2im.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert list to incidence matrix — list2im","text":"function converts list vectors incidence matrix, rows vector items columns list names. uses object arules package called arules::transactions offers highly efficient methods interconverting list matrix. transactions class enhanced data matrix, stores data using sparse matrix object type Matrix package, also associates data.frame rows columns matrix offer additional row column annotation, needed. Performance benchmarks showed high speed converting list matrix, also resulting matrix substantially smaller (5-20 times) comparable methods producing data matrix. argument keepCounts=TRUE, method applying counts updates entries multiple instances, helps make step relatively fast.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2im.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert list to incidence matrix — list2im","text":"","code":"L1 <- list(A=c(\"C\",\"A\",\"B\",\"A\"),    D=c(\"D\",\"E\",\"F\",\"D\"),    A123=c(1:8,3,5),    T=LETTERS[7:9]); # Default behavior is to make items unique list2im(L1); #>   A D A123 T #> 1 0 0    1 0 #> 2 0 0    1 0 #> 3 0 0    1 0 #> 4 0 0    1 0 #> 5 0 0    1 0 #> 6 0 0    1 0 #> 7 0 0    1 0 #> 8 0 0    1 0 #> A 1 0    0 0 #> B 1 0    0 0 #> C 1 0    0 0 #> D 0 1    0 0 #> E 0 1    0 0 #> F 0 1    0 0 #> G 0 0    0 1 #> H 0 0    0 1 #> I 0 0    0 1  # Option to report the counts list2im(L1, keepCounts=TRUE); #>   A D A123 T #> 1 0 0    1 0 #> 2 0 0    1 0 #> 3 0 0    2 0 #> 4 0 0    1 0 #> 5 0 0    2 0 #> 6 0 0    1 0 #> 7 0 0    1 0 #> 8 0 0    1 0 #> A 2 0    0 0 #> B 1 0    0 0 #> C 1 0    0 0 #> D 0 2    0 0 #> E 0 1    0 0 #> F 0 1    0 0 #> G 0 0    0 1 #> H 0 0    0 1 #> I 0 0    0 1"},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2imSigned.html","id":null,"dir":"Reference","previous_headings":"","what":"convert list to signeddirectional incidence matrix — list2imSigned","title":"convert list to signeddirectional incidence matrix — list2imSigned","text":"convert list directional incidence matrix","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2imSigned.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert list to signeddirectional incidence matrix — list2imSigned","text":"","code":"list2imSigned(x, emptyValue = NA, verbose = FALSE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2imSigned.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert list to signeddirectional incidence matrix — list2imSigned","text":"x list named vectors, names used identify element, become rownames output incidence matrix. vector values become values incidence matrix. verbose logical indicating whether print verbose output. ... additional arguments passed list2im().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2imSigned.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert list to signeddirectional incidence matrix — list2imSigned","text":"numeric matrix rownames defined vector names vector input list. colnames defined names input list exist. list. Values matrix values vector.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2imSigned.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert list to signeddirectional incidence matrix — list2imSigned","text":"function extends list2im() stores value associated element list. , input format named vector, names vector items, numeric values values stored incidence matrix. common scenario generate vector genes, values c(-1, 0, 1) indicating direction gene expression changes, named gene symbol. vector list represents one statistical test. , list2imSigned() convert list directional matrix representing gene changes across comparisons. Note function currently combine multiple values, instead last occurring value stored resulting matrix. decision partly due efficiency, partly multiple possible methods combine multiple values. example, taking mean(x) given gene, value 1 -1 result 0 might suggest gene statistical hit. Instead, multiple values anticipated per named vector entry, use functions package like data.table dplyr apply function combine values.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/list2imSigned.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert list to signeddirectional incidence matrix — list2imSigned","text":"","code":"L1 <- list(A=c(\"C\",\"A\",\"B\",\"A\"),    D=c(\"D\",\"E\",\"F\",\"D\"),    A123=c(1:8,3,5),    T=LETTERS[7:9]); L1; #> $A #> [1] \"C\" \"A\" \"B\" \"A\" #>  #> $D #> [1] \"D\" \"E\" \"F\" \"D\" #>  #> $A123 #>  [1] 1 2 3 4 5 6 7 8 3 5 #>  #> $T #> [1] \"G\" \"H\" \"I\" #>   # Convert each vector to a signed vector set.seed(123); L2 <- lapply(L1, function(i){    i <- unique(i);    jamba::nameVector(sample(c(-1,1), size=length(i), replace=TRUE), i); }); L2; #> $A #>  C  A  B  #> -1 -1 -1  #>  #> $D #>  D  E  F  #>  1 -1  1  #>  #> $A123 #>  1  2  3  4  5  6  7  8  #>  1  1 -1 -1  1  1  1 -1  #>  #> $T #>  G  H  I  #>  1 -1  1  #>   # Convert to signed incidence matrix list2imSigned(L2); #>    A  D A123  T #> 1 NA NA    1 NA #> 2 NA NA    1 NA #> 3 NA NA   -1 NA #> 4 NA NA   -1 NA #> 5 NA NA    1 NA #> 6 NA NA    1 NA #> 7 NA NA    1 NA #> 8 NA NA   -1 NA #> A -1 NA   NA NA #> B -1 NA   NA NA #> C -1 NA   NA NA #> D NA  1   NA NA #> E NA -1   NA NA #> F NA  1   NA NA #> G NA NA   NA  1 #> H NA NA   NA -1 #> I NA NA   NA  1"},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_cnet_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Cnet test igraph — make_cnet_test","title":"Make Cnet test igraph — make_cnet_test","text":"Make Cnet test igraph","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_cnet_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Cnet test igraph — make_cnet_test","text":"","code":"make_cnet_test(   num_sets = 4,   overlap_counts = c(57, 20, 12, 5),   row_prefix = \"\",   column_prefix = \"Set\",   add_direction = TRUE,   set_colors = NULL,   seed = 123,   repulse = 3.5,   hide_solo_pie = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_cnet_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Cnet test igraph — make_cnet_test","text":"function simply creates igraph object attributes expected cnet plot object: node attribute \"nodeType\" values c(\"Gene\", \"Set\"). optionally derives random directionality add_direction=TRUE, calls apply_cnet_direction() node borders updated appropriately.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_cnet_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Cnet test igraph — make_cnet_test","text":"","code":"# by default, single-border-color pie is shown as circle cnet1 <- make_cnet_test(border_lwd=2) par(\"mar\"=c(0, 0, 0, 0) + 0.5); jam_igraph(cnet1, use_shadowText=TRUE)   # hide_solo_pie=FALSE shows every pie wedge bordder cnet2 <- make_cnet_test(hide_solo_pie=FALSE, border_lwd=2) jam_igraph(cnet2, use_shadowText=TRUE)   # Set nodes can be adjusted, reorienting the Gene nodes cnet2_adj <- adjust_cnet_set_relayout_gene(cnet2,    nodes=c(\"SetB\", \"SetD\"),    x=c(-0.1, 0), y=c(0, -0.2),    repulse=3.6); jam_igraph(cnet2_adj, use_shadowText=TRUE, label_dist_factor=0)   # nodeset spacing can be enforced cnet3 <- make_cnet_test(num_sets=3) jam_igraph(cnet3, use_shadowText=TRUE)  cnet3_sp <- apply_nodeset_spacing(cnet3,    percent_spacing=7) jam_igraph(cnet3_sp, use_shadowText=TRUE)   # a specific nodeset can be individually adjusted cnet3_adj <- adjust_cnet_nodeset(cnet3_sp,    set_nodes=list(c(\"SetA\", \"SetB\")),    x=c(-0.2), y=c(0.2)) jam_igraph(cnet3_adj, use_shadowText=TRUE)   # several nodesets can be adjusted at once cnet3_adj2 <- adjust_cnet_nodeset(cnet3_sp,    set_nodes=list(\"SetA,SetB\", \"SetA,SetC\", \"SetB,SetC\"),    x=c(-0.2, 0.2, 0), y=c(0.2, 0.2, -0.2)) jam_igraph(cnet3_adj2, use_shadowText=TRUE)   # individual nodes can be nudged cnet3_adj2_nudge <- nudge_igraph_node(cnet3_adj2,    nodes=c(\"T\"), x=c(-0.02), y=c(0.1)) jam_igraph(cnet3_adj2_nudge, use_shadowText=TRUE, vertex.label.font=2)   # nodes can be nudged in larger sets using nodes_xy cnet3_adj2_nudge2 <- nudge_igraph_node(cnet3_adj2,    nodes_xy=list(       T=c(-0.02, 0.2),       AK=c(0.02, 0.2),       AG=c(-0.2, 0),       Q=c(0.2, 0) )) jam_igraph(cnet3_adj2_nudge2, use_shadowText=TRUE, vertex.label.font=2)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_legend_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Display colors from bivariate color function — make_legend_bivariate","title":"Display colors from bivariate color function — make_legend_bivariate","text":"Display colors bivariate color function","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_legend_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display colors from bivariate color function — make_legend_bivariate","text":"","code":"make_legend_bivariate(   col_fun,   pretty.n = 5,   name = \"bivariate\",   xlab = \"\",   ylab = \"\",   title = \"\",   border = TRUE,   digits = 3,   title_fontsize = 11,   legend_fontsize = 10,   grid_height = grid::unit(5, \"mm\"),   grid_width = grid_height,   row_breaks = NULL,   column_breaks = NULL,   row_gap = grid::unit(0, \"mm\"),   column_gap = grid::unit(0, \"mm\"),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_legend_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display colors from bivariate color function — make_legend_bivariate","text":"col_fun function defined colorRamp2D(). pretty.n numeric value passed pretty() help define suitable number labels x-axis y-axis color breaks. specific breaks, use column_breaks, row_breaks. name character string used name resulting ComplexHeatmap::Legend object, normally useful trying find grid object custom modifications. xlab, ylab character strings used define x-axis y-axis labels, effectively units displayed. common values xlab=\"z-score\" xlab=\"direction', ylab=\"-log10pvalue\" y=\"log10 significance\". title character, currently ignored, may used future necessary display title overall bivariate legend. border logical indicating whether draw border around color square color legend. argument can also character R color value, define color border drawn around color square. digits numeric passed format() define labels displayed position. title_fontsize, legend_fontsize numeric value passed grid::gpar(fontsize) define font sizes legend axis labels, numerical legend labels, respectively. grid_height, grid_width grid::unit() objects define exact height width colored square color legend. row_breaks, column_breaks numeric optional vectors define absolute breaks row column values displayed color legend. supplied, values defined using pretty argument pretty.n. row_gap, column_gap grid::unit() object define optional visible gaps color squares color legend. default, gap. arguments provided convenient way impose gap, since method used otherwise provide reasonable way adjust spacing. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_legend_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display colors from bivariate color function — make_legend_bivariate","text":"ComplexHeatmap::Legends-class object returned ComplexHeatmap::packLegend(), specifically containing group legends, otherwise known legend list.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_legend_bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display colors from bivariate color function — make_legend_bivariate","text":"function produces \"Legend\" object defined ComplexHeatmap::Legend().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_legend_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display colors from bivariate color function — make_legend_bivariate","text":"","code":"mcolor <- matrix(ncol=3,    c(\"white\", \"salmon1\", \"firebrick3\",       \"white\", \"lightgoldenrod1\", \"gold\",       \"white\", \"skyblue\", \"dodgerblue3\")); row_breaks <- c(0, 0.5, 5); column_breaks <- c(-1, 0, 1); rownames(mcolor) <- row_breaks; colnames(mcolor) <- column_breaks; jamba::imageByColors(mcolor);   col_fun <- colorRamp2D(column_breaks=column_breaks,    row_breaks=row_breaks,    mcolor=mcolor) lgds <- make_legend_bivariate(col_fun,    ylab=\"-log10pvalue\",    xlab=\"z-score\",    pretty.n=5); jamba::nullPlot(doBoxes=FALSE); ComplexHeatmap::draw(lgds)   # same as above with slightly larger grid size # and slightly larger font sizes lgds <- make_legend_bivariate(col_fun,    ylab=\"-log10pvalue\",    xlab=\"z-score\",    title_fontsize=14,    legend_fontsize=12,    grid_height=grid::unit(7, \"mm\"),    pretty.n=5); jamba::nullPlot(doBoxes=FALSE); ComplexHeatmap::draw(lgds)   lgds <- make_legend_bivariate(col_fun,    ylab=\"-log10pvalue\",    xlab=\"z-score\",    pretty.n=NULL); jamba::nullPlot(doBoxes=FALSE); ComplexHeatmap::draw(lgds)   lgds <- make_legend_bivariate(col_fun,    ylab=\"-log10pvalue\",    xlab=\"z-score\",    column_breaks=c(-1, -0.5,  0, 0.5, 1),    row_breaks=c(0, 0.25, 0.5, 0.75, 1),    column_gap=grid::unit(1, \"mm\"),    row_gap=grid::unit(1, \"mm\"),    pretty.n=5); jamba::nullPlot(doBoxes=FALSE); ComplexHeatmap::draw(lgds)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_point_hull.html","id":null,"dir":"Reference","previous_headings":"","what":"Make alpha hull from points — make_point_hull","title":"Make alpha hull from points — make_point_hull","text":"Make alpha hull points","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_point_hull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make alpha hull from points — make_point_hull","text":"","code":"make_point_hull(   x,   expand = 0.1,   buffer = NULL,   alpha = NULL,   seed = 123,   col = \"#FF000033\",   border = \"#FF0000FF\",   lwd = 2,   lty = 1,   max_iterations = 100,   do_plot = FALSE,   add = FALSE,   hull_method = c(\"default\", \"ahull\", \"alphahull\", \"igraph\", \"sf\", \"chull\"),   smooth = TRUE,   shape = 1/2,   label = NULL,   label.cex = 1,   label.x.nudge = 0,   label.y.nudge = 0,   label_preset = NULL,   label_adj_preset = label_preset,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_point_hull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make alpha hull from points — make_point_hull","text":"x numeric matrix 2 columns contains coordinate point. expand numeric value indicating buffer width around point, scaled based upon total range coordinates, used buffer supplied. buffer numeric value indicating absolute buffer width around point. value used provided, otherwise expand used derive value buffer. alpha numeric value passed ashape() hull_method \"alphahull\". value determines level detail resulting hull. seed numeric seed used set.seed() define reproducible behavior. lwd, lty line width line type parameters, respectively. max_iterations integer number attempts call ashape() varying values alpha. iteration checks confirm resulting polygon includes input points. do_plot logical indicating whether plot polygon output. add logical used do_plot=TRUE indicate whether hull drawn onto existing plot device, whether open new plot prior drawing hull. hull_method character string indicating hull method use: \"default\" - use \"alphahull\" alphahull R package available. \"alphahull\" - use ashape() preferred method, fact available option allow concave shape output. \"igraph\" - calls hidden function igraph:::convex_hull() used drawing mark.groups around grouped nodes. \"sf\" - calls sf::st_convex_hull(), effective output \"igraph\". \"chull\" - calls grDevices::chull(), effective output \"igraph\", benefit incurring additional R package dependencies. smooth logical indicating whether smooth final polygon using graphics::xspline(). label_preset character (default NULL) indicating side place label, label provided. Recognized values: \"bottom\", \"top\", \"left\", \"right\". NULL detects offset plot center. label_adj_preset character (default label_preset) indicating label adjustment relative position label. cases equal label_preset. verbose logical indicating whether print verbose output. ... additional arguments ignored. color, border character colors used do_plot=TRUE draw resulting hull polygon.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_point_hull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make alpha hull from points — make_point_hull","text":"numeric matrix polygon coordinates, polygon separated one row contains NA values. output sufficient vectorized plotting base R graphics using graphics::polygon().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_point_hull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make alpha hull from points — make_point_hull","text":"function makes alpha hull around points, calling ashape() piecing together somewhat random set outer edges coherent polygon.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/make_point_hull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make alpha hull from points — make_point_hull","text":"","code":"set.seed(12) n <- 22 xy <- cbind(x=sample(seq_len(n), size=n, replace=TRUE),    y=sample(seq_len(n), size=n, replace=TRUE)); xy <- rbind(xy, xy[1, , drop=FALSE]) x4 <- sf::st_multipoint(xy)  plot(x4, col=\"red\", pch=20, cex=3,    main=\"hull_method='ahull'\") phxy <- make_point_hull(x=xy, expand=0.05, do_plot=TRUE,    hull_method=\"ahull\",    label=\"ahull\",    add=TRUE, xpd=TRUE)   plot(x4, col=\"red\", pch=20, cex=3,    main=\"hull_method='chull'\") phxy2 <- make_point_hull(x=xy, expand=0.05, do_plot=TRUE,    add=TRUE, verbose=TRUE, xpd=TRUE, hull_method=\"chull\")  #> ##  (13:44:58) 17Oct2025:   make_point_hull(): label.y.nudge:0  #> ##  (13:44:58) 17Oct2025:   make_point_hull(): calculated alpha: 10  #> ##  (13:44:58) 17Oct2025:   make_point_hull(): Iterating alpha values up to 100 times.  #> ##  (13:44:58) 17Oct2025:   make_point_hull(): Iterated 1 times, 126 mxys points."},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Mem class — Mem-class","title":"Mem class — Mem-class","text":"Mem class containing results multiEnrichMap().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mem class — Mem-class","text":"","code":"# S4 method for class 'Mem,ANY,ANY,ANY' x[i, j, ..., drop = TRUE]  list_to_Mem(mem)  Mem_to_list(x, ...)  # S4 method for class 'Mem' enrichments(x)  # S4 method for class 'Mem' names(x)  # S4 method for class 'Mem' geneIM(x, ...)  # S4 method for class 'Mem' enrichIM(x, ...)  # S4 method for class 'Mem' memIM(x, ...)  # S4 method for class 'Mem' genes(x, ...)  # S4 method for class 'Mem' thresholds(x, ...)  # S4 method for class 'Mem' sets(x, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mem class — Mem-class","text":"x Mem object character integer gene set / pathway names j character integer enrichment names ... additional arguments ignored mem list output multiEnrichMap()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mem class — Mem-class","text":"list_to_Mem() returns Mem S4 object. Mem_to_list() returns list suitable ther mem functions.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Mem class — Mem-class","text":"enrichList: list enrichResults named enrichment test. enrichLabels: character vector custom enrichment labels, named enrichment test. colorV: character vector R colors, named enrichment test. geneHitList: list vectors named enrichment test. Vectors either:character vector genes tested hits enrichment, orinteger vector named genes values indicating directionality, using 1 -1. geneHitIM: numeric matrix enrichment tests colnames, genes rownames. Values 1 0 indicate gene hits tested, optionally 1 -1 indicate directionality. memIM: numeric matrix gene sets / pathways colnames, genes rownames. Values 1 0 indicating genes present pathway. geneIM: numeric matrix enrichment test colnames, genes rownames. matrix differs 'geneHitIM' includes genes also 'memIM', order. enrichIM: numeric matrix enrichment test colnames, gene sets / pathways rownames. Matrix values enrichment P-values, using appropriate adjusted P-value FDR represent significance. multiEnrichDF: data.frame single combined enrichment table. Data include union genes involved pathway, lowest P-value observed across enrichment tests. multiEnrichResult: enrichResult equivalent 'multiEnrichDF'. intended facilitate use enrichplot functions. thresholds: list thresholds used calling multiEnrichMap(). colnames: list associate actual colnames 'enrichList' conceptual names used multienrichjam. geneIMcolors: character matrix enrichment test colnames, gene rownames. Values colors assigned using 'colorV'. geneIMdirection: numeric matrix equivalent 'geneIM' values 1 -1 indicating directionality. directionality provided, values 1 0. enrichIMcolors: character matrix enrichment test colnames, gene set / pathway rownames. Values color gradients using appropriate P-value threshold used multiEnrichMap(). enrichIMdirection: numeric matrix equivalent 'enrichIM' values indicating directional score. Directional scores may include IPA z-score directional score available. available, values 1. enrichIMgeneCount: integer matrix equivalent 'enrichIM'. Values number genes involved enrichment pathway.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Mem class — Mem-class","text":"x[: Subset Mem object list_to_Mem(): Convert list Mem S4 object Mem_to_list(): Coerce Mem object legacy 'mem' list format enrichments(Mem): Names enrichment tests Mem object names(Mem): Names enrichment tests Mem object geneIM(Mem): matrix genes tested versus enrichment tests enrichIM(Mem): pathway/P-value matrix memIM(Mem): gene-pathway incidence matrix genes(Mem): List genes represented thresholds(Mem): List thresholds defined sets(Mem): List gene sets represented","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mem class — Mem-class","text":"","code":"# See vignettes for a full walk-through  # list_to_Mem examples data(Memtest) mem <- as(Memtest, \"list\") Mem <- list_to_Mem(mem)  # examples for Mem_to_list and as(Mem, \"list\") data(Memtest) mem1 <- Mem_to_list(Memtest) mem2 <- as(Memtest, \"list\") identical(mem1, mem2) #> [1] TRUE"},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Mem object — [,Mem,ANY,ANY,ANY-method","title":"Subset Mem object — [,Mem,ANY,ANY,ANY-method","text":"Extract elements potentially long vector display","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/Mem-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Mem object — [,Mem,ANY,ANY,ANY-method","text":"","code":"# S4 method for class 'Mem,ANY,ANY,ANY' x[i, j, ..., drop = TRUE]  some_vector(   x,   maxToShow = 5,   ellipsis = \"...\",   ellipsisPos = c(\"middle\", \"start\", \"end\"),   quote = FALSE,   sep = \", \",   ... )"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem2emap.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multiEnrichMap mem output to EnrichmentMap emap — mem2emap","title":"Convert multiEnrichMap mem output to EnrichmentMap emap — mem2emap","text":"Convert multiEnrichMap mem output EnrichmentMap emap","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem2emap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert multiEnrichMap mem output to EnrichmentMap emap — mem2emap","text":"","code":"mem2emap(   mem,   overlap = 0.2,   p_cutoff = mem$p_cutoff,   min_count = 4,   colorV = mem$colorV,   cluster_function = igraph::cluster_walktrap,   cluster_list = NULL,   num_keep_terms = 3,   keep_terms_sep = \",\\n\",   repulse = 3.3,   remove_singlets = TRUE,   color_by_nodes = FALSE,   apply_direction = TRUE,   direction_max = 2,   direction_floor = 0.5,   do_plot = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem2emap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert multiEnrichMap mem output to EnrichmentMap emap — mem2emap","text":"mem list object output multiEnrichMap() overlap numeric value 0 1 indicating Jaccard overlap coefficient required two pathways order create network edge connecting two pathways. Typically, overlap=0.2 default, specifies roughly 20% overlap genes shared two pathway nodes. Note genes must involved enrichment, therefore use possible genes annotated pathway. Therefore connections created enriched genes shared pathways. p_cutoff numeric threshold used significant enrichment P-value, usually defined mem object. min_count integer threshold minimum genes involved enrichment order pathway considered significant analysis. colorV character vector R colors used enrichment. cluster_function function used cluster nodes resulting igraph object, used help generate visual summary. num_keep_terms integer number terms keep pathway cluster, cluster_function supplied . Common terms removed pathway cluster, remaining terms sorted decreasing occurrence, used straightforward summary pathways cluster. keep_terms_sep character string used separated multiple pathway terms defined num_keep_terms . repulse numeric value passed layout_with_qfr(). remove_singlets logical indicating whether remove pathway singlets, connections pathways. can help simplify busy figures, however removing singlet pathway recommended may imply pathways statistically significant, fact . color_by_nodes logical indicating whether colorize pathway clusters based upon blending node colors within cluster. Note mix colors often turns brown, feature unpredictable benefit. do_plot logical indicating whether render resulting plot. ... additional arguments passed jam_igraph() customize network plot.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem2emap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert multiEnrichMap mem output to EnrichmentMap emap — mem2emap","text":"function currently development. function intended convert mem output multiEnrichMap() EnrichmentMap igraph format represents statistical enrichment support pathway enrichment. function can apply P-value thresholds using input mem, using custom value. node clustering function applied default, may help define suitable subgroups nodes. defined, clusters used define nodegroups edge bundling.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/memIM2cnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert MultiEnrichment incidence matrix to Cnet plot — memIM2cnet","title":"Convert MultiEnrichment incidence matrix to Cnet plot — memIM2cnet","text":"Convert MultiEnrichment incidence matrix Cnet plot","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/memIM2cnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert MultiEnrichment incidence matrix to Cnet plot — memIM2cnet","text":"","code":"memIM2cnet(   memIM,   categoryShape = c(\"pie\", \"coloredrectangle\", \"circle\", \"ellipse\"),   geneShape = c(\"pie\", \"coloredrectangle\", \"circle\", \"ellipse\"),   categoryColor = \"#E5C494\",   geneColor = \"#B3B3B3\",   categoryLabelColor = \"darkblue\",   geneLabelColor = \"grey25\",   categorySize = 6,   geneSize = 3,   categoryCex = 0.8,   geneCex = 0.5,   frame_darkFactor = NULL,   geneIM = NULL,   geneIMcolors = NULL,   geneIMdirection = NULL,   enrichIM = NULL,   enrichIMcolors = NULL,   enrichIMdirection = NULL,   coloredrect_nrow = 1,   coloredrect_ncol = NULL,   coloredrect_byrow = TRUE,   colorV = NULL,   direction_col = colorjam::col_div_xf(1.2),   hide_solo_pie = TRUE,   remove_blanks = TRUE,   spread_labels = FALSE,   repulse = 3.5,   verbose = FALSE,   ... )  mem2cnet(   memIM,   categoryShape = c(\"pie\", \"coloredrectangle\", \"circle\", \"ellipse\"),   geneShape = c(\"pie\", \"coloredrectangle\", \"circle\", \"ellipse\"),   categoryColor = \"#E5C494\",   geneColor = \"#B3B3B3\",   categoryLabelColor = \"darkblue\",   geneLabelColor = \"grey25\",   categorySize = 6,   geneSize = 3,   categoryCex = 0.8,   geneCex = 0.5,   frame_darkFactor = NULL,   geneIM = NULL,   geneIMcolors = NULL,   geneIMdirection = NULL,   enrichIM = NULL,   enrichIMcolors = NULL,   enrichIMdirection = NULL,   coloredrect_nrow = 1,   coloredrect_ncol = NULL,   coloredrect_byrow = TRUE,   colorV = NULL,   direction_col = colorjam::col_div_xf(1.2),   hide_solo_pie = TRUE,   remove_blanks = TRUE,   spread_labels = FALSE,   repulse = 3.5,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/memIM2cnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert MultiEnrichment incidence matrix to Cnet plot — memIM2cnet","text":"memIM numeric matrix, mem output list format. mem format supplied, relevant arguments empty use corresponding data mem, example geneIM, geneIMcolors, enrichIM, enrichIMcolors. categoryShape, geneShape character string indicating preferred default node shape. general, pie shapes one segment converted circle simplicity plot functions, although using jam_igraph() plot, treat single-segment pie nodes circle anyway, vectorizes pie node plotting make overall rendering time substantially faster. categoryColor, geneColor character R color default node colors, used geneIMcolors,enrichIMcolors supplied, respectively. categoryLabelColor, geneLabelColor character R color used default node label color. categorySize, geneSize numeric default node size. categoryCex, geneCex numeric adjustment default node label font size. frame_darkFactor numeric passed jamba::makeColorDarker() frame color slightly darker node fill color. geneIM, geneIMcolors, geneIMdirection, enrichIM, enrichIMcolors, enrichIMdirection matrix objects typically associated mem output multiEnrichMap(), however optional function can applied broadly incidence matrix. geneIMcolors used define gene (row) node colors enrichIMcolors used define set (column) node colors geneIMdirection,enrichIMdirection used define optional border colors defined direction, -1 , 0 change, +1 . Use direction_col define custom color function. coloredrect_nrow, coloredrect_ncol, coloredrect_byrow arguments used geneShape=\"coloredrectangle\", define layout placement colors across columns geneIMcolors. default, one row colors used. colorV character optional vector R colors, named enrichment names appear colnames(enrichIM) supplied. defined, colors override defined enrichIMcolors. remove_blanks logical indicating whether remove blank subsections node, calling removeIgraphBlanks(). spread_labels logical indicating whether call spread_igraph_labels() orient labels radially away incoming edges. verbose logical indicating whether print verbose output. ... additional arguments passed downstream functions: remove_blanks=TRUE passed removeIgraphBlanks() spread_labels=TRUE passed spread_igraph_labels()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/memIM2cnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert MultiEnrichment incidence matrix to Cnet plot — memIM2cnet","text":"igraph object Concept network data, containing pathways connected genes. node attribute \"nodeType\" either \"Set\" \"Gene\".","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/memIM2cnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert MultiEnrichment incidence matrix to Cnet plot — memIM2cnet","text":"function takes list output multiEnrichMap() uses three elements create Cnet plot: \"memIM\" gene-pathway incidence matrix \"geneIM\" gene incidence matrix \"enrichIM\" pathway enrichment matrix","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/Memtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Memtest S4 Mem object for testing in multienrichjam — Memtest","title":"Memtest S4 Mem object for testing in multienrichjam — Memtest","text":"Mem object testing multienrichjam, 'Newborns' 'OlderChildren' described Reese et al 2019 https://doi.org/10.1016/j.jaci.2018.11.043.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/Memtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Memtest S4 Mem object for testing in multienrichjam — Memtest","text":"","code":"Memtest"},{"path":"https://jmw86069.github.io/multienrichjam/reference/Memtest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Memtest S4 Mem object for testing in multienrichjam — Memtest","text":"Mem object containing two enrichment tests","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_enrichment_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiEnrichment Heatmap of enrichment P-values — mem_enrichment_heatmap","title":"MultiEnrichment Heatmap of enrichment P-values — mem_enrichment_heatmap","text":"MultiEnrichment Heatmap enrichment P-values","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_enrichment_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiEnrichment Heatmap of enrichment P-values — mem_enrichment_heatmap","text":"","code":"mem_enrichment_heatmap(   mem,   style = c(\"dotplot_inverted\", \"dotplot\", \"heatmap\"),   apply_direction = FALSE,   p_cutoff = mem$p_cutoff,   min_count = 1,   p_floor = 1e-10,   point_size_factor = 1,   point_size_max = 8,   point_size_min = 2,   row_method = \"euclidean\",   column_method = \"euclidean\",   name = \"-log10P\",   row_dend_reorder = TRUE,   row_dend_width = grid::unit(30, \"mm\"),   row_fontsize = NULL,   row_cex = 1,   row_split = NULL,   row_gap = grid::unit(2, \"mm\"),   cluster_rows = TRUE,   column_fontsize = NULL,   column_cex = 1,   cluster_columns = FALSE,   sets = NULL,   color_by_column = FALSE,   cex.axis = 1,   lens = 3,   cexCellnote = 1,   column_title = NULL,   row_names_max_width = grid::unit(300, \"mm\"),   column_names_max_height = grid::unit(300, \"mm\"),   heatmap_legend_param = NULL,   hm_cell_size = NULL,   legend_height = grid::unit(6, \"cm\"),   legend_cex = 1,   direction_cutoff = 0,   gene_count_max = NULL,   top_annotation = NULL,   outline = TRUE,   show_enrich = NULL,   use_raster = FALSE,   do_plot = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_enrichment_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiEnrichment Heatmap of enrichment P-values — mem_enrichment_heatmap","text":"mem list object created multiEnrichMap(). Specifically object expected contain enrichIM. style character string indicating style heatmap: \"heatmap\" produces regular heatmap, shaded log10(Pvalue); \"dotplot\" produces dotplot, dot size proportional number genes. See function description details include point size legend beside heatmap. main benefit using \"dotplot\" style also indicates relative number genes involved enrichment. apply_direction logical, default FALSE, whether define bivariate color scheme uses mem$enrichIMdirection defined. color scheme intended indicate directional strength (usually type z-score) statistical enrichment (usually enrichment P-value adjusted P-value). p_cutoff numeric value enrichment P-value cutoff, default value obtained mem$p_cutoff consistent original multiEnrichMap() analysis. P-values p_cutoff colored, therefore white. behavior intended indicate pathways P-value threshold meet threshold, instead pathways similar P-values displaying similar color. min_count numeric number genes required pathway considered dysregulated. p_floor numeric minimum P-value used color gradient. P-values floor colored maximum color gradient. value intended used cases one enrichment P-value low (e.g. 1e-36) prevent P-values colored pale red-white noticeable. point_size_factor numeric used adjust legend point size, since heatmap point size dependent upon number rows, legend may require manual adjustment make sure legend matches heatmap. point_size_min, point_size_max numeric values define minimum maximum point sizes, effectively defining range permitted style=\"dotplot\". row_method character string distance method use row column clustering. clustering performed amap::hcluster(). name character value passed ComplexHeatmap::Heatmap(), used label heatmap color legend. row_dend_reorder logical indicating whether reorder row dendrogram using method described ComplexHeatmap::Heatmap(). end result minor reshuffling leaf nodes dendrogram based upon mean signal row, can sometimes look cleaner. row_fontsize, column_fontsize optional numeric arguments passed ComplexHeatmap::Heatmap() size row column labels. cluster_columns logical indicating whether cluster heatmap columns, default columns clustered. sets character vector sets (pathways) include heatmap, sets excluded. color_by_column logical indicating whether colorize heatmap using mem$colorV defined comparison. option currently experimental, produces base R heatmap using jamba::imageByColors(). cex.axis numeric adjustment axis labels, passed jamba::imageByColors() color_by_column=TRUE. lens numeric value used color gradients, defining extent color gradient enhanced mid-ranges (positive lens), diminished mid-ranges (negative lens). quantitative standard measure color gradient changes, option intended help adjust improve visual perception current data. cexCellnote numeric character expansion value used color_by_column=TRUE, used adjust P-value label size inside heatmap cell. column_title optional character string title display heatmap. row_names_max_width, column_names_max_height, heatmap_legend_param arguments passed ComplexHeatmap::Heatmap() provided convenience. hm_cell_size grid::unit numeric, default NULL, define optional fixed heatmap cell size, useful define absolute square heatmap cells. numeric interpreted \"mm\" units. Note heatmap total height determined number cells, total row gaps defined number row gaps row_split multiplied row_gap. legend_height grid::unit, default 6 cm (60 mm), define absolute height color gradient color key. value used heatmap_legend_param defined. legend_cex numeric default 1, used scale legend fontsize relative default fontsize 10. value used heatmap_legend_param defined. top_annotation HeatmapAnnotation produced ComplexHeatmap::HeatmapAnnotation() NULL, used display customized annotation top heatmap. order columns must match order columns data displayed heatmap. outline logical default TRUE, whether draw outline heatmap cell. Note: outline drawn style=\"dotplot\" already adds lines middle cell, border cell. show_enrich numeric default NULL, indicating enrichment metrics show label cell. one type shown, prefix, multiple types, prefix shown . metrics order include: \"-log10P\" \"z-score\" \"number genes\" use_raster logical passed ComplexHeatmap::Heatmap() indicating whether rasterize heatmap output, used style=\"heatmap\". Rasterization relevant dotplot output since dotplot drawn using individual circle heatmap cell. do_plot logical indicating whether display plot ComplexHeatmap::draw() jamba::imageByColors() relevant. underlying data returned invisibly. ... additional arguments passed ComplexHeatmap::Heatmap() customization.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_enrichment_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiEnrichment Heatmap of enrichment P-values — mem_enrichment_heatmap","text":"Note: recommended call mem_plot_folio() do_which=1 order utilize gene-pathway content clustering, effective clustering similar pathways gene content. Otherwise pathways clustered using -log10(p) enrichment P-value. function lightweight wrapper ComplexHeatmap::Heatmap() intended visualize enrichment P-values multiple enrichment results. P-value threshold used colorize every cell whose P-value meets threshold, cells therefore white.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_enrichment_heatmap.html","id":"drawing-dotplot-with-point-legend","dir":"Reference","previous_headings":"","what":"Drawing Dotplot with Point Legend","title":"MultiEnrichment Heatmap of enrichment P-values — mem_enrichment_heatmap","text":"style argument controls whether heatmap dotplot created. style=\"dotplot\": heatmap cell filled, color drawn circle size proportional number genes involved enrichment. separate point legend returned attribute heatmap object. style=\"dotplot_inverted\": heatmap cell filled, circle drawn size proportional number genes involved enrichment. separate point legend returned attribute heatmap object. draw dotplot heatmap including point legend, use command:   Generally, clustering using gene-pathway incidence matrix effective representing biologically-driven pathway clusters.","code":"ComplexHeatmap::draw(hm,    annotation_legend_list=attr(hm, \"annotation_legend_list\"))"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_find_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Find best overlap threshold for EnrichMap — mem_find_overlap","title":"Find best overlap threshold for EnrichMap — mem_find_overlap","text":"Find best overlap threshold EnrichMap","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_find_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find best overlap threshold for EnrichMap — mem_find_overlap","text":"","code":"mem_find_overlap(   mem,   overlap_range = c(0.1, 0.99),   overlap_count = 2,   node_fraction = 0.5,   max_cutoff = 0.4,   debug = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_find_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find best overlap threshold for EnrichMap — mem_find_overlap","text":"mem list output multiEnrichMap() overlap_range numeric range Jaccard overlap values overlap_count numeric value passed mem_multienrichplot() used filter multienrichmap Jaccard overlap overlap_count. max_cutoff numeric value 0 1, define maximum fraction nodes largest connected component, compared total number non-singlet nodes. debug logical indicating whether return full debug data, used internally determine best overlap cutoff use.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_find_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find best overlap threshold for EnrichMap — mem_find_overlap","text":"function implements straightforward approach determine reasonable Jaccard overlap threshold EnrichMap data. finds overlap threshold first connected component max_cutoff fraction whole network. fraction defined number nodes largest connected component, divided total number non-singlet nodes. nodes connected, fraction == 1. found empirically max_cutoff=0.4, point largest connected component contains 40% nodes, seems reasonably good place start.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_gene_path_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiEnrichment Heatmap of Genes and Pathways — mem_gene_path_heatmap","title":"MultiEnrichment Heatmap of Genes and Pathways — mem_gene_path_heatmap","text":"MultiEnrichment Heatmap Genes Pathways","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_gene_path_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiEnrichment Heatmap of Genes and Pathways — mem_gene_path_heatmap","text":"","code":"mem_gene_path_heatmap(   mem,   genes = NULL,   sets = NULL,   min_gene_ct = 1,   min_set_ct = 1,   min_set_ct_each = 4,   column_fontsize = NULL,   column_cex = 1,   row_fontsize = NULL,   row_cex = 1,   row_method = \"binary\",   column_method = \"binary\",   enrich_im_weight = 0.3,   gene_im_weight = 0.5,   gene_annotations = c(\"im\", \"direction\"),   annotation_suffix = c(im = \"hit\", direction = \"dir\"),   simple_anno_size = grid::unit(6, \"mm\"),   cluster_columns = NULL,   cluster_rows = NULL,   cluster_row_slices = TRUE,   cluster_column_slices = TRUE,   name = NULL,   p_cutoff = mem$p_cutoff,   p_floor = 1e-10,   row_split = NULL,   column_split = NULL,   auto_split = TRUE,   column_title = LETTERS,   row_title = letters,   row_title_rot = 0,   colorize_by_gene = TRUE,   na_col = \"white\",   rotate_heatmap = FALSE,   colramp = \"Reds\",   column_names_max_height = grid::unit(180, \"mm\"),   column_names_rot = 90,   show_gene_legend = FALSE,   show_pathway_legend = TRUE,   show_heatmap_legend = 8,   use_raster = FALSE,   seed = 123,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_gene_path_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiEnrichment Heatmap of Genes and Pathways — mem_gene_path_heatmap","text":"mem list object created multiEnrichMap(). Specifically object expected contain colorV, enrichIM, memIM, geneIM. genes character vector genes include heatmap, genes excluded. sets character vector sets (pathways) include heatmap, sets excluded. min_gene_ct minimum number occurrences gene across pathways, genes excluded. min_set_ct minimum number genes required set, sets excluded. min_set_ct_each minimum number genes required set, required least one enrichment test. column_fontsize, row_fontsize numeric passed fontsize ComplexHeatmap::Heatmap() define specific fontsize column row labels. NULL nrow/ncol heatmap used infer reasonable starting point fontsize, can adjusted column_cex row_cex. row_method, column_method character string distance method use row column clustering. clustering performed amap::hcluster(). enrich_im_weight numeric value 0 1 (default 0.3), relative weight enrichment -log10 P-value overall gene-pathway incidence matrix clustering pathways. enrich_im_weight=0 gene-pathway incidence matrix used pathway clustering. enrich_im_weight=1 pathway significance (-log10 P-value) used pathway clustering. default enrich_im_weight=0.3 balances combination enrichment P-value matrix, gene-pathway incidence matrix. gene_im_weight numeric value 0 1 (default 0.5), relative weight mem$geneIM gene incidence matrix, overall gene-pathway incidence matrix clustering genes. gene_im_weight=0 gene-pathway incidence matrix used gene clustering. gene_im_weight=1 gene incidence matrix (mem$geneIM) used gene clustering. default _im_weight=0.5 balances gene incidence matrix gene-pathway incidence matrix, giving matrix equal weight (since values typically (0, 1). gene_annotations character string indicating annotation(s) display alongside gene axis heatmap. default uses \"im\", \"direction\", \"direction\" removed mem$geneIMdirection available. \"im\" displays gene incidence matrix mem$geneIM using categorical colors defined mem$colorV. \"direction\" displays gene directionality mem$geneIMdirection using colors defined colorjam::col_div_xf(1.2). values given, gene annotation displayed. two values given, annotations displayed order provided. annotation_suffix character vector named values permitted gene_annotations, optional suffix add annotation labels. example may helpful add \"hit\" \"dir\" distinguish enrichment labels. name character value passed ComplexHeatmap::Heatmap(), used label heatmap color legend. p_cutoff numeric value enrichment P-value cutoff, P-values colored, therefore white. enrichment P-values displayed annotated heatmap top main heatmap. cell color meets least minimum P-value threshold. value default taken input mem, using mem$p_cutoff, consistency input multienrichment analysis. column_split, row_split optional arguments passed ComplexHeatmap::Heatmap() split heatmap columns rows, respectively. row_split NULL auto_split=TRUE, determine appropriate number clusters based upon number rows. turn row split, use row_split=NULL row_split=0 row_split=1; likewise column_split. row_split column_split supplied named vector, names aligned sets displayed heatmap, use intersect() two. data clustered, cluster_row_slices=FALSE cluster_column_slices=FALSE dendrogram broken separate pieces. column_title optional character string title display heatmap. row_title optional character string title display beside heatmap. Note row_split defined, row_title applied heatmap section. row_title_rot numeric value indicating rotation row_title text, 0 rotated, 90 rotated 90 degrees. colorize_by_gene logical indicating whether color main heatmap body using colors geneIM represents enrichment given gene involved. Colors blended using colorjam::blend_colors(), using colors mem$colorV, applied mem$geneIM. na_col character string indicating color use NA missing values. Typically argument used colorize_by_gene=TRUE, entries color recognized NA ComplexHeatmap::Heatmap(). rotate_heatmap logical indicating whether entire heatmap rotated pathway names displayed rows, genes columns. enabled, arguments referring columns rows flipped, \"column\" arguments continue affect pathways/sets, \"row\" arguments continue affect genes. includes column_method row_method 0.0.90.900. Exceptions: row_title_rot applied rows, due purpose. column_names_rot applied columns, also due purpose. colramp character name color, color gradient, vector colors, anything compatible input jamba::getColorRamp(). column_names_max_height grid::unit passed ComplexHeatmap::Heatmap(). supplied numeric converted units \"mm\". column_names_rot numeric passed ComplexHeatmap::Heatmap(). show_gene_legend, show_pathway_legend logical whether show gene IM pathway IM legends, respectively. gene IM legend FALSE default, since describes color used column, somewhat redundant pathway IM legend. pathway IM legend displays color scale including range enrichment P-values colorized. show_heatmap_legend numeric logical, (default 8) maximum number labels use heatmap color legend. heatmap color legend includes possible blended colors based upon gene IM data. logical, TRUE converted 8 default. legend items show_heatmap_legend color legend display singlet colors. use_raster logical passed ComplexHeatmap::Heatmap(), (default TRUE), indicating whether rasterize heatmap body. heatmap appears blurry, use FALSE render heatmap cell individually. large heatmaps can create large PDF file size, may introduce visual artifacts output dimensions smaller 1 cell per pixel. seed numeric value passed set.seed() define reproducible random seed. verbose logical indicating whether print verbose output. ... additional arguments passed ComplexHeatmap::Heatmap() customization. However, ... causes error, ComplexHeatmap::Heatmap() function called without ..., intended allow overloading ... different functions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_gene_path_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiEnrichment Heatmap of Genes and Pathways — mem_gene_path_heatmap","text":"Heatmap object defined ComplexHeatmap::Heatmap(), additional attributes: \"caption\" - character string caption described data dimensions clustering parameters. \"caption_legendlist\" - ComplexHeatmap::Legends object suitable included Heatmap legends using draw(hm, annotation_legend_list=caption_legendlist), drawn grid::grid.draw(caption_legendlist). \"draw_caption\" - function draw caption bottom-left corner heatmap default, called attr(hm, \"draw_caption\")() draw_caption(). addition, returned object can interrogated two helper functions help define row column clusters, exact order labels appear heatmap. jamba::heatmap_row_order() - returns list vectors rownames order appear heatmap, list names defined row split. jamba::heatmap_column_order() - returns list vectors colnames order appear heatmap, list names defined row split.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_gene_path_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiEnrichment Heatmap of Genes and Pathways — mem_gene_path_heatmap","text":"function takes mem list output multiEnrichMap() creates gene--pathway incidence matrix heatmap, using ComplexHeatmap::Heatmap(). uses three basic sources data annotate heatmap: mem$memIM gene-set incidence matrix mem$geneIM gene incidence matrix dataset mem$enrichIM pathway enrichment P-value matrix dataset try estimate reasonable number column row splits dendrogram, based solely upon number columns rows. guesses can controlled argument column_split row_split, respectively. pathways filtered min_gene_ct, min_set_ct, min_set_ct_each, order operations follows: min_set_ct_each, min_set_ct - filters applied filtering genes, order ensure genes present start. min_gene_ct - genes filtered pathway filtering, order remove pathways deemed \"significant\" based upon required number genes. pathways removed can number occurrences gene judged appropriately.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiEnrichMap color legend — mem_legend","title":"MultiEnrichMap color legend — mem_legend","text":"MultiEnrichMap color legend","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiEnrichMap color legend — mem_legend","text":"","code":"mem_legend(   mem,   x = \"bottomleft\",   y = NULL,   bg = \"#FFFFFF99\",   box.col = \"transparent\",   title = \"Color Key\",   cex = 0.8,   ncol = 1,   pch = 21,   pt.cex = 2,   pt.lwd = 2,   inset = 0,   do_directional = FALSE,   directional_column = c(\"same\", \"added-bottom\", \"added-top\"),   directional_colors = c(`up-regulated` = \"firebrick3\", `no change` = \"grey80\",     `down-regulated` = \"blue\"),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiEnrichMap color legend — mem_legend","text":"mem list object output multiEnrichMap(), specifically expected contain element \"colorV\". x, y, bg, box.col, title, cex, ncol, pch, pt.cex, pt.lwd, inset arguments passed graphics::legend(). Note pt.lwd mostly relevant do_direction=TRUE, adds open circles legend, whose line width default pt.lwd=2. do_directional logical indicating whether include directional colors defined directional_colors, indicated border color nodes. directional_column character indicating add directional colors columns legend, two options: \"\": appends directional_colors legend colors using defined ncol number columns. \"added-bottom\": appends directional_colors new column resulting legend ncol+1 columns. case, intervening empty rows filled blank space, directional_colors shown bottom-rows far right column legend. \"added-top\": appends directional_colors new column resulting legend ncol+1 columns. case, intervening empty rows filled blank space, directional_colors shown top-rows far right column legend. directional_colors character vector R colors, named label shown legend, displayed order (top bottom, left right) appear vector. remove entry \"change\", supply new vector: directional_colors=c(.regulated=\"firebrick3\", .regulated=\"blue\") ... additional arguments passed legend().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_legend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiEnrichMap color legend — mem_legend","text":"function simple wrapper around legend() add color key plot, typically igraph plots.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_multienrichplot.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiEnrichMap plot — mem_multienrichplot","title":"MultiEnrichMap plot — mem_multienrichplot","text":"MultiEnrichMap plot","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_multienrichplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiEnrichMap plot — mem_multienrichplot","text":"","code":"mem_multienrichplot(   mem,   overlap = 0.1,   overlap_count = 2,   do_plot = TRUE,   do_legend = TRUE,   remove_blanks = TRUE,   remove_singlets = TRUE,   spread_labels = TRUE,   y_bias = 1,   label_edges = c(\"overlap_count\", \"count\", \"overlap\", \"label\", \"none\"),   edge_cex = 1,   node_cex = 0.8,   node_size = 5,   edge_color = \"#55555588\",   frame_color = \"#55555500\",   shape = \"pie\",   repulse = 3.7,   sets = NULL,   rescale = TRUE,   edge_bundling = \"connections\",   main = \"MultiEnrichMap\\noverlap >= {overlap}, overlap_count >= {overlap_count}\",   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_multienrichplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiEnrichMap plot — mem_multienrichplot","text":"mem list object output multiEnrichMap(), specifically containing elements \"multiEnrichMap\",\"multiEnrichMap2\" expected igraph objects. overlap numeric value 0 1, indicating Jaccard overlap filter use edge nodes. value used delete edges whose values E(g)$overlap threshold. overlap_count numeric value indicating minimum overlap count edges removed. value E(g)$overlap_count used filter. do_plot logical indicating whether plot final result. do_legend logical indicating whether print color legend, valid do_plot=TRUE. Arguments ... also passed mem_legend(), example x=\"bottomleft\" can overriden. remove_blanks logical indicating whether call removeIgraphBlanks() removes blank/empty colors igraph nodes. remove_singlets logical indicating whether remove singlet nodes, nodes connections nodes. default, singlets removed, order help visualize node connections remain filtering overlap. spread_labels logical indicating whether call spread_igraph_labels(), places node labels angle offset node, order improve default label positions. y_bias numeric value passed spread_igraph_labels() spread_labels=TRUE. repulse numeric value used network layout layout_with_qfrf() used. sets optional character vector enriched sets include, sets excluded. values matched V(g)$name. rescale logical indicating whether igraph layout coordinates scaled range c(-1, 1) plotting. practice, rescale=FALSE function jam_igraph() called much better properly handling settings change. effect mainly keep layout aspect intact, cases x- y-axis ranges roughly size, example short-wide layout. main character string used title do_plot=TRUE. character string passed glue::glue() order include certain argument values overlap. ... additional arguments passed removeIgraphBlanks(), removeIgraphSinglets(), spread_igraph_labels() needed.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_multienrichplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiEnrichMap plot — mem_multienrichplot","text":"invisibly returns igraph object used plotting, -product function do_plot=TRUE igraph object also visualized. custom plot elements updated igraph object, principle simple call plot(...) suffice.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_multienrichplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiEnrichMap plot — mem_multienrichplot","text":"function likely replaced mem2emap(). function takes output multiEnrichMap() produces customized \"multiple enrichMap\" plots using igraph network. differs data provided multiEnrichMap() mostly enabling different overlap filters, automating several steps help network layout, node label placement. flexible exploration data, run multiEnrichMap() using lenient overlapThreshold, example overlapThreshold=0.1. call function increasing overlap visualization insightful structure.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_plot_folio.html","id":null,"dir":"Reference","previous_headings":"","what":"Multienrichment folio of summary plots — mem_plot_folio","title":"Multienrichment folio of summary plots — mem_plot_folio","text":"Multienrichment folio summary plots","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_plot_folio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multienrichment folio of summary plots — mem_plot_folio","text":"","code":"mem_plot_folio(   mem,   do_which = NULL,   p_cutoff = NULL,   p_floor = 1e-10,   main = \"\",   use_raster = FALSE,   min_gene_ct = 1,   min_set_ct = 1,   min_set_ct_each = 4,   column_method = \"euclidean\",   row_method = \"euclidean\",   exemplar_range = c(1, 2, 3),   pathway_column_split = NULL,   pathway_column_title = LETTERS,   gene_row_split = NULL,   gene_row_title = letters,   edge_color = NULL,   cex.main = 2,   cex.sub = 1.5,   row_cex = 1,   column_cex = 1,   max_labels = 4,   max_nchar_labels = 25,   include_cluster_title = TRUE,   repulse = 4,   use_shadowText = FALSE,   color_by_column = FALSE,   style = \"dotplot_inverted\",   enrich_im_weight = 0.3,   gene_im_weight = 0.5,   colorize_by_gene = TRUE,   cluster_color_min_fraction = 0.4,   byCols = c(\"composite_rank\", \"minp_rank\", \"gene_count_rank\"),   edge_bundling = \"connections\",   apply_direction = NULL,   rotate_heatmap = FALSE,   row_anno_padding = grid::unit(3, \"mm\"),   column_anno_padding = grid::unit(3, \"mm\"),   do_plot = TRUE,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_plot_folio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multienrichment folio of summary plots — mem_plot_folio","text":"mem list object created multiEnrichMap(). Specifically object expected contain colorV, enrichIM, memIM, geneIM. do_which integer vector plots produce. do_which NULL, plots produced. argument intended help produce one plot folio, therefore plot referred number plot, order. p_cutoff numeric value indicating enrichment P-value threshold used multiEnrichMap(), NULL value taken mem input, 0.05 used default. p_floor numeric value indicating lowest enrichment P-value used color gradient Enrichment Heatmap. main character string used title Cnet plots. use_raster logical default FALSE, deprecated, whether use raster heatmaps, passed ComplexHeatmap::Heatmap(). Note use_raster=TRUE may produce visual artifacts, changing argument longer supported min_gene_ct, min_set_ct integer values passed mem_gene_path_heatmap(). min_gene_ct requires set contain min_gene_ct genes, min_set_ct requires gene present least min_set_ct sets. min_set_ct_each integer minimum genes required set, required least one enrichment test. column_method, row_method character arguments passed ComplexHeatmap::Heatmap() indicate distance method used cluster columns rows, respectively. exemplar_range integer vector (NULL) used create Cnet exemplar plots, using many exemplars per cluster. pathway_column_split, gene_row_split integer value passed column_split row_split, respectively, mem_gene_path_heatmap(), indicating number pathway clusters, gene clusters, create gene-pathway heatmap. either value NULL auto-split logic used. pathway_column_title, gene_row_title character vectors passed mem_gene_path_heatmap() column_title row_title, respectively. one value supplied, displayed centered across respective splits. multiple values supplied, values used number splits, recycled needed. case, repeated values made unique jamba::makeNames(). cex.main, cex.sub numeric values passed title() size default title sub-title Cnet plots. row_cex, column_cex numeric character expansion factor, used adjust relative size row column labels, respectively. value 1.1 make row font size 10% larger. color_by_column logical indicating whether colorize enrichment heatmap columns using colorV input mem. argument relevant do_which include 1. enrich_im_weight, gene_im_weight numeric value 0 1, passed mem_gene_path_heatmap(), used apply relative weight clustering columns rows, respectively, combining gene-pathway incidence matrix either column enrichment P-values, row gene incidence matrix data. colorize_by_gene logical passed mem_gene_path_heatmap() indicating whether heatmap body gene-pathway heatmap colorized using enrichment colors gene. cluster_color_min_fraction numeric value passed collapse_mem_clusters() used determine enrichment colors associate Cnet cluster. byCols character vector describing sort pathways within Cnet clusters. argument passed rank_mem_clusters(). edge_bundling character string passed jam_igraph() control edge bundling. default edge_bundling=\"connections\" bundle Cnet plot edges genes share pathway connections. apply_direction logical NULL indicating whether indicate directionality mem_enrichment_heatmap() first plot series. default apply_direction=NULL auto-detect whether directionality present data, set apply_direction=TRUE non-NA values differ zero. rotate_heatmap logical passed mem_gene_path_heatmap()() function, default FALSE. indicates whether rotate heatmap gene columns pathway rows. find people tilt head read pathways, might preferable. row_anno_padding, column_anno_padding grid::unit numeric converted \"mm\" units. values control space heatmap body row/column annotations, respectively, relevant mem_gene_path_heatmap()(). value applied draw() defined Heatmap object , included mem_gene_path_heatmap()(). do_plot logical indicating whether render plot. do_plot=FALSE plot objects created returned, plot rendered. option may useful generate full set figures one set, review figure one one interactive session. verbose logical indicating whether print verbose output. ... additional arguments passed downstream functions. useful examples: sets passed mem_gene_path_heatmap() allows one define specific subset sets use gene-pathway heatmap. cell_size passed mem_enrichment_heatmap() option define square cell size heatmap dotplot. However, resulting heatmap least ncol * cell_height width, nrow * cell_size[2] height, addition heights title column labels, widths color key dendrogram.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_plot_folio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multienrichment folio of summary plots — mem_plot_folio","text":"list returned using invisible(), containing plot object enabled argument do_which: enrichment_hm Heatmap object ComplexHeatmap contains enrichment P-value heatmap. Note data used directly subsequent plots, pathway clusters shown based upon -log10(Pvalue) underlying gene content pathway. plot useful overview answers question \"many pathways significantly enriched across different enrichment tests?\" gp_hm Heatmap object ComplexHeatmap gene-pathway incidence matrix heatmap. heatmap column/pathway clusters subject subsequent Cnet plots. gp_hm_caption text caption describes gene set filter criteria, row column distance methods used clustering. filtering clustering options substantial impact clustering, pathway clusters key subsequent plots, values important keep associated output function. clusters_mem list pathways contained pathway cluster shown gene-pathway heatmap, obtained heatmap_column_order(gp_hm). pathway names also present colnames(mem$memIM) rownames(mem$enrichIM), follow-inspection. cnet_collapsed igraph object Cnet plot data, pathways collapsed cluster, using gene-pathway heatmap clusters defined clusters_mem. pathway cluster labeled cluster name, first pathway names. data can plotted using jam_igraph(cnet_collapsed). cnet_collapsed_set cnet_collapsed except pathways labeled cluster name , example c(\"\", \"B\", \"C\", \"D\"). data can plotted using jam_igraph(cnet_collapsed_set). cnet_collapsed_set2 cnet_collapsed_set except gene labels hidden, useful many genes label clearly. gene symbols still stored V(g)$name labels V(g)$label updated hide genes. data can plotted using jam_igraph(cnet_collapsed_set2). cnet_exemplars list igraph Cnet objects, one contains number exemplar pathways cluster defined argument exemplar_range. default uses 1 exemplar per cluster, 2 exemplars per cluster, 3 exemplars per cluster. number published figures use 1 exemplar per pathway cluster. data can plotted using jam_igraph(cnet_exemplars[[1]]), plot first igraph object list. cnet_clusters list igraph Cnet objects, one contains pathways one pathway cluster. data can plotted using jam_igraph(cnet_clusters[[1]]), calling specific cluster jam_igraph(cnet_clusters[[\"\"]]).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_plot_folio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multienrichment folio of summary plots — mem_plot_folio","text":"function intended create multiple summary plots using output data multiEnrichMap(). default creates plots one one, sufficient including multi-page PDF document cairo_pdf(..., onefile=TRUE) pdf(..., onefile=TRUE). data plot object can created visualized later argument do_plot=FALSE. Note: Since version 0.0.76.900 first step workflow cluster underlying gene-pathway incidence matrix. step defines consistent dendrogram driven underlying gene content pathway. dendrogram used subsequent plot including enrichment heatmap. two recommended strategies visualizing multienrichment results: Pathway clusters viewed concept network (Cnet) plot. Given numerous statistically enriched pathways, process defines pathway clusters using underlying gene-pathway incidence matrix. Within pathway cluster, pathways typically share high proportion genes, therefore expected represent similar functions. Ideally, cluster represents distinct biological function, functional theme. Benefit: Reducing large number pathways small number clusters greatly improves options visualization, retaining comprehensive view genes pathways involved. Benefit: option recommended numerous pathways, including pathways beneficial understanding overall functional effects experimental study. Limitation: downside approach sometimes comprehensive content can much detail interpret one figure, overshadowing individual pathways cluster. Limitation: may difficult recognize functional theme pathway cluster, unfortunately process (yet) automated requires domain expertise pathways functions involved. Limitation: may possible one Cnet plot represent functional effects experimental study. Exemplar pathways viewed Cnet plot. described , given numerous statistically enriched pathways, pathways clustered using gene-pathway incidence matrix. One \"exemplar\" pathway selected cluster represent typical pathway content cluster, usually significant pathway cluster, optionally pathway containing total genes. Benefit: process can produce cleaner figure Option 1 PathwayClusters, fewer pathways associated genes included figure. Limitation: cleaner figure understandably somewhat less comprehensive, may subject bias selecting exemplar pathways. However selection relevant pathways may effective within context experimental study. Benefit: resulting Cnet plot can often improve focus specific genes pathways, can advantageous including numerous \"synonyms\" similar pathways beneficial. Benefit: strategy also works particularly well relatively enriched pathways, argument topEnrichN used multiEnrichMap() relatively small. folio plots includes: Enrichment Heatmap (Plot #1), enrichment P-values created using mem_enrichment_heatmap(). Note default, Gene-Pathway incidence matrix also created (invisibly) order define consistent pathway clusters. Output list name: \"enrichment_hm\" Gene-Pathway Incidence Matrix Heatmap (Plot #2) created using mem_gene_path_heatmap(). step defines visualizes pathway clustering used plots folio. Output list name: \"gp_hm\" Cnet Cluster Plot (Plots #3,#4,#5) creates collapsed Concept network (Cnet) Genes Pathway clusters, using collapse_mem_clusters(), plotted jam_igraph(). Plot #3 labels pathway clusters first N pathways. Output list name: \"cnet_collapsed\" Plot #4 labels pathway clusters LETTERS. file typically used plots. Output list name: \"cnet_collapsed_set\" Plot #5 hides gene labels. Output list name: \"cnet_collapsed_set2\" Cnet Exemplar Plots (Plots #6,#7,#8) creates smaller pathway Cnet plots, opposed pathway-cluster Cnets #3,#4,#5 , using exemplar pathways gene-pathway cluster. Output list name: \"cnet_exemplars\" list igraph objects: Plots #6 includes one exemplar pathway per pathway cluster. Plots #7 includes two exemplar pathways per pathway cluster. Plots #8 includes three exemplar pathways per pathway cluster. Cnet Individual Cluster Plots (Plots #9,#10,#11,etc.) create one pathway Cnet plot per individual pathway cluster, showing pathways cluster. number plots defined number pathway cluters, usually pathway_column_split. plots may useful explore pathways detail within pathway cluster, example many pathways well-defined particular pathway cluster Gene-Pathway heatmap. Output list name \"cnet_clusters\" specific plots created controlled do_which: do_which=1 create enrichment heatmap. do_which=2 create gene-pathway heatmap. do_which=3 create Cnet Cluster Plot using pathway cluster labels pathway node, default uses LETTERS: \"\", \"B\", \"C\", \"D\", etc. do_which=4 create Cnet Cluster Plot using abbreviated pathway labels pathway cluster node. do_which=5 create Cnet Cluster Plot node labels. do_which=6 begins series Cnet Exemplar Plots value argument exemplar_range, whose default c(1, 2, 3). do_which=9 (default) begins series Cnet individual cluster plots, includes pathways cluster. frequently used plots do_which=2 gene-pathway heatmap, do_which=4 collapsed Cnet plot, Cnet clusters based upon gene-pathway heatmap. Arguments p_cutoff min_set_ct_each can used apply stringent thresholds original mem data. example, applying p_cutoff=0.05 multiEnrichMap() colorize pathways mem$enrichIMcolors, however calling mem_plot_folio() p_cutoff=0.001 use blank color color gradient pathways mem$enrichIM value 0.001. experience pathway clustering need perfect useful valid. pathway clusters valid based upon parameters used clustering, provide insight genes help define cluster distinct clusters. Sometimes clustering results less effective based upon type pattern observed data, can helpful adjust parameters drill effective patterns.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_plot_folio.html","id":"gene-pathway-clustering","dir":"Reference","previous_headings":"","what":"Gene-Pathway clustering","title":"Multienrichment folio of summary plots — mem_plot_folio","text":"clustering performed combining gene-pathway incidence matrix mem$memIM -log10(mem$enrichIM) enrichment P-values. relative weight matrix controlled enrich_im_weight, enrich_im_weight=0 assigns weight=0 enrichment P-values, thus clusters using gene-pathway matrix. Similarly, enrich_im_weight=1 assign full weight enrichment P-value matrix, ignore gene-pathway matrix data. corresponding weight gene (rows) controlled gene_im_weight, balances row clustering mem$geneIM matrix, gene-pathway matrix mem$memIM. argument column_method defines distance method, example \"euclidean\" \"binary\" two immediate choices. method also adds \"correlation\" amap::hcluster() can useful especially large datasets. number pathway clusters controlled pathway_column_split, default pathway_column_split=NULL auto_cluster=TRUE number clusters defined based upon total number pathways. practice, pathway_column_split=4 pathway_column_split=3 recommended, number clusters convenient visualize Cnet plot. define pathway cluster labels, define pathway_column_title vector length equal pathway_column_split. labels become network node labels subsequent plots, resulting igraph object. pathway clusters dependent upon genes pathways used clustering, also controlled min_set_ct min_gene_ct. min_set_ct filters matrix number times Set represented matrix, can helpful pathways large number genes, pathways low number genes. min_gene_ct filters matrix number times gene represented matrix. can helpful requiring gene represented one enriched pathway. min_set_ct_each filters matrix require Set contain least many entries one enrichment result, rather using combined incidence matrix. mostly helpful increase value used multiEnrichMap() argument min_count, already filters pathways minimum number genes involved. Note: filters recommended gene-pathway matrix large, perhaps 100 pathways, 500 genes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/mem_plot_folio.html","id":"cnet-pathway-clusters","dir":"Reference","previous_headings":"","what":"Cnet pathway clusters","title":"Multienrichment folio of summary plots — mem_plot_folio","text":"resulting Cnet pathway clusters single nodes network, nodes colorized based upon enrichment tests involved. threshold including color enrichment test defined cluster_color_min_fraction, requires least fraction pathways pathway cluster meets significance criteria enrichment test. adjust coloration filter include enrichment test least one significant result, use cluster_color_min_fraction=0.01. gene-pathway heatmap, colors shown across top heatmap. default cluster_color_min_fraction=0.4 requires 40% pathways cluster enrichment test. Note: Prior version 0.0.76.900 enrichment heatmap clustered using enrichment P-values, transformed log10(Pvalue). clustering inconsistent plots folio, effective clustering pathways based upon similar content, primary goal multienrichjam R package.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/multienrichjam.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare MultiEnrichMap data from enrichList — multienrichjam","title":"Prepare MultiEnrichMap data from enrichList — multienrichjam","text":"Prepare MultiEnrichMap data enrichList (progress)","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/multienrichjam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare MultiEnrichMap data from enrichList — multienrichjam","text":"","code":"multienrichjam(   enrichList,   enrichLabels = NULL,   p_cutoff = 0.05,   min_count = 3,   top_enrich_n = 20,   geneHitList = NULL,   geneHitIM = NULL,   colorV = NULL,   enrichNumLimit = 4,   nEM = 500,   descriptionCurateFrom = c(\"^Genes annotated by the GO term \"),   descriptionCurateTo = c(\"\"),   descriptionCurateFn = fixSetLabels,   geneDelim = \"[,/ ]+\",   returnType = c(\"Mem\", \"list\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/multienrichjam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare MultiEnrichMap data from enrichList — multienrichjam","text":"enrichList list enrichResult objects, whose names used subsequent derived results. enrichLabels character vector enrichment labels use, optional alternative names(enrichList). geneHitList list character vectors, list numeric vectors whose names represent genes, NULL. NULL gene hit list enrichment result inferred enrichment results , however option may incompletely represent genes statistical hits. Note geneHitList geneHitIM serve purpose either can supplied. geneHitIM numeric matrix gene rows, enrichment columns, numeric values indicating presence /direction change gene. Note geneHitList geneHitIM serve purpose either can supplied. colorV character vector colors, length equal length(enrichList), used assign specific colors enrichment result. enrichNumLimit numeric value indicating -log10(P-value) color gradient considered maximum color, useful apply fixed threshold color gradient. nEM integer number, define maximum number pathway nodes include EnrichMap igraph network. argument passed enrichMapJam(). descriptionCurateFn function default fixSetLabels() used curate pathway description user-friendly label. NULL step skipped. geneDelim character pattern used strsplit() split multiple gene values list vectors. default enrichResult objects \"/\", default sources often \",\". default pattern \"[,/ ]+\" splits either \"/\", \",\", whitespace \" \". returnType character default \"Mem\" output class: 'Mem' returns Mem S4 object 'list' returns legacy list format (deprecated) verbose logical indicating whether print verbose output. verbose cascade internal functions, use verbose=2. ... additional arguments passed internal functions. topEnrichListBySource() used take top topEnrichN pathways enrichment, may also used subset criteria descriptionGrep, nameGrep, sourceSubset, subsetSets, etc. nrow, ncol, byrow optional arguments used customize igraph node shape \"coloredrectangle\", useful number enrichList results larger around 4. defines number columns rows used node, display enrichment result colors, whether fill colors row byrow=TRUE, column byrow=FALSE. subsetSets character vector optional set names use analysis, useful analyze specific subset known pathways. overlapThreshold numeric value 0 1, indicating Jaccard overlap score two pathways linked EnrichMap igraph network. default, pathways whose genes overlap 0.1 connected, roughly equivalent 10% overlap. Note Jaccard coefficient adversely affected pathway sets differ size 5-fold. cutoffRowMinP numeric value 0 1, indicating enrichment P-value required least one enrichment result, retained downstream analyses. P-value can confirmed returned list element \"enrichIM\", matrix P-values pathway enrichment. enrichBaseline numeric value indicating -log10(P-value) colors defined non-blank color gradients. value typically derived cutoffRowMinP ensure colors applied pathway meets significance threshold. enrichLens numeric value indicating \"lens\" apply color gradients, numbers 0 make color ramp compressed, colors vivid lower numeric values. topEnrichN integer value maximum rows retain enrichList table, source. Set topEnrichN=0 topEnrichN=NULL disable subsetting top rows. pathGenes, geneHits character values indicating colnames contain number pathway genes, number gene hits, respectively.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/multienrichjam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare MultiEnrichMap data from enrichList — multienrichjam","text":"list object containing various result formats: colorV: named vector colors assigned enrichment, names match names enrichment enrichList.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/multienrichjam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare MultiEnrichMap data from enrichList — multienrichjam","text":"function performs work comparing multiple enrichment results. function takes list enrichResult objects, generates overall pathway-gene incidence matrix, assembles pathway--Pvalue matrix, creates EnrichMap igraph network objects, CnetPlot igraph network objects. also applies node shapes colors consistent colors used enrichment result. default, enrichment result table subsetted top n=20 pathways sorted pathway source, defined colnames c(\"Source\", \"Category\"). data without source column, overall enrichment results sorted take top 20. top 20 enrichment table selected, overall set pathways used retain pathways enrichment tables. way, significant enrichment result one table still compared non-significant result another table. default values topEnrichN related arguments intended using enrichment results MSigDB, colnames c(\"Source\",\"Category\") represents 100 combinations sources categories. default values select top 20 entries canonical pathways, curating canonical pathway categories one \"CP\" source value. disable top pathway filtering, set topEnrichN=0. Colors can defined enrichment result using argument colorV, otherwise colors assigned using colorjam::rainbowJam().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/multienrichjam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare MultiEnrichMap data from enrichList — multienrichjam","text":"","code":"## See the Vignette for a full walkthrough example"},{"path":"https://jmw86069.github.io/multienrichjam/reference/multiEnrichMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare MultiEnrichMap data from enrichList — multiEnrichMap","title":"Prepare MultiEnrichMap data from enrichList — multiEnrichMap","text":"Prepare MultiEnrichMap data enrichList","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/multiEnrichMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare MultiEnrichMap data from enrichList — multiEnrichMap","text":"","code":"multiEnrichMap(   enrichList,   geneHitList = NULL,   geneHitIM = NULL,   colorV = NULL,   nrow = NULL,   ncol = NULL,   byrow = FALSE,   enrichLabels = NULL,   subsetSets = NULL,   overlapThreshold = 0.1,   cutoffRowMinP = 0.05,   enrichBaseline = -log10(cutoffRowMinP),   enrichLens = 0,   enrichNumLimit = 4,   nEM = 500,   min_count = 3,   topEnrichN = 20,   topEnrichSources = c(\"gs_cat\", \"gs_subat\"),   topEnrichCurateFrom = NULL,   topEnrichCurateTo = NULL,   topEnrichSourceSubset = NULL,   topEnrichDescriptionGrep = NULL,   topEnrichNameGrep = NULL,   keyColname = c(\"ID\", \"Name\", \"pathway\", \"itemsetID\", \"Description\"),   nameColname = c(\"Name\", \"pathway\", \"Description\", \"itemsetID\", \"ID\"),   geneColname = c(\"geneID\", \"geneNames\", \"Genes\"),   countColname = c(\"gene_count\", \"count\", \"geneHits\"),   pvalueColname = c(\"padjust\", \"p.adjust\", \"adjp\", \"padj\", \"qvalue\", \"qval\", \"q.value\",     \"pvalue\", \"p.value\", \"pval\", \"FDR\"),   descriptionColname = c(\"Description\", \"Name\", \"Pathway\", \"ID\"),   descriptionCurateFrom = c(\"^Genes annotated by the GO term \"),   descriptionCurateTo = c(\"\"),   directionColname = c(\"activation.z.{0,1}score\", \"z.{0,1}score\"),   direction_cutoff = 0,   pathGenes = c(\"setSize\", \"pathGenes\", \"Count\"),   geneHits = c(\"Count\", \"geneHits\", \"gene_count\"),   geneDelim = \"[,/ ]+\",   GmtTname = NULL,   msigdbGmtT = NULL,   returnType = c(\"list\", \"Mem\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/multiEnrichMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare MultiEnrichMap data from enrichList — multiEnrichMap","text":"enrichList list enrichResult data.frame objects. names(enrichList) used subsequent results. Note data.frame converted enrichResult using enrichDF2enrichResult(x, ...) '...' ellipses used recognize colnames. Recommendation confirm data.frame properly converted enrichResult upfront. geneHitList list character vectors, list numeric vectors whose names represent genes, NULL. NULL gene hit list enrichment result inferred enrichment results , however option may incompletely represent genes statistical hits. Note geneHitList geneHitIM serve purpose either can supplied. geneHitIM numeric matrix gene rows, enrichment columns, numeric values indicating presence /direction change gene. Note geneHitList geneHitIM serve purpose either can supplied. colorV character vector colors, length equal length(enrichList), used assign specific colors enrichment result. nrow, ncol, byrow optional arguments used customize igraph node shape \"coloredrectangle\", useful number enrichList results larger around 4. defines number columns rows used node, display enrichment result colors, whether fill colors row byrow=TRUE, column byrow=FALSE. enrichLabels character vector enrichment labels use, optional alternative names(enrichList). subsetSets character vector optional set names use analysis, useful analyze specific subset known pathways. overlapThreshold numeric value 0 1, indicating Jaccard overlap score two pathways linked EnrichMap igraph network. default, pathways whose genes overlap 0.1 connected, roughly equivalent 10% overlap. Note Jaccard coefficient adversely affected pathway sets differ size 5-fold. cutoffRowMinP numeric value 0 1, indicating enrichment P-value required least one enrichment result, retained downstream analyses. P-value can confirmed returned list element \"enrichIM\", matrix P-values pathway enrichment. enrichBaseline numeric value indicating -log10(P-value) colors defined non-blank color gradients. value typically derived cutoffRowMinP ensure colors applied pathway meets significance threshold. enrichLens numeric value indicating \"lens\" apply color gradients, numbers 0 make color ramp compressed, colors vivid lower numeric values. enrichNumLimit numeric value indicating -log10(P-value) color gradient considered maximum color, useful apply fixed threshold color gradient. nEM integer number, define maximum number pathway nodes include EnrichMap igraph network. argument passed enrichMapJam(). topEnrichN integer value maximum rows retain enrichList table, source. Set topEnrichN=0 topEnrichN=NULL disable subsetting top rows. topEnrichSources, topEnrichCurateFrom, topEnrichCurateTo, topEnrichSourceSubset, topEnrichDescriptionGrep, topEnrichNameGrep arguments passed topEnrichListBySource() topEnrichN greater 0. default values used input data matches patterns. keyColname, nameColname, geneColname, pvalueColname, descriptionColname character vector case indicating colnames key, name, gene, pvalue, description, respectively. vector passed find_colname() find suitable matching colname data.frame enrichList. descriptionCurateFrom, descriptionCurateTo character vectors patterns replacements, passed gsubs(), intended help curate common descriptions shorter, perhaps user-friendly labels. One example removing prefix \"Genes annotated GO term \" Gene Ontology pathways. label can manually curated later, often convenient curate upfront order keep different result objects consistent. pathGenes, geneHits character values indicating colnames contain number pathway genes, number gene hits, respectively. geneDelim character pattern used strsplit() split multiple gene values list vectors. default enrichResult objects \"/\", default sources often \",\". default pattern \"[,/ ]+\" splits either \"/\", \",\", whitespace \" \". verbose logical indicating whether print verbose output. verbose cascade internal functions, use verbose=2. ... additional arguments passed various internal functions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/multiEnrichMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare MultiEnrichMap data from enrichList — multiEnrichMap","text":"list object containing various result formats: colorV: named vector colors assigned enrichment, names match names enrichment enrichList.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/multiEnrichMap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare MultiEnrichMap data from enrichList — multiEnrichMap","text":"function performs work comparing multiple enrichment results. function takes list enrichResult objects, generates overall pathway-gene incidence matrix, assembles pathway--Pvalue matrix, creates EnrichMap igraph network objects, CnetPlot igraph network objects. also applies node shapes colors consistent colors used enrichment result. default, enrichment result table subsetted top n=20 pathways sorted pathway source, defined colnames c(\"Source\", \"Category\"). data without source column, overall enrichment results sorted take top 20. top 20 enrichment table selected, overall set pathways used retain pathways enrichment tables. way, significant enrichment result one table still compared non-significant result another table. default values topEnrichN related arguments intended using enrichment results MSigDB, colnames c(\"Source\",\"Category\") represents 100 combinations sources categories. default values select top 20 entries canonical pathways, curating canonical pathway categories one \"CP\" source value. disable top pathway filtering, set topEnrichN=0. Colors can defined enrichment result using argument colorV, otherwise colors assigned using colorjam::rainbowJam().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/multiEnrichMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare MultiEnrichMap data from enrichList — multiEnrichMap","text":"","code":"## See the Vignette for a full walkthrough example"},{"path":"https://jmw86069.github.io/multienrichjam/reference/nodegroups2communities.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert nodegroups list to communities object — nodegroups2communities","title":"Convert nodegroups list to communities object — nodegroups2communities","text":"Convert nodegroups list communities object","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/nodegroups2communities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert nodegroups list to communities object — nodegroups2communities","text":"","code":"nodegroups2communities(nodegroups, algorithm = NULL, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/nodegroups2communities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert nodegroups list to communities object — nodegroups2communities","text":"algorithm character NULL, indicating name community detection algorithm used. algorithm defined, used instead attr(nodegroups, \"algorithm\"). algorithm NULL, attribute(nodegroups, \"algorithm\") used defined, otherwise algorithm=\"nodegroups\". ... additional arguments ignored. wc communities object returned igraph functions cluster_optimal(), cluster_walktrap(), cluster_leading_eigen().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/nodegroups2communities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert nodegroups list to communities object — nodegroups2communities","text":"community object, essentially list specific required elements: \"membership\" - integer assignment nodes clusters \"names\" - character list node names \"vcount\" - integer number nodes \"algorithm\" - character string name community detection method used. \"cluster_names\" - character labels associated membership index values. names generated igraph community detection, therefore optional use igraph workflows. However, used multienrichjam functions, specifically make_point_hull() optionally displays label beside node cluster plotting.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/nodegroups2communities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert nodegroups list to communities object — nodegroups2communities","text":"Note function \"lossy\", output communities object contain supporting data specific community detection algorithm originally used. However, output communities object accepted igraph related functions require object type input value. names(nodegroups) used define new element output communities object \"cluster_names\", names maintained data. Default igraph functions use names, used multienrichjam example function make_point_hull() uses names label cluster plotting.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/nudge_igraph_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Nudge igraph layout by node — nudge_igraph_node","title":"Nudge igraph layout by node — nudge_igraph_node","text":"Nudge igraph layout node","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/nudge_igraph_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nudge igraph layout by node — nudge_igraph_node","text":"","code":"nudge_igraph_node(   g,   nodes = NULL,   x = 0,   y = 0,   nodes_xy = NULL,   use_grep = FALSE,   aspect = 1,   debug = FALSE,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/nudge_igraph_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nudge igraph layout by node — nudge_igraph_node","text":"g igraph object contains layout coordinates stored graph attribute \"layout\", example graph_attr(g, \"layout\"). nodes character vector indicating nodes g nudged. x, y numeric values indicating amount move node defined nodes. values relative x- y-axis ranges layout coordinates, based upon aspect . nodes_xy list alternative using arguments nodes,x,y. argument assumes list numeric adjustments x y, names(nodes_xy) node names. example: nodes_xy=list(APOE=c(x=0.05, y=-0.01), GAPDH=c(x=0.1, y=0.0) however numeric vector need contain names. use_grep logical indicating whether match values nodes V(g)$name V(g)$label using jamba::provigrep(), follows case-insensitive grep(). use_grep=FALSE values either V(g)$name V(g)$label must identical nodes. aspect numeric indicating aspect ratio output plot. value aspect=1 use observed x-axis y-axis range layout coordinates. aspect=1 highest x-axis y-axis ranges used relative x y adjustment. Note igraph::plot() maintain aspect ratio 1 default, jam_igraph() maintain aspect ratio 1 preferred. debug logical indicating whether plot layout adjustment, drawing arrows indicate movement particular nodes. plot basic, using base R plot(), intended quick visual review. verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/order_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Order colors — order_colors","title":"Order colors — order_colors","text":"Order colors","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/order_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order colors — order_colors","text":"","code":"order_colors(   x,   sort_by = c(\"H\", \"-C\", \"-L\"),   c_min = 4,   grey_hue = 359,   hue_offset = 0,   ... )"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/parse_igraph_plot_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse igraph plot params — parse_igraph_plot_params","title":"Parse igraph plot params — parse_igraph_plot_params","text":"function mimics internal function igraph:::.parse.plot.params().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/parse_igraph_plot_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse igraph plot params — parse_igraph_plot_params","text":"","code":"parse_igraph_plot_params(graph, params)"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/plot_layout_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot layout scale by percentage of coordinate range — plot_layout_scale","title":"Plot layout scale by percentage of coordinate range — plot_layout_scale","text":"Plot layout scale percentage coordinate range","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/plot_layout_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot layout scale by percentage of coordinate range — plot_layout_scale","text":"","code":"plot_layout_scale(   layout,   grid_colors = c(\"grey80\", \"grey70\"),   grid_lty = c(\"dotted\", \"solid\"),   big_tick = 10,   small_tick = 2.5,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/plot_layout_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot layout scale by percentage of coordinate range — plot_layout_scale","text":"layout matrix data.frame least two columns, first two columns used grid. grid_colors character colors used small big grid lines, respectively. grid_lty integer character line type used small big grid lines, respectively. big_tick, small_tick numeric values percent, step size big grid lines, small grid lines, respectively. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/plot_layout_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot layout scale by percentage of coordinate range — plot_layout_scale","text":"layout argument supplied coordinates, largest numeric range column used define 100 percent scale. grey grid drawn base R plot indicate big small steps across range, using big_tick small_tick, respectively.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/rank_mem_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank Multienrichment clusters — rank_mem_clusters","title":"Rank Multienrichment clusters — rank_mem_clusters","text":"Rank Multienrichment clusters","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rank_mem_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank Multienrichment clusters — rank_mem_clusters","text":"","code":"rank_mem_clusters(   mem,   clusters,   choose = NULL,   per_cluster = Inf,   byCols = c(\"composite_rank\", \"minp_rank\", \"gene_count_rank\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/rank_mem_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank Multienrichment clusters — rank_mem_clusters","text":"mem list object output multiEnrichMap() clusters list containing set names, must match colnames(mem$memIM) rownames(mem$enrichIM). choose optional vector indicating clusters return. integer vector, refers elements input clusters. character vector, must contain values names(clusters). choose NULL, clusters returned. per_cluster integer vector number entries return cluster. Values recycled length clusters returned, defined choose length(clusters) choose NULL. byCols character vector used sort resulting data.frame within cluster. argument passed directly jamba::mixedSortDF(). verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rank_mem_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank Multienrichment clusters — rank_mem_clusters","text":"data.frame sorted criteria defined byCols, colname \"set\" indicate pathway/set name.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rank_mem_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rank Multienrichment clusters — rank_mem_clusters","text":"function takes list output multiEnrichMap(), list clusters, returns data.frame contains several rank order metrics. intended used column clusters following mem_gene_path_heatmap(), see examples. argument per_cluster intended make convenient pick top exemplar pathways, especially argument byCols defined sorts rank columns. argument choose intended make easy retrieve pathways specific clusters.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/rank_mem_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank Multienrichment clusters — rank_mem_clusters","text":"","code":"## Start with mem # mem <- multiEnrichMap(...); # gp_hm <- mem_gene_path_heatmap(mem, column_split=4); ## Retrieve clusters from the Heatmap output, there should be 4 clusters # clusters <- heatmap_column_order(gp_hm) # clusters_df <- rank_mem_clusters(mem, clusters)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/rectifyPiegraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert pie igraph node shapes to coloredrectangle — rectifyPiegraph","title":"Convert pie igraph node shapes to coloredrectangle — rectifyPiegraph","text":"Convert pie igraph node shapes coloredrectangle","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rectifyPiegraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert pie igraph node shapes to coloredrectangle — rectifyPiegraph","text":"","code":"rectifyPiegraph(   g,   nrow = 2,   ncol = 5,   byrow = TRUE,   whichNodes = seq_len(igraph::vcount(g)),   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/rectifyPiegraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert pie igraph node shapes to coloredrectangle — rectifyPiegraph","text":"g igraph object, expected contain one nodes shape \"pie\". nrow, ncol integer values indicating default number rows columns use displaying colors node. byrow logical indicating whether vector node colors fill nrow,ncol matrix row, similar values filled base::matrix() argument byrow. whichNodes integer vector nodes g considered. nodes shape \"pie\" converted also within whichNodes vector. default, nodes converted, whichNodes allows converting subset nodes. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rectifyPiegraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert pie igraph node shapes to coloredrectangle — rectifyPiegraph","text":"igraph object node shapes changed \"pie\" \"coloredrectangle\".","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rectifyPiegraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert pie igraph node shapes to coloredrectangle — rectifyPiegraph","text":"function simply converts igraph network \"pie\" node shapes, use \"coloredrectangle\" node shape provided multienrichjam package. process, transfers related node attributes: \"pie.color\" copied \"coloredrect.color\" \"pie.names\" copied \"coloredrect.names\". \"coloredrect.names\" can used label color key. \"size\" converted \"size2\" applying sqrt(size) * 1.5. \"size2\" value used define size coloredrectangle nodes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/relayout_with_qfr.html","id":null,"dir":"Reference","previous_headings":"","what":"igraph re-layout using qgraph Fruchterman-Reingold — relayout_with_qfr","title":"igraph re-layout using qgraph Fruchterman-Reingold — relayout_with_qfr","text":"igraph re-layout using qgraph Fruchterman-Reingold","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/relayout_with_qfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"igraph re-layout using qgraph Fruchterman-Reingold — relayout_with_qfr","text":"","code":"relayout_with_qfr(   g,   repulse = 3.5,   spread_labels = TRUE,   seed = 123,   init = NULL,   constrain = NULL,   constraints = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/relayout_with_qfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"igraph re-layout using qgraph Fruchterman-Reingold — relayout_with_qfr","text":"g igraph object repulse exponent power used scale radius effect around vertex. default slightly higher cube number vertices, number vertices increases, values 3.5 4 higher effective layout. spread_labels logical indicating whether call spread_igraph_labels(), places node labels angle offset node, order improve default label positions. ... additional arguments passed layout_with_qfr() spread_igraph_labels() needed.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/relayout_with_qfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"igraph re-layout using qgraph Fruchterman-Reingold — relayout_with_qfr","text":"igraph object, layout coordinates stored graph attribute \"layout\", accessible example graph$layout graph_attr(graph, \"layout\"). spread_labels=TRUE, V(g)$label.degree V(g)$label.dist updated calling spread_igraph_labels().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/relayout_with_qfr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"igraph re-layout using qgraph Fruchterman-Reingold — relayout_with_qfr","text":"function extends layout_with_qfr() applying layout igraph object , also calling spread_igraph_labels() adjust label positions accordingly. main benefit using function update layout node label positions one step, also returning igraph object ready plotted -.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphBlanks.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove igraph blank wedges — removeIgraphBlanks","title":"Remove igraph blank wedges — removeIgraphBlanks","text":"Remove igraph blank wedges","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphBlanks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove igraph blank wedges — removeIgraphBlanks","text":"","code":"removeIgraphBlanks(   g,   blankColor = c(\"#FFFFFF\", \"#FFFFFFFF\", \"transparent\"),   c_max = 7,   l_min = 95,   alpha_max = 0.1,   constrain = c(\"nrow\", \"ncol\", \"none\"),   resizeNodes = TRUE,   applyToPie = TRUE,   pie_to_circle = FALSE,   pieAttrs = c(\"pie\", \"pie.value\", \"pie.names\", \"pie.color\"),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphBlanks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove igraph blank wedges — removeIgraphBlanks","text":"g igraph object containing one attributes \"pie.color\" \"coloredrect.color\". blankColor character vector R colors directly matched input x vector. value \"transparent\" useful , easily converted HCL color space. c_max maximum chroma determined HCL color space, range color 0 maximum color 100. l_min numeric minimum luminance required color considered blank, combined c_max argument. threshold prevents grey colors considered blank, unless luminance threshold. alpha_max numeric value indicating alpha transparency color considered blank, range fully transparent 0, fully non-transparent 1. constrain character value indicating node shape \"coloredrectangle\" whether constrain \"coloredrect.nrow\" \"coloredrect.ncol\" values. \"none\" nrow usually dropped nrow=1 whenever colors removed. resizeNodes logical indicating whether resize resulting nodes maintain roughly proportional size number colored wedges. applyToPie logical indicating whether apply logic nodes shape \"pie\". pie_to_circle logical indicating whether node shapes single-color nodes changed \"pie\" \"circle\" order remove small wedge line pie node. pieAttrs character vector vertex.attributes g adjusted applyToPie=TRUE. Note \"pie.color\" required, attributes adjusted present input graph g. verbose logical indicating whether print verbose output. ... additional arguments passed isColorBlank().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphBlanks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove igraph blank wedges — removeIgraphBlanks","text":"function intended affect nodes shapes \"pie\" \"coloredrectangle\", evaluates vertex attributes \"coloredrect.color\" \"pie.color\". node, colors considered blank removed, along corresponding values related vertex attributes, including \"pie\",\"pie.value\",\"pie.names\", \"coloredrect.names\",\"coloredrect.nrow\",\"coloredrect.ncol\",\"coloredrect.byrow\". function calls isColorBlank() determine colors blank. function originally intended follow igraph2pieGraph() assigns colors pie coloredrectangle attributes, missing values values zero often given \"blank\" color. enhance resulting node coloration, blank colors can removed order make remaining colors visibly distinct.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphBlanks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove igraph blank wedges — removeIgraphBlanks","text":"","code":"require(igraph); g <- make_full_graph(n=3); V(g)$name <- c(\"nodeA\", \"nodeB\", \"nodeC\"); V(g)$shape <- \"coloredrectangle\"; V(g)$coloredrect.names <- split(    rep(c(\"up\",\"no\", \"dn\"), 7),    rep(V(g)$name, c(2,3,2)*3)); V(g)$coloredrect.byrow <- FALSE; V(g)$coloredrect.nrow <- rep(3, 3); V(g)$coloredrect.ncol <- c(2,3,2); V(g)$label.degree <- pi*3/2; V(g)$label.dist <- 3; V(g)$size2 <- c(3, 3, 3);  color_v <- rep(\"white\", 21); k <- c(1, 3, 7, 9, 15, 19, 20, 21); color_v[k] <- rep(colorjam::rainbowJam(5), length.out=length(k)) V(g)$coloredrect.color <- split(    color_v,    rep(V(g)$name, c(2,3,2)*3)); withr::with_par(list(mfrow=c(2, 2)), { lg <- layout_nicely(g); jam_igraph(g, layout=lg, use_shadowText=TRUE);  g2 <- removeIgraphBlanks(g, constrain=\"none\"); V(g2)$size2 <- V(g2)$size2 / 3; jam_igraph(g2, layout=lg, use_shadowText=TRUE,    main=\"constrain='none'\");  g3 <- removeIgraphBlanks(g, constrain=\"nrow\"); jam_igraph(g3, layout=lg, use_shadowText=TRUE,    main=\"constrain='nrow'\");  g4 <- removeIgraphBlanks(g, constrain=\"ncol\"); jam_igraph(g4, layout=lg, use_shadowText=TRUE,    main=\"constrain='ncol'\"); })   # g7 <- make_full_graph(n=7); V(g7)$coloredrect.color <- lapply(c(1,2,3,4,2,3,4),    function(i){colorjam::rainbowJam(i)}); V(g7)$coloredrect.ncol <- c(1,1,1,1,2,3,4); V(g7)$coloredrect.nrow <- c(1,2,3,4,1,1,1); V(g7)$coloredrect.names <- V(g7)$coloredrect.color; V(g7)$shape <- \"coloredrectangle\"; V(g7)$size <- 10; V(g7)$size2 <- V(g7)$coloredrect.ncol * 1; lg7 <- layout_nicely(g7); jam_igraph(g7, layout=lg7,    use_shadowText=TRUE,    vertex.size2=5);"},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphSinglets.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove igraph singlet nodes — removeIgraphSinglets","title":"Remove igraph singlet nodes — removeIgraphSinglets","text":"Remove igraph singlet nodes","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphSinglets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove igraph singlet nodes — removeIgraphSinglets","text":"","code":"removeIgraphSinglets(g, min_degree = 1, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphSinglets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove igraph singlet nodes — removeIgraphSinglets","text":"g igraph object min_degree numeric threshold minimum number connections, also known \"degree\", required node. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/removeIgraphSinglets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove igraph singlet nodes — removeIgraphSinglets","text":"function lightweight method remove igraph nodes connections. fact, min_degree can used require minimum number connections, intended use remove singlet nodes connections.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/reorderIgraphNodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-order igraph nodes — reorderIgraphNodes","title":"Re-order igraph nodes — reorderIgraphNodes","text":"Re-order igraph nodes","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/reorderIgraphNodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-order igraph nodes — reorderIgraphNodes","text":"","code":"reorderIgraphNodes(   g,   sortAttributes = c(\"pie.color\", \"pie.color.length\", \"pie.border\", \"pie.border.length\",     \"coloredrect.color\", \"coloredrect.border\", \"color\", \"frame.color\", \"label\", \"name\"),   nodeSortBy = c(\"x\", \"-y\"),   orderByAspect = TRUE,   aspectThreshold = -1.25,   layout = NULL,   nodesets = NULL,   colorV = NULL,   verbose = FALSE,   ... )  reorder_igraph_nodes(   g,   sortAttributes = c(\"pie.color\", \"pie.color.length\", \"pie.border\", \"pie.border.length\",     \"coloredrect.color\", \"coloredrect.border\", \"color\", \"frame.color\", \"label\", \"name\"),   nodeSortBy = c(\"x\", \"-y\"),   orderByAspect = TRUE,   aspectThreshold = -1.25,   layout = NULL,   nodesets = NULL,   colorV = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/reorderIgraphNodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-order igraph nodes — reorderIgraphNodes","text":"g igraph object, typically expected fixed graph layout stored igraph::graph_attr(g, \"layout\"), supplied via layout argument. sortAttributes character vector node attribute names, applied order sorting nodes. nodeSortBy character vector containing \"x\" \"y\" indicating primary axis used sort nodes. Note sort order can reversed prepending \"-\", example \"-x\" \"-y\". orderByAspect logical indicating whether aspect ratio nodeset determines sort order. orderByAspect=TRUE ignores nodeSortBy uses nodeset aspect ratio determine order. Note original values nodeSortOrder retained, specifically directional sign axis, \"x\" \"-y\" either become c(\"x\", \"-y\") c(\"-y\", \"x\"). way, locales bottom-right top-left ordering natural, use nodeSortBy=c(\"-x\", \"y\") preserve order. become c(\"y\", \"-x\") tall aspect nodesets. See aspectThreshold . aspectThreshold numeric indicating aspect ratio threshold nodes sorted c(\"-y\", \"x\") top bottom. aspect ratios (x/y) threshold sorted c(\"x\", \"-y\") left right. Aspect ratios x < y internally converted negative ratios (-y/x) -1.25 equivalent x/y=0.8 example. layout numeric matrix node coordinates, function used produce layout coordinates. layout NULL, function tries use graph attribute igraph::graph_attr(g, \"layout\"), otherwise relayout_with_qfr() called. nodesets character optional subset nodesets apply re-ordering. value must match names generated get_cnet_nodeset(), otherwise ignored. colorV optional character vector contains R colors, used order colors attributes \"pie.color\" \"coloredrect.color\". verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/reorderIgraphNodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-order igraph nodes — reorderIgraphNodes","text":"igraph nodes positioned order nodes color. layout coordinates stored graph attribute \"layout\", accessible g$layout graph_attr(g, \"layout\"). multiple nodes sharing neighbors, original igraph object returned, addition layout coordinates.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/reorderIgraphNodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Re-order igraph nodes — reorderIgraphNodes","text":"function takes igraph layout form coordinates, function used produce coordinates. repositions nodes within equivalent positions, ordering nodes color along either \"x\" \"y\" direction. Equivalent node positions neighboring nodes. example node \"\" node \"B\" neighbors c(\"D\", \"E\", \"F\") nodes \"\" \"B\" considered equivalent, reordered color. function particularly effective concept network (Cnet) graphs, multiple terms may connnected concept. MultiEnrichmap, typically works multiple genes connected pathways. happens, genes sorted group colors.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/reorderIgraphNodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-order igraph nodes — reorderIgraphNodes","text":"","code":"require(igraph)    c3 <- c(\"red\", \"gold\", \"blue\");    c3l <- list(c3[1], c3[2], c3[3],       c3[c(1,2)], c3[c(1,3)], c3[c(2,3)],       c3[c(1,2,3)]);    set.seed(123);    pc <- c(c3l[1], sample(rep(c3l, c(6,5,5, 4, 1, 4, 4))))    x <- lapply(pc, function(i){       jamba::nameVector(i, paste0(\"group_\", i))    })    g2 <- igraph::graph_from_edgelist(directed=FALSE,       as.matrix(data.frame(          node1=rep(\"Pathway\", length(x)),          node2=paste0(\"Gene\", jamba::colNum2excelName(seq_along(x))))));    V(g2)$pie.color <- x[c(1,seq_along(pc))];    V(g2)$shape <- \"pie\";    V(g2)$pie <- lapply(lengths(V(g2)$pie.color), function(i){       rep(1, i)    });    V(g2)$frame.color <- \"grey80\";    V(g2)$pie.border <- NA;    V(g2)$color <- lapply(V(g2)$pie.color, colorjam::blend_colors)     g2 <- relayout_with_qfr(g2, repulse=7, do_reorder=FALSE);    g2b <- spread_igraph_labels(g2, do_reorder=FALSE)    igraph::V(g2b)$label.family <- \"Arial\"     withr::with_par(list(mar=c(1, 1, 4, 1), xpd=TRUE), {    jam_igraph(g2b,       main=\"Unordered\",       label_dist_factor=3,       label_factor=0.7,       node_factor=1.2,       use_shadowText=TRUE)    jam_igraph(reorderIgraphNodes(g2b),       main=\"reorder_igraph_nodes()\",       label_dist_factor=3,       label_factor=0.7,       node_factor=1.2,       use_shadowText=TRUE);    jam_igraph(       reorderIgraphNodes(g2b, nodeSortBy=c(\"-y\",\"x\"), orderByAspect=FALSE),       main='reorderIgraphNodes(nodeSortBy=c(\"-y\", \"x\"))',       label_dist_factor=3,       label_factor=0.7,       node_factor=1.2,       use_shadowText=TRUE);     jam_igraph(       reorderIgraphNodes(g2b,          nodeSortBy=c(\"-y\", \"x\"), orderByAspect=FALSE,          sortAttributes=c(\"-pie.color.length\", \"pie.color\",             \"color\", \"label\", \"name\")),       main=\"reorder_igraph_nodes() by pie.color.length\",       label_dist_factor=3,       label_factor=0.7,       node_factor=1.2,       use_shadowText=TRUE);    })         g2c <- g2b;    set.seed(12)    V(g2c)$frame.color <- sample(c(\"firebrick3\", \"#DDDDDD\", \"dodgerblue3\"),       replace=TRUE, size=igraph::vcount(g2c))    V(g2c)$frame.width <- 3;    V(g2c)$pie.lwd <- 3;    withr::with_par(list(\"lwd\"=4, mar=c(1, 1, 4, 1), xpd=TRUE), {    jam_igraph(reorderIgraphNodes(g2c,       nodeSortBy=c(\"-y\", \"x\")),       main=\"reorder_igraph_nodes() including frame.color\",       label_dist_factor=3,       label_factor=0.7,       node_factor=1.2,       use_shadowText=TRUE);    })      g2d <- reorderIgraphNodes(g2b);    set.seed(12)    mn <- (lengths(V(g2d)$pie.color) > 1);    V(g2d)[!mn]$frame.color <- sample(c(\"firebrick3\", \"#DDDDDD\", \"dodgerblue3\"),       replace=TRUE, size=sum(!mn))    V(g2d)$pie.border <- rep(list(character(0)), vcount(g2d))    V(g2d)[mn]$pie.border <- lapply(which(mn), function(i){       jamba::nameVector(          sample(c(\"firebrick3\", \"#DDDDDD\", \"dodgerblue3\"),             replace=TRUE, size=lengths(V(g2d)[i]$pie.color)),          names(V(g2d)[i]$pie.color[[1]]))    })    g2e <- reorderIgraphNodes(g2d,       nodeSortBy=c(\"-y\", \"x\"));    withr::with_par(list(\"lwd\"=4, mar=c(1, 1, 4, 1), xpd=TRUE), {    withr::with_options(list(\"inner_pie_border\"=TRUE), {    jam_igraph(g2e,       main=\"reorder_igraph_nodes() including frame.color\",       label_dist_factor=3,       label_factor=0.7,       node_factor=1.2,       use_shadowText=TRUE);    })})      # frame color sorting    g2f <- g2e;    igraph::V(g2f)[\"GeneV\"]$frame.color <- \"green\";    igraph::V(g2f)[\"GeneE\"]$frame.color <- \"green\";    withr::with_par(list(\"lwd\"=5, mar=c(1, 1, 4, 1), xpd=TRUE), {    withr::with_options(list(\"inner_pie_border\"=TRUE), {    jam_igraph(g2f,       main=\"reorder_igraph_nodes() including frame.color\",       label_dist_factor=3,       label_factor=0.7,       node_factor=1.2,       use_shadowText=TRUE);    })})"},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate numeric coordinates — rotate_coordinates","title":"Rotate numeric coordinates — rotate_coordinates","text":"Rotate numeric coordinates, optionally reflecting coordinates along one coordinate axes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate numeric coordinates — rotate_coordinates","text":"","code":"rotate_coordinates(   x,   degrees = 0,   reflect = c(\"none\", \"x\", \"y\", \"z\"),   center = NULL,   center_rule = c(\"median\", \"origin\", \"mean\", \"min\", \"max\"),   rotation_axes = c(1, 2),   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate numeric coordinates — rotate_coordinates","text":"x matrix 2 columns. degrees numeric value indicating degrees rotate layout coordinates, 360 degrees one complete rotation. reflect character string indicating one axes reflect coordinates, flips position coordinates along axis. usually called flip x-axis y-axis coordinates, example reflect=\"x\" reflect=1. Input handled follows: reflect contains \"none\", reflect applied none coordinate axes, therefore default reflect=c(\"none\", \"x\", \"y\", \"z\") apply reflection. character input: reflect values matched colnames(x). colnames(x), reflect values c(\"x\", \"y\", \"z\") automatically recognized columns c(1, 2, 3) respectively. integer input treated vector column index positions, example reflect=c(2) reflect values second coordinate column. center numeric coordinates use center, center=NULL calculate center using center_rule. center_rule character string indicating rule apply determine center coordinates center=NULL. Note little effect downstream plotting assuming plot function adjusts x- y-axis ranges data range, may modify axis ranges result. \"origin\" uses c(0, 0); \"mean\" uses mean axis; \"median\" uses median axis; \"min\" uses minimum axis; \"max\" uses max axis. rotation_axes integer vector indicating axis coordinates rotate, default c(1, 2) uses first two axes x. Note rotation_axes must represent columns present x. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate numeric coordinates — rotate_coordinates","text":"numeric matrix number columns input x.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_coordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate numeric coordinates — rotate_coordinates","text":"function rotates coordinates two axes, angle defined degrees. optionally reflects coordinates one axes, occurs rotation. Note reflect applied degrees. Rotation code kindly contributed Don MacQueen maptools package, reproduced avoid dependency maptools therefore sp package.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate numeric coordinates — rotate_coordinates","text":"","code":"layout <- cbind(0:10, 0:10); layout_rot50 <- rotate_coordinates(x=layout, degrees=50); layout_rot40_ctrmean <- rotate_coordinates(x=layout, degrees=40, center_rule=\"mean\"); layout_reflectx_ctrmean <- rotate_coordinates(x=layout, reflect=\"x\", center_rule=\"mean\"); plot(rbind(layout, layout_rot50, layout_rot40_ctrmean, layout_reflectx_ctrmean),    col=rep(c(\"darkorchid\", \"darkorange1\", \"dodgerblue\", \"red4\"), each=11),    pch=rep(c(17, 20, 18, 17), each=11),    cex=2);"},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_igraph_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate igraph layout coordinates — rotate_igraph_layout","title":"Rotate igraph layout coordinates — rotate_igraph_layout","text":"Rotate igraph layout coordinates, optionally reflecting coordinates along one coordinate axes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_igraph_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate igraph layout coordinates — rotate_igraph_layout","text":"","code":"rotate_igraph_layout(   g = NULL,   degrees = 0,   reflect = c(\"none\", \"x\", \"y\", \"z\"),   center = NULL,   center_rule = c(\"median\", \"origin\", \"mean\", \"min\", \"max\"),   rotation_axes = c(1, 2),   spread_labels = TRUE,   do_reorder = FALSE,   layout = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_igraph_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate igraph layout coordinates — rotate_igraph_layout","text":"g igraph object contains layout coordinates graph attributes, example igraph::graph_attr(g, \"layout\"). degrees numeric value indicating degrees rotate layout coordinates, 360 degrees one complete rotation. reflect character string indicating one axes reflect coordinates, \"none\" reflect axis. center numeric coordinates use center, center=NULL calculate center using center_rule. center_rule character string indicating rule apply determine center coordinates, center=NULL: \"origin\" uses c(0, 0); \"mean\" uses mean axis; \"median\" uses median axis; \"min\" uses minimum axis; \"max\" uses max axis. rotation_axes integer vector indicating axis coordinates rotate, default c(1, 2) uses first two axes. spread_labels, do_reorder logical indicating whether call spread_igraph_labels(), subsequently whether call reorderIgraphNodes(). layout matrix 2 columns, defined layout used layout g igraph object. ... additional arguments passed spread_igraph_labels() calls reorderIgraphNodes() spread_labels=TRUE do_reorder=TRUE, reorderIgraphNodes() spread_labels=FALSE do_reorder=TRUE. Notably, optional argument sortAttributes can passed functions affect node sort priority.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_igraph_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate igraph layout coordinates — rotate_igraph_layout","text":"igraph input g supplied, otherwise numeric matrix.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_igraph_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate igraph layout coordinates — rotate_igraph_layout","text":"function rotates igraph layout coordinates calling function rotate_coordinates(). input can either g igraph object, layout numeric matrix. Note reflect applied degrees. change order, call function multiple times. g layout supplied, coordinates used layout, rotated, stored g igraph object graph attribute, using igraph::graph_attr(g, \"layout\"). g supplied, expected contain layout coordinates graph attributes, obtained igraph::graph_attr(g, \"layout\"). layout supplied, g igraph object supplied, function serves wrapper rotate_coordinates(). Rotation code kindly contributed Don MacQueen maptools package, reproduced avoid dependency maptools therefore sp package. function also calls useful helper functions, spread_labels=TRUE calls spread_igraph_labels() position labels around node based upon angle incoming edges, effect reducing label overlaps. do_reorder=TRUE calls reorderIgraphNodes() sorts nodes within nodeset color label, help visually group similar nodes together equivalent positions layout.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/rotate_igraph_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate igraph layout coordinates — rotate_igraph_layout","text":"","code":"layout <- cbind(0:10, 0:10); layout_rot50 <- rotate_igraph_layout(layout=layout, degrees=50); layout_rot40_ctrmean <- rotate_igraph_layout(layout=layout, degrees=40, center_rule=\"mean\"); plot(rbind(layout, layout_rot50, layout_rot40_ctrmean),    col=rep(c(\"darkorchid\", \"darkorange1\", \"dodgerblue\"), each=11),    pch=rep(c(17, 20, 18), each=11),    cex=2);   if (require(igraph)) {    g <- igraph::make_graph( ~ A-B-C-D-A, E-A:B:C:D,       F-G-H-I-F, J-F:G:H:I,       K-L-M-N-K, O-K:L:M:N,       P-Q-R-S-P, T-P:Q:R:S,       B-F, E-J, C-I, L-T, O-T, M-S,       C-P, C-L, I-L, I-P);    g <- relayout_with_qfr(g, repulse=8);    g2 <- rotate_igraph_layout(g, degrees=45);    opar <- par(\"mfrow\"=c(1,2));    on.exit(par(opar));    jam_igraph(g,       main=\"original layout\",       node_factor=0.6,       label_dist_factor=7);    jam_igraph(g2,       main=\"rotated 45 degrees\",       node_factor=0.6,       label_dist_factor=7); }"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.coloredrectangle.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"custom igraph vertex shape coloredrectangle — shape.coloredrectangle.plot","title":"custom igraph vertex shape coloredrectangle — shape.coloredrectangle.plot","text":"custom igraph vertex shape coloredrectangle","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.coloredrectangle.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom igraph vertex shape coloredrectangle — shape.coloredrectangle.plot","text":"","code":"shape.coloredrectangle.plot(coords, v = NULL, params)  shape.coloredrectangle.clip(coords, el, params, end = c(\"both\", \"from\", \"to\"))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.coloredrectangle.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"custom igraph vertex shape coloredrectangle — shape.coloredrectangle.plot","text":"coords two-column numeric matrix x- y-coordinates, respectively. v optional ids vertices plot. match number rows coords argument. params function object can called query vertex/edge/plot graphical parameters. first argument function 'vertex', 'edge' 'plot' decide type parameter, second character string giving name parameter.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.coloredrectangle.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"custom igraph vertex shape coloredrectangle — shape.coloredrectangle.plot","text":"plot function returns invisible list data.frame objects used draw rectangle objects. However purpose function -product draws rectangles onto igraph graph. clip function returns coordinates corresponding outer node edge based upon argument end: end=\"\" returns 4 columns, x,y 'edge ' x,y 'edge ' coordinates, respectively end=\"\" returns 2 columns, x,y 'edge ' coordinates end=\"\" returns 2 columns, x,y 'edge ' coordinates","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.coloredrectangle.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"custom igraph vertex shape coloredrectangle — shape.coloredrectangle.plot","text":"function defines plotting function custom igraph vertex shape coloredrectangle. coloredrectangle shape described : vertex drawn rectangle, filled squares individually colored. squares arrayed number columns rows, defined vertex using coloredrect.ncol coloredrect.nrow, respectively. vector colors arrayed values matrix, therefore coloredrect.byrow logical indicate whether colors fill matrix row, similar byrow=TRUE used. colors vertex defined coloredrect.color, list character color vectors. coloredrect.color exist, values pie.color used exist. missing colors displayed NA applies color. example, vertex 3 columns, 2 rows, 5 colors, colors recycled. Instead, last color NA render color position. square may also optional border, defined coloredrect.border, coloredrect.lwd, coloredrect.lty. borders drawn inner borders overlap optional frame border. node may frame border, defined frame.color, frame.lwd, frame.lty. frame border drawn outer border overlap inner borders, adding height width final node. frame border drawn node squares drawn. size square inside rectangle defined size2, rectangle width coloredrect.ncol * size2 rectangle height coloredrect.nrow * size2. Node sizes may adjusted enabling equalize_sizes one two ways: options(coloredrectangle.equalize_sizes=TRUE) (priority); vertex.coloredrect.equalize_sizes=TRUE, equivalent igraph::V(g)$coloredrect.equalize_sizes=TRUE. latter case, first value recognized. behavior equalize_sizes described : equalize_sizes=FALSE (default), nodes exactly size2 multiples coloredrect.ncol coloredrect.nrow. equalize_sizes=TRUE 1, shortest side node scaled size2. option useful ensure nodes never smaller size2 width height, can larger. equalize_sizes=2, longest side node scaled size2. option useful ensure nodes fit insides square size2 sides. Nodes drawn using vectorized processes possible. However, primary function graphics::symbols() permits vectorized plotting one lwd/lty combination time, rendering split unique combinations lwd/lty. Vectorized rendering substantially faster iterative rendering, majority circumstances uses one lwd/lty combination nodes. Line width optimal way convey quantitative measurement, however can useful highlight particular nodes interest. coloredrect.ncol exist, ncol defined allowing two rows default, enough accommodate number colors coloredrect.color. coloredrect.ncol * coloredrect.nrow fit colors coloredrect.color, coloredrect.ncol extended create enough positions display colors. coloredrect.nrow exist, use value based upon coloredrect.ncol length coloredrect.color. values coloredrect.color variables described refer igraph vertex attributes, can accessed given igraph object g follows: igraph::V(g)$coloredrect.color igraph::vertex_attr(g, \"coloredrect.color\") plotting value can defined using syntax igraph::plot(g, vertex.coloredrect.color=list(...)) Note blank positions inside coloredrectangle nodes can removed via removeIgraphBlanks(), also effect modifying coloredrect.ncol coloredrect.nrow, applying appropriate logic. Todo: clip function adjust node boundary account frame.color frame.lwd present, since frame drawn outer border slightly increases size node.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.coloredrectangle.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"custom igraph vertex shape coloredrectangle — shape.coloredrectangle.plot","text":"","code":"# prepare example igraph object am <- matrix(ncol=5, nrow=5,    data=0,    dimnames=list(LETTERS[1:5], LETTERS[1:5])) am[2:5, 1] <- 1; g1 <- igraph::graph_from_adjacency_matrix(am) igraph::graph_attr(g1, \"layout\") <- cbind(x=c(0, 1, 1, -1, -1),    y=c(0, 1, -0.5, 0.5, -1)) colorset <- c(\"firebrick3\", \"gold\", \"deepskyblue\",    \"mediumpurple3\", \"orchid1\") colorset <- c(\"firebrick3\", \"dodgerblue3\"); vseq <- seq_len(igraph::vcount(g1)); vsizes <- c(3, 2, 2, 2, 1); set.seed(1); igraph::V(g1)$coloredrect.border <- lapply(vseq, function(i){    sample(colorset,       replace=TRUE,       size=vsizes[i]) }) igraph::V(g1)$coloredrect.color <- lapply(vseq, function(i){    jamba::alpha2col(alpha=0.5,       igraph::V(g1)$coloredrect.border[[i]]) }) igraph::V(g1)$coloredrect.ncol <- c(2, 2, 2, 1, 1); igraph::V(g1)$coloredrect.nrow <- c(2, 1, 1, 2, 1); igraph::V(g1)$coloredrect.lwd <- rep(3, igraph::vcount(g1)) igraph::V(g1)$frame.lwd <- c(2, 1, 1, 1, 1); igraph::V(g1)$frame.color <- \"black\" igraph::V(g1)$size2 <- 10; igraph::V(g1)$shape <- \"coloredrectangle\";  plot(g1, vertex.label=\"\") title(font.main=1, line=1.5, main=paste0(    \"Each square is consistent size by vertex.size2\\n\")) title(font.main=1, cex.main=1, line=0.5, main=paste0(    \"'vertex.coloredrect.equalize_sizes=FALSE' or\\n\",    \"'options(coloredrectangle.equalize_sizes=FALSE'\"))   # equalize shortest side to size2 plot(g1, vertex.label=\"\", vertex.coloredrect.equalize_sizes=TRUE) title(font.main=1, line=1.5, main=paste0(    \"The shortest side is fixed by vertex.size2\\n\")) title(font.main=1, cex.main=1, line=0.5, main=paste0(    \"'vertex.coloredrect.equalize_sizes=TRUE' or\\n\",    \"'options(coloredrectangle.equalize_sizes=TRUE'\"))   # equalize longest side to size2 plot(g1, vertex.label=\"\", vertex.coloredrect.equalize_sizes=2) title(font.main=1, line=1.5, main=paste0(    \"The longest side is fixed by vertex.size2\\n\")) title(font.main=1, cex.main=1, line=0.5, main=paste0(    \"'vertex.coloredrect.equalize_sizes=2' or\\n\",    \"'options(coloredrectangle.equalize_sizes=2'\"))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.ellipse.clip.html","id":null,"dir":"Reference","previous_headings":"","what":"clip function for igraph vertex shape ellipse — shape.ellipse.clip","title":"clip function for igraph vertex shape ellipse — shape.ellipse.clip","text":"clip function igraph vertex shape ellipse","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.ellipse.clip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clip function for igraph vertex shape ellipse — shape.ellipse.clip","text":"","code":"shape.ellipse.clip(coords, el, params, end = c(\"both\", \"from\", \"to\"))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.ellipse.clip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"clip function for igraph vertex shape ellipse — shape.ellipse.clip","text":"function defines clipping function custom igraph vertex shape ellipse.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.ellipse.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot function for igraph vertex shape ellipse — shape.ellipse.plot","title":"plot function for igraph vertex shape ellipse — shape.ellipse.plot","text":"plot function igraph vertex shape ellipse","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.ellipse.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot function for igraph vertex shape ellipse — shape.ellipse.plot","text":"","code":"shape.ellipse.plot(coords, v = NULL, params)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.ellipse.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot function for igraph vertex shape ellipse — shape.ellipse.plot","text":"function defines plotting function custom igraph vertex shape ellipse.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.jampie.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"custom igraph vertex shape jampie — shape.jampie.plot","title":"custom igraph vertex shape jampie — shape.jampie.plot","text":"custom igraph vertex shape jampie clip function igraph vertex shape jampie","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.jampie.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom igraph vertex shape jampie — shape.jampie.plot","text":"","code":"shape.jampie.plot(coords, v = NULL, params)  shape.jampie.clip(coords, el, params, end = c(\"both\", \"from\", \"to\"))"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.jampie.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"custom igraph vertex shape jampie — shape.jampie.plot","text":"function vectorized replacement plotting vertex shape \"pie\" much efficient manner. substantially faster use shape.jampie.plot() default igraph plotting, even 20 pie nodes, speed becomes even dramatically faster larger networks 200+ nodes. Minutes reduced 1-2 seconds rendering time. Pie nodes one large 100% wedge longer display small line origin, change improvement default igraph rendering. Attribute vertex.pie.border can used draw border around pie wedge, node. list lengths(vertex.pie.border) equal lengths(vertex.pie). disable, use pie.border=NA entire attribute, individual nodes. Attribute vertex.frame.color can used draw single circular border around entire pie node. length(vertex.frame.color) equal number nodes graph, example determined igraph::vcount(g). Note frame.color drawn node pie wedges, top pie.border defined, recommended use one form border node. pie node drawn completely, order: pie wedges including optional pie.border outline pie wedge, frame.color around entire node circle; next pie node drawn. ordering ensures entire pie node overlap, overlapped nodes, without artifacts frame.color shown top pie nodes otherwise beneath visibility. disable pie.border set NA vertex.pie.border=NA V(g)[[2]]$pie.border <- NA. disable frame.color set NA vertex.frame.color=NA V(g)[2]$frame.color <- NA. function defines clipping function custom igraph vertex shape jampie.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/shape.jampie.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"custom igraph vertex shape jampie — shape.jampie.plot","text":"","code":"# prepare example igraph object am <- matrix(ncol=5, nrow=5,    data=0,    dimnames=list(LETTERS[1:5], LETTERS[1:5])) am[2:5, 1] <- 1; g1 <- igraph::graph_from_adjacency_matrix(am) igraph::graph_attr(g1, \"layout\") <- cbind(x=c(0, 1, 1, -1, -1),    y=c(0, 1, -0.5, 0.5, -1)) colorset <- c(\"firebrick3\", \"dodgerblue3\"); vseq <- seq_len(igraph::vcount(g1)); vsizes <- c(3, 2, 2, 2, 1); igraph::V(g1)$pie <- lapply(vseq, function(i){    rep(1, vsizes[i]) }) set.seed(1); igraph::V(g1)$pie.border <- lapply(vseq, function(i){    sample(colorset,       replace=TRUE,       size=vsizes[i]) }) igraph::V(g1)$pie.color <- lapply(vseq, function(i){    jamba::alpha2col(alpha=0.5,       igraph::V(g1)$pie.border[[i]]) }) igraph::V(g1)$pie.lwd <- rep(5, igraph::vcount(g1)) igraph::V(g1)$frame.lwd <- c(2, 1, 1, 1, 1)*2; igraph::V(g1)$frame.color <- NA igraph::V(g1)$size <- c(45, 25, 25, 25, 25); igraph::V(g1)$shape <- \"jampie\";  par(\"mar\"=c(2, 2, 3, 2)) igraph::plot.igraph(g1, vertex.label=\"\",    vertex.shape=\"pie\", vertex.frame.color=\"grey45\",    main=\"shape='pie'\\nigraph::plot.igraph()\")   jam_igraph(g1, vertex.label=\"\",    main=\"shape='jampie', frame.color=NA\\njam_igraph()\")    jam_igraph(g1, vertex.label=\"\",    vertex.frame.lwd=2,    main=\"shape='jampie', frame.color='black'\\njam_igraph()\",    vertex.shape=\"jampie\", vertex.frame.color=\"black\")   jam_igraph(g1, vertex.label=\"\", vertex.frame.color=\"black\")   # print pie.color data print(igraph::vertex_attr(g1)$pie.color); #> [[1]] #> [1] \"#CD26267F\" \"#1874CD7F\" \"#CD26267F\" #>  #> [[2]] #> [1] \"#CD26267F\" \"#1874CD7F\" #>  #> [[3]] #> [1] \"#CD26267F\" \"#CD26267F\" #>  #> [[4]] #> [1] \"#CD26267F\" \"#1874CD7F\" #>  #> [[5]] #> [1] \"#1874CD7F\" #>"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shinycat_server.html","id":null,"dir":"Reference","previous_headings":"","what":"R-shiny server function for shinycat — shinycat_server","title":"R-shiny server function for shinycat — shinycat_server","text":"R-shiny server function shinycat, internal use launch_shinycat()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shinycat_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-shiny server function for shinycat — shinycat_server","text":"","code":"shinycat_server(input, output, session)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shinycat_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R-shiny server function for shinycat — shinycat_server","text":"input, output, session arguments used shiny::shinyApp()","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/shinycat_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"R-shiny ui function for shinycat — shinycat_ui","title":"R-shiny ui function for shinycat — shinycat_ui","text":"R-shiny ui function shinycat, internal use launch_shinycat()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shinycat_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-shiny ui function for shinycat — shinycat_ui","text":"","code":"shinycat_ui(...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/shinycat_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R-shiny ui function for shinycat — shinycat_ui","text":"UI definition can passed shiny::shinyApp() argument 'ui'.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/shinycat_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R-shiny ui function for shinycat — shinycat_ui","text":"Internal use launch_shinycat(), function provides 'ui' component R-shiny app.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/sort_colors_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort colors (deprecated) — sort_colors_deprecated","title":"Sort colors (deprecated) — sort_colors_deprecated","text":"Sort colors (deprecated)","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/sort_colors_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort colors (deprecated) — sort_colors_deprecated","text":"","code":"sort_colors_deprecated(   x,   sort_by = c(\"h\", \"-c\", \"-l\"),   c_min = 4,   grey_hue = 359,   hue_offset = 0,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/sort_colors_deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sort colors (deprecated) — sort_colors_deprecated","text":"function deprecated, please use colorjam::sort_colors(). function intended rapid method sort colors, based upon hue, chroma descending, luminance descending.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/sort_colors_deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort colors (deprecated) — sort_colors_deprecated","text":"","code":"x <- jamba::nameVector(colors());  ## Basic color sort c2 <- sort_colors_deprecated(x); jamba::showColors(c2, main=\"cmin=4\");   ## Increase filtering of unsaturated colors c3 <- sort_colors_deprecated(x, c_min=20); jamba::showColors(c3, main=\"cmin=20\");   ## Increase filtering of unsaturated colors c4 <- sort_colors_deprecated(x, c_min=50); jamba::showColors(c4, main=\"cmin=50\");"},{"path":"https://jmw86069.github.io/multienrichjam/reference/spread_igraph_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Spread igraph node labels by angle from node center — spread_igraph_labels","title":"Spread igraph node labels by angle from node center — spread_igraph_labels","text":"Spread igraph node labels angle node center","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/spread_igraph_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spread igraph node labels by angle from node center — spread_igraph_labels","text":"","code":"spread_igraph_labels(   g,   layout = NULL,   y_bias = 1,   update_g_coords = TRUE,   do_reorder = TRUE,   sortAttributes = NULL,   nodeSortBy = c(\"x\", \"-y\"),   repulse = 3.5,   force_relayout = FALSE,   label_min_dist = 0.5,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/spread_igraph_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spread igraph node labels by angle from node center — spread_igraph_labels","text":"g igraph object layout numeric matrix representing x y coordinates node g, order V(g). layout supplied, nodes checked attributes c(\"x\", \"y\") define fixed internal layout. force_layout=TRUE coordinates ignored. supplied, layout_with_qfr() called along repulse argument. Subsequent coordinates stored V(g)$x V(g)$y argument update_g_coords=TRUE. y_bias numeric value indicating tendency spread labels y-axis rather symmetrically around node. argument elongates circle surrounding node ellipse ratio. update_g_coords logical indicating whether layout coordinates stored graph_attr(g, \"layout\"). do_reorder logical indicating whether call reorderIgraphNodes() re-distributes equivalent nodes based upon node color(s). node \"equivalent\" another node nodes identical edges. sortAttributes, nodeSortBy arguments passed reorderIgraphNodes() do_reorder=TRUE. repulse argument passed layout_with_qfr() layout supplied, layout stored c(V(g)$x, V(g)$y). force_relayout logical indicating whether igraph layout recalculated, order override coordinates may previously stored igraph object . Note layout supplied, always used. label_min_dist numeric value used ensure labels least distance center. units defined igraph, roughly units one line height text. ... additional arguments passed layout_with_qfr() needed.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/spread_igraph_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spread igraph node labels by angle from node center — spread_igraph_labels","text":"function uses igraph vertex attribute \"label.degree\", describes angular offset vertex label. (\"label.degree\" values represented radians, degrees, starting 0 right, proceeding clockwise starting right, , left, top, right.) function requires network layout, must fixed order vertex labels properly oriented. Labels oriented opposite dominant angular mean edges network node. Typically side node fewest edges space place label. checks performed overlapping labels. Note function modifies important attribute \"label.dist\" `label_min_dist“ defined, order enforce minimum label distance center node. logic position small large labels avoid overlapping labels.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/subgraph_jam.html","id":null,"dir":"Reference","previous_headings":"","what":"Subgraph using Jam extended logic — subgraph_jam","title":"Subgraph using Jam extended logic — subgraph_jam","text":"Subgraph using Jam extended logic","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subgraph_jam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subgraph using Jam extended logic — subgraph_jam","text":"","code":"subgraph_jam(graph, v)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/subgraph_jam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subgraph using Jam extended logic — subgraph_jam","text":"graph igraph object v integer logical vector indicating nodes retain final igraph object.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subgraph_jam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subgraph using Jam extended logic — subgraph_jam","text":"function extends igraph::subgraph() function include proper subset graph attribute \"layout\", unknown reason subset layout matrix consistent subset igraph nodes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/subsetCnetIgraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Cnet igraph — subsetCnetIgraph","title":"Subset Cnet igraph — subsetCnetIgraph","text":"Subset Cnet igraph","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subsetCnetIgraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Cnet igraph — subsetCnetIgraph","text":"","code":"subsetCnetIgraph(   gCnet,   includeSets = NULL,   includeGenes = NULL,   remove_singlets = TRUE,   minSetDegree = 1,   minGeneDegree = 1,   remove_blanks = FALSE,   spread_labels = TRUE,   force_relayout = TRUE,   do_reorder = TRUE,   repulse = 4,   layout = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/subsetCnetIgraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Cnet igraph — subsetCnetIgraph","text":"gCnet igraph object representing Cnet concept network data includeSets character vector, NULL, containing set names labels retain. includeGenes character vector, NULL, containing gene names labels retain. remove_singlets logical whether remove singlet graph nodes, nodes remaining edges. Note argument \"removeSinglets\" deprecated recognized preference, support removed future versions. minSetDegree integer value indicating minimum number edges Set node must retained resulting igraph. Use minSetDegree=2 retain Set nodes multiple connected Gene nodes. minGeneDegree integer value indicating minimum number edges Gene node must retained resulting igraph. Use minGeneDegree=2 retain Gene nodes connect multiple Set nodes. remove_blanks logical indicating whether call removeIgraphBlanks(), removes blank colors \"pie.color\" \"coloredrect.color\" attributes. spread_labels logical indicating whether call spread_igraph_labels(), re-orients node labels igraph object subsetted. TRUE, arguments force_relayout, do_reorder passed function. force_relayout logical indicating whether re-apply igraph layout function. do_reorder logical indicating whether call reorderIgraphNodes(), sorts equivalent nodes color label, intended large numbers nodes edges, typically common cnet plot many gene nodes may connected pathway set nodes. layout function takes igraph object returns numeric matrix node coordinates. function called force_relayout=TRUE, must supplied function order applied properly subset Cnet igraph. apply layout subset operation, igraph::set_graph_attr(g, \"layout\", layout). verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subsetCnetIgraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset Cnet igraph — subsetCnetIgraph","text":"function produces subset Cnet igraph based upon supplied set names gene names. function intended convenient method filtering Cnet igraph pre-defined set \"Set\" names. function assumes graph nodes attribute \"nodeType\" values either \"Set\" \"Gene\" indicate type node. includeSets supplied, graph subsetted include nodes nodeType=\"Set\" matching V(gCnet)$name V(gCnet)$label. neighboring nodes retained, thus removing nodes nodeType=\"Gene\" connect given Set nodes. result proper Cnet igraph contains Gene nodes connected subset Set nodes. includeGenes supplied, graph subsetted include nodes nodeType=\"Gene\" matching V(gCnet)$name V(gCnet)$label. removeSinglets=TRUE nodes remaining edges removed. Especially supplying includeGenes, option useful hide Set nodes connected Gene nodes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_igraph_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset igraph by connected components — subset_igraph_components","title":"Subset igraph by connected components — subset_igraph_components","text":"Subset igraph connected components","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_igraph_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset igraph by connected components — subset_igraph_components","text":"","code":"subset_igraph_components(   g,   keep = NULL,   min_size = 1,   order_by_size = TRUE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_igraph_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset igraph by connected components — subset_igraph_components","text":"g igraph object keep numeric vector indicating component components keep final output. order_by_size=TRUE, components ordered size, largest smallest, case keep=1 return one largest connected subgraph. min_size numeric value indicating number nodes required connected components returned. filter applied keep argument. order_by_size logical indicating whether connected components sorted size, largest smallest, therefore re-numbered. Otherwise, components somewhat randomly labeled based upon output igraph::components(). ... additional arguments passed igraph::components().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_igraph_components.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset igraph by connected components — subset_igraph_components","text":"function intended help drill igraph object contains multiple connected components. default, sorts components largest number nodes, smallest, helps choose largest connected component, subsequent components size order. components can also filtered require minimum number connected nodes. core, function wrapper igraph::components() igraph::subgraph().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_mem.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset mem multienrichment object — subset_mem","title":"Subset mem multienrichment object — subset_mem","text":"Subset mem multienrichment object","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_mem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset mem multienrichment object — subset_mem","text":"","code":"subset_mem(   mem,   includeSets = NULL,   includeGenes = NULL,   min_gene_ct = 1,   min_set_ct = 1,   p_cutoff = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_mem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset mem multienrichment object — subset_mem","text":"mem list object returned multiEnrichMap() includeSets character vector specific sets retain, sets dropped. includeGenes character vector specific genes retain, genes dropped. min_gene_ct numeric filter applied genes representing minimum number occurrences across sets mem$memIM incidence matrix. default value min_gene_ct=1 effectively requires gene present least one set, useful filtering includeSets. min_set_ct numeric filter applied sets representing minimum number occurrences genes mem$memIM incidence matrix. default value min_set_ct=1 effectively requires set contain least one gene. p_cutoff numeric optional enrichment P-value filter apply mem$enrichIM enrichment P-values. intended apply optionally higher stringency using lower p_cutoff used multiEnrichMap(). verbose logical indicating whether print verbose output. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_mem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset mem multienrichment object — subset_mem","text":"list object mem data","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/subset_mem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset mem multienrichment object — subset_mem","text":"function intended subset incidence matrix data contained mem object heuristics. update data mem object enrichList multiEnrichDF, igraph objects. intended mainly subset sets (pathways), genes, also subset corresponding incidence matrix data consistently.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/summarize_node_spacing.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","title":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","text":"Summarize spacing igraph nodes node groups","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/summarize_node_spacing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","text":"","code":"summarize_node_spacing(   g,   layout = NULL,   nodes = NULL,   scaled = TRUE,   each_group = TRUE,   node_groups = NULL,   dist_type = c(\"all\", \"nearest_node\", \"all_nodes\"),   verbose = FALSE,   debug = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/summarize_node_spacing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","text":"g igraph object layout numeric matrix x,y coordinates, NULL (default) call get_igraph_layout() uses either: igraph::graph_attr(g, 'layout') (preferred) igraph::V(g)$x igraph::V(g)$y (deprecated igraph). nodes character optional node names, integer index nodes g define subset nodes statistics calculated. Useful focus specific subset nodes, example one two Cnet nodesets. scaled logical, default TRUE, whether report percent spacing relative max x-axis/y-axis range, similar min_percent percent_spacing argument units node spacing functions. Note percent spacing scaled 0 100. each_group logical, default TRUE, whether summarize node group. node_groups NULL, default use get_cnet_nodesets(). node_groups list vectors named node group, vector contains vertex names igraph::V(g)$name. purpose help summarize spacing within across node groups. Cnet plot data, each_group=TRUE node_groups=NULL, call get_cnet_nodesets() use Cnet nodesets node groups. Cnet nodesets primary motivation function, however also works well using network communities. dist_type character string, default 'nearest_node' distance summary provide: \"nearest_node\" nearest node distance, helpful assess whether nodes minimum distance nodes. \"all_nodes\" node distances node, helpful assess overall spacing nodes. verbose logical indicating whether print verbose output. ... additional arguments passed internal functions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/summarize_node_spacing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","text":"list numeric matrix data, named summary used. Columns: 'Min', 'Q1', 'Median', 'Mean', 'Q3', 'Max'. Rows each_group=TRUE include names(node_groups). Rows each_group=FALSE include '', 'edge', 'nonedge'. 'edge' represents node-node connected edge; 'nonedge' represents node-node connected edge; '' includes node-node pairings. list names each_group=FALSE: 'summary' overall summary values list names each_group=TRUE: 'nearest_within': nearest-node, within node group 'nearest_across': nearest-node, across node group 'all_within': -nodes, within node group 'all_across': -nodes, across node group","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/summarize_node_spacing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","text":"function simple wrapper calculate typical distances nodes node groups given network layout. intended help determine values use percent_spacing apply_nodeset_spacing(). optimal value subjective, depends upon total number nodes, relative spacing nodes subgroups Cnet nodesets, igraph community clusters. Specific Cnet plots bipartite graphs, two important metrics: Within-group spacing 'nearest_within' matrix, column 'Median' useful assess spacing within group nodes. Across-group spacing 'nearest_across' matrix, column 'Min' useful assess minimum distance two node groups. Column 'Q1' may useful determine whether node group substantial overlaps another node group. Even still, sometimes node groups overlap , summarized .","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/summarize_node_spacing.html","id":"todo","dir":"Reference","previous_headings":"","what":"Todo","title":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","text":"Re-evaluate represent summary values calculated. example, nodeset one node calculate within-nodeset distances. Background: Typically, min(NULL) returns Inf (infinite). node-node distances, calculation return Inf. Currently, function returns NA cases. main motivation downstream summary statistics, example taking column median column mean argument na.rm=TRUE convenience.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/summarize_node_spacing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize spacing between igraph nodes or node groups — summarize_node_spacing","text":"","code":"cnet <- make_cnet_test(num_sets=2) igraph::V(cnet)$size <- igraph::V(cnet)$size * 2; igraph::V(cnet)$label.cex <- igraph::V(cnet)$label.cex * 2; jam_igraph(cnet)  summarize_node_spacing(cnet) #> $nearest_within #>                Min       Q1   Median     Mean       Q3      Max #> SetA      7.140575 7.407972 7.899545 7.985252 8.303953 9.860987 #> SetA,SetB 5.811383 6.456383 6.753902 6.679846 6.965622 7.246465 #> SetB      7.002380 7.477991 7.723277 7.691525 7.969027 8.668994 #>  #> $nearest_across #>                Min       Q1   Median     Mean       Q3      Max #> SetA      14.68003 19.43491 25.15193 25.03834 31.63886 33.48678 #> SetA,SetB 12.79187 15.90958 17.15834 17.60574 18.79838 23.02685 #> SetB      16.20952 18.59224 24.41664 24.18094 28.22870 31.54610 #>  #> $all_within #>                Min       Q1   Median     Mean       Q3      Max #> SetA      7.140575 17.39069 30.76989 33.07367 47.10243 71.40381 #> SetA,SetB 5.811383 11.68569 17.18104 18.97521 26.21139 45.37449 #> SetB      7.002380 15.48131 28.02655 29.96944 43.30363 66.85970 #>  #> $all_across #>                Min       Q1   Median     Mean       Q3       Max #> SetA      14.68003 45.17449 60.19573 60.99678 77.87559 101.45716 #> SetA,SetB 12.79187 35.29127 43.91737 43.16492 51.70278  66.10256 #> SetB      16.20952 45.60580 64.47152 62.69436 80.40931 101.45716 #>  summarize_node_spacing(cnet, dist_type=\"all_nodes\") #> $all_within #>                Min       Q1   Median     Mean       Q3      Max #> SetA      7.140575 17.39069 30.76989 33.07367 47.10243 71.40381 #> SetA,SetB 5.811383 11.68569 17.18104 18.97521 26.21139 45.37449 #> SetB      7.002380 15.48131 28.02655 29.96944 43.30363 66.85970 #>  #> $all_across #>                Min       Q1   Median     Mean       Q3       Max #> SetA      14.68003 45.17449 60.19573 60.99678 77.87559 101.45716 #> SetA,SetB 12.79187 35.29127 43.91737 43.16492 51.70278  66.10256 #> SetB      16.20952 45.60580 64.47152 62.69436 80.40931 101.45716 #>"},{"path":"https://jmw86069.github.io/multienrichjam/reference/sync_igraph_communities.html","id":null,"dir":"Reference","previous_headings":"","what":"Sync igraph nodes and communities — sync_igraph_communities","title":"Sync igraph nodes and communities — sync_igraph_communities","text":"Sync igraph nodes communities","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/sync_igraph_communities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sync igraph nodes and communities — sync_igraph_communities","text":"","code":"sync_igraph_communities(g, wc, verbose = TRUE, ...)"},{"path":"https://jmw86069.github.io/multienrichjam/reference/sync_igraph_communities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sync igraph nodes and communities — sync_igraph_communities","text":"g igraph object wc communities object, list form nodegroups, list character vectors contain igraph node names. verbose logical indicating whether print verbose output. ... additional arguments passed nodegroups2communities() input wc supplied list nodegroups format.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/sync_igraph_communities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sync igraph nodes and communities — sync_igraph_communities","text":"list two elements: \"g\" - igraph object subsetting match node names shared wc, necessary. \"wc' - communities object subsetting match node names shared g, necessary. input wc list nodegroups format, format returned.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/sync_igraph_communities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sync igraph nodes and communities — sync_igraph_communities","text":"function ensures igraph nodes corresponding community clusters synchronized proper downstream use. particular, using subgraph, communities assign subset nodes clusters, function ensures two objects sync, order, nodes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/topEnrichBySource.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset enrichResult for top enrichment results by source — topEnrichBySource","title":"Subset enrichResult for top enrichment results by source — topEnrichBySource","text":"Subset enrichResult top enrichment results source Subset list enrichResult top enrichment results source","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/topEnrichBySource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset enrichResult for top enrichment results by source — topEnrichBySource","text":"","code":"topEnrichBySource(   enrichDF,   n = 15,   min_count = 1,   p_cutoff = 1,   sourceColnames = c(\"gs_cat\", \"gs_subcat\"),   sortColname = NULL,   countColname = c(\"gene_count\", \"count\", \"geneHits\"),   pvalueColname = c(\"P.Value\", \"pvalue\", \"FDR\", \"adj.P.Val\", \"qvalue\"),   directionColname = c(\"activation.z.{0,1}score\", \"z.{0,1}score\"),   direction_cutoff = 0,   newColname = \"EnrichGroup\",   curateFrom = NULL,   curateTo = NULL,   sourceSubset = NULL,   sourceSep = \"_\",   subsetSets = NULL,   descriptionColname = c(\"Description\", \"Name\", \"Pathway\"),   nameColname = c(\"ID\", \"Name\"),   descriptionGrep = NULL,   nameGrep = NULL,   verbose = FALSE,   ... )  topEnrichListBySource(   enrichList,   n = 15,   min_count = 1,   p_cutoff = 1,   sourceColnames = c(\"gs_cat\", \"gs_subcat\"),   sortColname = c(pvalueColname, \"P-value\", \"pvalue\", \"qvalue\", \"padjust\", \"-GeneRatio\",     \"-Count\", \"-geneHits\"),   countColname = c(\"gene_count\", \"count\", \"geneHits\"),   pvalueColname = c(\"P.Value\", \"pvalue\", \"FDR\", \"adj.P.Val\", \"qvalue\"),   directionColname = c(\"activation.z.{0,1}score\", \"z.{0,1}score\"),   direction_cutoff = 1,   newColname = \"EnrichGroup\",   curateFrom = NULL,   curateTo = NULL,   sourceSubset = NULL,   sourceSep = \"_\",   subsetSets = NULL,   descriptionColname = c(\"Description\", \"Name\", \"Pathway\"),   nameColname = c(\"ID\", \"Name\"),   descriptionGrep = NULL,   nameGrep = NULL,   verbose = FALSE,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/topEnrichBySource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset enrichResult for top enrichment results by source — topEnrichBySource","text":"enrichDF enrichResult data.frame enrichment results. n integer maximum number pathways retain, applying min_count p_cutoff thresholds relevant. min_count integer minimum number genes involved enrichment result retained, based upon values countColname. p_cutoff numeric value indicating enrichment P-value threshold, pathways enrichment P-value threshold retained, based upon values pvalueColname. sourceColnames character vector colnames enrichDF consider \"Source\". Multiple columns combined using delimiter argument sourceSep. sourceColnames NULL contains colnames(enrichDF), data considered \"\". sortColname character vector, default NULL, indicating colnames sort/prioritize enrichment data rows. Please use NULL. Default NULL use pvalueColname reverse countColname, prioritize lowest P-value, highest gene count. FALSE perform sorting, use input data -. character vector provided, values must exactly match intended colnames, optional prefix \"-\" indicate reverse sort particular colname. values passed jamba::mixedSortDF() argument byCols. countColname character vector possible colnames enrichDF contain integer number genes involved enrichment. vector passed find_colname() find appropriate matching colname enrichDF. pvalueColname character vector possible colnames enrichDF contain enrichment P-value used filtering p_cutoff. directionColname character vector possible colnames enrichDF may contain directional z-score, metric used indicate directionality. assumed symmetric around zero, zero indicates directional bias. direction_cutoff numeric threshold (default 0) subset enriched sets, filtering magnitude absolute value directionColname. newColname character string new column name sourceColname matches multiple colnames enrichDF. Values row combined using jamba::pasteByRow(). curateFrom, curateTo character vectors pattern,replacement values, passed gsubs() allow editing values. default values convert MSigDB canonical pathways prefix \"CP:\" use \"CP\" effect combining canonical pathways selecting top n results. sourceSubset character vector subset sources retain. multiple colnames sourceColnames, column values combined using jamba::pasteByRow() delimiter sourceSep, prior filtering. sourceSep character string used delimiter sourceColnames contains multiple colnames. subsetSets character optional set names include exact match. descriptionColname, nameColname character vectors indicating colnames consider description name, returned find_colname(). arguments used descriptionGrep nameGrep supplied. descriptionGrep, nameGrep character vector regular expression patterns, intended subset pathways include matching patterns. descriptionGrep argument searches descriptionColname. nameGrep argument searches nameColname. Note sets combined logic, pathways matched descriptionGrep nameGrep subsetSets included output. verbose logical indicating whether print verbose output. ... additional arguments ignored. enrichList list enrichDF entries, passed topEnrichBySource().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/topEnrichBySource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset enrichResult for top enrichment results by source — topEnrichBySource","text":"data.frame subset topEnrichN rows, applying optional min_count p_cutoff filters.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/topEnrichBySource.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset enrichResult for top enrichment results by source — topEnrichBySource","text":"function takes one enrichResult object, data.frame enrichment results, determines top n number pathways sorted P-values, within pathway source. function may optionally require min_count genes pathway, p_cutoff maximum enrichment P-value, prior taking top topEnrichN entries. default arguments apply filters min_count p_cutoff. enrichment data represents pathways multiple sources, filtering sorting applied source independently. intent retain top entries source, method representing source consistently even one source may contain many pathways, importantly range enrichment P-values may different source. example, database small canonical pathways generally provide less statistically significant P-values database dysregulated genes gene expression experiments, set contains large number genes. function can optionally apply basic curation pathway source names, can optionally applied multiple source columns. feature intended sources like MSigDB (see http://software.broadinstitute.org/gsea/msigdb/index.jsp) contains columns \"Source\" \"Category\", canonical pathways either represented \"CP\" prefix \"CP:\". default parameters recognize case curates prefix \"CP:.*\" just \"CP\" canonical pathways considered source. MSigDB also numerous sources, independently filtered sorted top topEnrichN entries. Finally, function useful subset enrichment results name, using descriptionGrep, nameGrep, subsetSets. topEnrichListBySource() extends topEnrichBySource() applying filters enrichList entry, keeping pathways across enrichList match filter criteria one enrichList. useful context multiEnrichMap() pathway must meet criteria least one enrichment, pathway included enrichments purpose comparative analysis.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/with_qfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout specification for Qgraph Fruchterman-Reingold — with_qfr","title":"Layout specification for Qgraph Fruchterman-Reingold — with_qfr","text":"Layout specification Qgraph Fruchterman-Reingold","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/with_qfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout specification for Qgraph Fruchterman-Reingold — with_qfr","text":"","code":"with_qfr(..., repulse = 4)"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/xyAngle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get angle from origin to vector of x,y coordinates — xyAngle","title":"Get angle from origin to vector of x,y coordinates — xyAngle","text":"Get angle origin vector x,y coordinates","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/xyAngle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get angle from origin to vector of x,y coordinates — xyAngle","text":"","code":"xyAngle(   x,   y = NULL,   directed = FALSE,   deg = TRUE,   origin.x = 0,   origin.y = 0,   ... )"},{"path":"https://jmw86069.github.io/multienrichjam/reference/xyAngle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get angle from origin to vector of x,y coordinates — xyAngle","text":"x numeric vector two-column matrix columns representing x,y coordinates y NULL. y numeric vector NULL. directed logical indicating whether return angles around full circle, half circle. example, degrees c(1,1) indicates 45 degrees, c(-1,-1) indicates -135 degrees. directed=FALSE c(-1,-1) indicates 45 degrees. deg logical indicating whether return degrees, deg=FALSE returns radians. origin.x, origin.y numeric input defining coordinates use origin. non-zero implies first point segment. ... additional arguments ignored.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/reference/xyAngle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get angle from origin to vector of x,y coordinates — xyAngle","text":"function gets angle origin x,y coordinates, allowing vectorized input output.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/reference/xyAngle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get angle from origin to vector of x,y coordinates — xyAngle","text":"","code":"# by default output is in degrees xyAngle(1, 1); #> [1] 45  # output in radians xyAngle(1, 1, deg=FALSE); #> [1] 0.7853982  # optionally different origin xyAngle(1, 1, origin.x=1, origin.y=0); #> [1] 90"},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_17oct2025","dir":"","previous_headings":"","what":"17oct2025","title":"TODO","text":"Add vignette clusterProfiler msigdbr. PROGRESS. Convert Mem S4 object Update functions accept ‘mem’ ‘Mem’ input. Update multiEnrichMap() return ‘Mem’. Consider removing sections create cnet/emap objects. Add emap mem_plot_folio(), least “make easy”. Add Cnet-Heatmap supporting functions. Add testthis unit tests key behaviors. ShinyCat Fix bug: singlet node highlighted, nodesets highlighted. Consider shinydashboard::tabBox() inputs; bsplus::bs_accordion() Consider adding global layout options Relayout new repulse threshold. “nullify” adjustments. Nodeset spacing overall. (Rather click nodeset) DONE. Consider highlighting edges around highlighted node/nodeset DONE. Add option save igraph object local file DONE (removed). Add (remove) data table tab DONE. Document retain data igraph shapes clean use pie.border, pie.lwd, pie.width, frame.color, frame.width, frame.lwd Official igraph now uses “width” instead “lwd” probably best. Consider JamPolygon? also require grid, require porting igraph shapes grid equivalents. Competes long-term goal integrate ggplot2/tidygraph/ggraph. tidygraph/ggraph long-term ggraph requires porting ‘jampie’ (potentially ‘coloredrectangle’) vertex shapes ggplot2/ggraph. ggraph may require porting edge bundling ggraph. ggraph may require porting ‘qfr’ layout include argument ‘repulse’. tidygraph workflows may warrant creating examples use tidy-oriented logic instead base R (igraph-like) syntax. reduce R dependencies DONE. alphahull - requires sp, ggplot2, spatstat. Port alphahull::ashape()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_09oct2025","dir":"","previous_headings":"","what":"09oct2025","title":"TODO","text":"New function: layout fixed nodes Purpose “make easy” apply relayout holding subset nodes fixed place. Simple wrapper around existing capability, similar adjust_cnet_set_relayout_gene(). Potential relayout one nodeset, keeping others static. DONE. Support “script-like” Cnet adjustments. Simple text line: node/nodeset❌y:spacing:rotate Performance: Response drawing plot noticeably slow R-shiny context, basic strategies speeding process applied. Consider storing “edge bundling group” igraph edge attributes, since edge can belong one “bundle”. Cnet, default Cnet nodeset, however set edges can bundled. Consider pre-calculating edge bunding splines, caching igraph attributes re-use. must invalidated : new layout; change layout coordinates. Rotating igraph layout also rotate bundled splines. Consider pre-calculating mark group alpha hull polygons. DONE. R-shiny Cnet Adjustment Tool ‘ShinyCat’ prototype Use jam_graph(), associate mouse click x,y specific node DONE. summarize_igraph_spacing() Defaults: scaled, within-nodeset, group call get_cnet_nodeset() supplied Improve igraph node label placement: Consider adding label.adjx, label.adjy nudge label, applied label.dist label.degrees. Unclear units “relative” (layout) “absolute”, “relative” seems convenient default. Reducing label overlaps time sink easier, automated, . Related whether ggraph/tidygraph rendering ever become viable. yes use ggrepel. Using ggraph/tidygraph requires porting jam_igraph() features: edge bundling, node shapes (jampie, coloredrectangle). , decide whether use grid base R graphics estimate label sizes, implement non-overlapping labels (somehow). Ultimately, process use label.adjx, label.adjy.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_27mar2025","dir":"","previous_headings":"","what":"27mar2025","title":"TODO","text":"Consider approach store/cache edge bundling given layout. Consider longer-term use tidygraph/ggraph environment, requires creating pie node type geom, foregoing edge bundling eventually logic can ported system.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_13mar2025","dir":"","previous_headings":"","what":"13mar2025","title":"TODO","text":"S4 Mem object probably also include Mpf output optional slots. DONE. Fix: mem_plot_folio() ignores byCols sorting exemplar pathways.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_12feb2025","dir":"","previous_headings":"","what":"12feb2025","title":"TODO","text":"importIPAenrichment() Update match new variations “Export ” text output IPA.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_15dec2024","dir":"","previous_headings":"","what":"15dec2024","title":"TODO","text":"mem_enrichment_heatmap(), mem_plot_folio() Consider option abbreviate pathway names fly. Column names sometimes ridiculously long, column_names_max_height isn’t effective enough. Add clustering method info legend mem_gene_path_heatmap(). Functions using nodeset names Protect sorting errors, e.g. nodeset=\"D,\" recognize nodeset whose sorted label : \",D\" See adjust_cnet_nodeset() argument set_nodes","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_04dec2024","dir":"","previous_headings":"","what":"04dec2024","title":"TODO","text":"Fix bug “Error gp_hm@column_dend_param$fun(t(gp_hm@matrix)) : attempt apply non-function” Seems caused small number pathways memIM/enrichIM matrix. Consider removing sf. Potentially replace direct calls polyclip. Replace JamPolygon, suggest replacing grid. “hobby option” - require updating JamPolygon.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_12nov2024","dir":"","previous_headings":"","what":"12nov2024","title":"TODO","text":"Ideas S4 helper functions / accessors exemplars() - extract exemplar pathways Gene-Pathway clusters as_data_frame() - convert formal data.frame format Mem Mpf - one section describe pathway cluster","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_02nov2024","dir":"","previous_headings":"","what":"02nov2024","title":"TODO","text":"S4 objects consider creating: Mem - MultiEnrichMent Consider storing MPF clustering params Consider storing pathway clusters , allow custom assignment pathways clusters mpf MPF - Mem Plot Folio Consider storing mem_plot_folio() output fixed object. Alternative add Mem . Cnet - Can inherit igraph? (’m really unsure benefit hassle.) Methodology Apparently yes. See setOldClass(); virtual slot .Data S3 object; (x, \"S3) convert S3 form; extends(class(x)) equivalent S3 inheritance; see https://stackoverflow.com/questions/64683532/r--method--converting-custom-s4-class Benefits Enforce constraints unique Cnet-type objects: nodeType, cnet_nodesets, etc. Direct plot() function jam_igraph(). Direct “cnet” functions use object type. mem_plot_folio() Consider adding Mem params heatmap legend, e.g. Top Pathways N (topEnrichN) Gene min count Number pathway clusters Add Multi-Enrichment Plot workflow, mem2emap(). Add mem_cnet_heatmap() - “Cnet-Heatmap” Cnet network plot (center) surrounded heatmaps Cnet cluster. Consider compatibility Bioconductor S4 object classes: clusterProfiler::enrichResult - used extent already clusterProfiler::gseaResult - used directly Ref: https://doi.org/10.1016/j.xinn.2021.100141 EGSEA::EGSEAResults, see topSets(), plotHeatmap(), plotPathway(), plotMethods(), plotSummary(), plotGOGraph(), plotBars(), limmaTopTable()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_01nov2024","dir":"","previous_headings":"","what":"01nov2024","title":"TODO","text":"Minor: Consider using cli messaging, consistency tidyverse.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_29oct2024","dir":"","previous_headings":"","what":"29oct2024","title":"TODO","text":"General goal reduce label overlaps Cnet plots Many options, including considering ggraph ot tidygraph, however require re-creating pie/jampie graph node shapes display fill colors border outline (without hiding adjacent borders). strategies respect edge bundling, either lost require porting ggplot ecosystem somehow. Sigh. use ggrepel non-overlapping labels. Ideal world: exists grid tool non-overlapping labels, ggplot2. simpler option allow direct x/y coordinate label adjustment. Current approach requires angle distance node center. Difficult move one label “left tiny amount”. given ability adjust label, possible adjust labels reduce overlaps. Potential workflow: Define label coordinates calculating angle distance node center per usual. Apply adjustments. Apply user-provided adjustments. Easiest approach. Default nudge matrix c(0, 0) nodes. Edit specific nodes, relative plot layout coordinates. Future: Automated adjustments. Use strwidth() strheight() define bounding boxes. Adjust bounding boxes? plotrix approach performs radial search local space. works best labels placed smart order, e.g. center cluster, working toward edges. Define clusters? Define center cluster. Sort labels distance cluster center. Force-directed: calc overlap two labels, center overlap, center bounding box, calculate angle, relative “strength”, repel along opposite angle.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_09oct2024","dir":"","previous_headings":"","what":"09oct2024","title":"TODO","text":"fixSetLabels() Define better default replacements. Consider using default /, option user-defined additions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_09sep2024","dir":"","previous_headings":"","what":"09sep2024","title":"TODO","text":"Consider using mem_enrichment_heatmap() top_annotation mem_gene_path_heatmap(), including example dotplot format. Easiest prototype might use + display gene-path heatmap rotated rotate_heatmap=TRUE beside enrichment heatmap,merge color legends:","code":"ComplexHeatmap::draw(mpf$enrichment_hm + mpf$gp_hm,    annotation_legend_list=attr(mpf$enrichment_hm, \"annotation_legend_list\"),    merge_legends=TRUE)"},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_04sep2024","dir":"","previous_headings":"","what":"04sep2024","title":"TODO","text":"DONE. Fix row_title enrichment heatmap called mem_plot_folio(), currently uses numbers instead LETTERS. DONE. Consider option fixed-attribute cells mem_enrichment_heatmap() used dot plot, cell square circle centered. Consider returning updated igraph jam_igraph() Currently returns invisible(NULL). example, applying updates igraph values node size, label size, label distance, etc. end goal able call jam_igraph(output) additional arguments (mostly) render identical figure.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_30aug2024","dir":"","previous_headings":"","what":"30aug2024","title":"TODO","text":"Add unit tests. Cover basic functionality. Examples vignettes already cover core workflow. Consider adjustments make_point_hull() font size distance hull Big picture: Consider using venndir::JamPolygon instead sf polygons. calculate offsets, rescale, transform, using JamPolygon functions. Biggest benefit reduce dependencies, sf heavy.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_16aug2024","dir":"","previous_headings":"","what":"16aug2024","title":"TODO","text":"mem_gene_path_heatmap() Changed default caption use ComplexHeatmap::Legend() format can included along color legends. Increased caption font, legible. Moved gene rows, set columns labels top, split two rows. Return added attribute \"caption_legendlist\". apply_cnet_direction() Change default logic use pie.border always instead switching frame.color borders identical. think logic belong plotting function decide render nodes, jam_igraph() Also convenient reviewing data, user look pie.border combination pie.border frame.color. mem_enrichment_heatmap() Consider adding top_annotation using colorV colors per enrichment, consistency mem_gene_path_heatmap() Cnet plots. DONE. Add add_pathway_direction() DONE. Helper function add directional z-score column enrichResult data, using formula QIAGEN IPA: z <- (N_genes_up - N_genes_down) / sqrt(N_genes_up + N_genes_down) Call add_pathway_direction() multiEnrichMap() appropriate. geneHitList geneHitIM provided, contain positive negative values, \"z-score\" already defined enrichResult object. (Bonus points checking direction colname attribute.) Review clusterProfiler::compareClusterResult-class object definition. example clusterProfiler::merge_result(list(enrichResults)). Consider form integration, possible, example conversion /call similar functions clusterProfiler. S4 object Mem replace list returned multiEnrichMap() COMING Consider multienrichjam() replace multiEnrichmap()? slots: geneIM (im, direction, colors): matrix objects enrichIM, (pvalues, direction, geneCount, colors): matrix objects memIM: matrix object enrichList: list enrichResult objects colorV: character vector colors per enrichment colnames: character column assignment (consider omitting enforce standardized colnames) methods: mem_plot_folio(), supporting functions: mem_gene_path_heatmap(), mem_enrichment_heatmap(), mem2cnet() enrichList() - accessor mem@enrichList mem2dfs() - create series data.frame summarizing content, intended export Excel xlsx. mem2xlsx() - direct export Excel xlsx, calling mem2dfs(). behaviors multiEnrichMap() returns Mem object instead list mem_plot_folio() may store parameters Mem object mem_gene_path_heatmap(), mem_enrichment_heatmap() also store/retrieve parameters mem input object. mem_plot_folio() optionally stores plots mem maintian consistent plot attributes Consider Cnet object inherits igraph? behaves igraph object except class helpful generic functions: plot.Cnet(), layout.Cnet(), relayout.Cnet() Unclear S3 object type preferred since inherit igraph (S3 object) characteristics. Consider subgraph.Cnet() subgraph.igraph() functions Main purpose subset layout well nodes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_07aug2024","dir":"","previous_headings":"","what":"07aug2024","title":"TODO","text":"Remove require() checks, since already Dependencies.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_19jul2024","dir":"","previous_headings":"","what":"19jul2024","title":"TODO","text":"Remove gsubs() causes warning upon loading multienrichjam. conflicts jamba::gsubs(). slightly different logic. mem_plot_folio() Enrichment heatmap define row_title match pathway_column_title, LETTERS default. currently shows numbers.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_11jul2024","dir":"","previous_headings":"","what":"11jul2024","title":"TODO","text":"mem_plot_folio() - option support RMarkdown output Provide optional wrapper RMarkdown output, specifically print headings/tabs plot produced. Slight downside isn’t easy way configure unique figure size plot, plot sizes mercy Rmd chunk options fig.height, fig.width. One implementation option allow hook_preplot hook_postplot allow user run custom function plot drawn. feels complicated, main driver just print RMarkdown header. Investigate whether Markdown tab can define new figure size.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_21jun2024","dir":"","previous_headings":"","what":"21jun2024","title":"TODO","text":"importIPAenrichment() DONE. Consider handling gene identifiers default behavior refers enriched gene original input gene symbol, IPA-generated gene symbol. considerations: main driver associate pathway genes input data, using identifier input data. Sometimes IPA assigns name match input data. may consider data integration (comparison across enrichments) may perform better comparing via IPA Symbol. Consider example \"HSPA1A/HSPA1B\", one experiment may find \"HSPA1A\" significant, another may find \"HSPA1B\" significant. According IPA, results equivalent, case IPA symbol \"HSPA1A/HSPA1B\" allow use identifier. Sometimes “user input” platform ID, Affymetrix probe. case may preferable use “user input”. case may convenient data integration, less convenient trying recognize gene symbols labels. step requires \"Analysis Ready Molecules\" available, follows expected convention used Ingenuity. multiple genes combined “one entity” IPA, one input symbol retained \"Analysis Ready Molecules\". driving use case: \"HSPA1A\" \"HSPA1B\" combined one gene entry \"HSPA1A/HSPA1B\" IPA. considered one gene purpose enrichment. one genes significant, appear \"HSPA1A/HSPA1B\" IPA. \"Analysis Ready Molecules\" list one symbol \"HSPA1B\" exemplar, entry appear \"HSPA1A\". case two options: Use IPA assigned input symbol provided: \"HSPA1B\". IMPLEMENTED revert_ipa_xref=TRUE (new default). Split IPA multi-symbol label component parts \"HSPA1A\" \"HSPA1B\". case, need user supply actual gene hits, retain gene hit user provided. IMPLEMENTED. Leave entry \"HSPA1A/HSPA1B\", however symbol match input gene hit list, expression data matrix. IMPLEMENTED revert_ipa_xref=FALSE. Consider retaining header section analysis details, least text input. multiEnrichMap() Sometimes gene rows geneIM match gene rows memIM, causing error downstream. problem appears happen gene hit list match entries memIM, causing geneIM fewer rows. One solution reduce memIM - ideal want lose data. Another option expand geneIM - requires inferring incidence matrix. directional data, impose 1 regardless intended directionality, since source available.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_16may2024","dir":"","previous_headings":"","what":"16may2024","title":"TODO","text":"edge bundling two communities currently calculates “central path” group centroids. Consider calculating “central path” points edges two communities.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10may2024","dir":"","previous_headings":"","what":"10may2024","title":"TODO","text":"igraph adjustment scripting language? Combines: nudge_igraph_nodes(): Fuscobac:❌0.01:y:-0.02 adjust_cnet_nodeset(): nodeset:::degrees:45:x0.1:y-0.05:percent_spacing:7 apply_nodeset_spacing(): nodeset:B::percent_spacing:7 adjust_cnet_nodeset(), apply_nodeset_spacing() Debug issue label.dist label.degrees defined subset nodes, leaving node attributes NA - causes error jam_igraph(). Occurs one nodeset adjusted. Debug issue percent_spacing fails adjust_cnet_nodeset() supplying custom nodegroups community detection, proper Cnet nodesets.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_03may2024","dir":"","previous_headings":"","what":"03may2024","title":"TODO","text":"mem_gene_path_heatmap() - lower priority useful Consider interactive view (plotly? InteractiveComplexHeatmap?) enable hover text enrichment P-value, gene count, z-score. particularly useful directional output. Consider optionally labeling significant dots? P-value z-score number genes. mem_legend() - lower priority, eventually necessary Consider using ComplexHeatmap::Legend() consistency legends, allow combining multiple legends together. S4 object mem (MEM?) - higher priority - sooner better streamlined data content: geneIM (im, direction, colors): matrix objects enrichIM, (pvalues, direction, geneCount, colors): matrix objects memIM: matrix object enrichList: list enrichResult objects colorV: character vector colors per enrichment colnames: character column assignment (consider omitting enforce standardized colnames) omit: multiEnrichMap - favor mem_plot_folio(), memIM2cnet() omit: multiCnetPlot - favor mem_multienrichplot() optional: store output mem_plot_folio() keep series plots coordinated, using options: pathway_column_split, gene_row_split, enrich_im_weight, gene_im_weight, column_method, row_method (rename column_method pathway_method?) optional enrichment_hm: Heatmap output mem_enrichment_heatmap()? methods: mem_plot_folio(), supporting functions: mem_gene_path_heatmap(), mem_enrichment_heatmap(), mem2cnet() enrichList() - accessor mem@enrichList mem2dfs() - create series data.frame summarizing content, intended export Excel xlsx. mem2xlsx() - direct export Excel xlsx, calling mem2dfs(). behaviors multiEnrichMap() creates MEM object instead list default mem_gene_path_heatmap(), mem_enrichment_heatmap() also store/retrieve parameters mem input object. mem_plot_folio() optionally stores plots mem maintian consistent plot attributes mem_plot_folio() argument do_which - consider accepting character string terms, e.g. \"enrichment_hm\", \"gp_hm\", \"cnet_collapse_set\" Consider new argument clusters_mem uses: allow user-defined pathway clusters allow user-defined pathway subsets (missing pathways dropped) collapse_mem_clusters() provided mpf$clusters_mem list may result singlet genes connected pathways - (default) removed. jam_igraph() - debug Apparently sometimes singlet gene nodes produces error: \"Error FUN(X[[]], ...) : !anyNA(x) TRUE\" traceback pointed line: sf::st_polygon(list(polym)) jamenrich-igraphshapes.R#1635","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_12mar2024","dir":"","previous_headings":"","what":"12mar2024","title":"TODO","text":"mem_gene_path_heatmap() Consider option place caption elsewhere. Problem: caption sometimes covers part color legend bottom-right corner. Another workaround might customize legend layout, blocked caption. mem_plot_folio(), mem_gene_path_heatmap() Consider workflow merge pathway clusters, allow flexibility pathway clusters defined. Problem: Pathway clusters sometimes defined inconsistently, clusters \"\" \"B\" might nearly identical. Problem: might visually apparent sub-divide pathways, user may need mechanism define pathways specific clusters.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_04mar2024","dir":"","previous_headings":"","what":"04mar2024","title":"TODO","text":"mem_gene_path_heatmap() consider adding column top_annotation pathway directionality, equivalent left_annotation used gene directionality. Add row column annotation padding default, help distinguish central heatmap left top annotations. multiEnrichMap() supplied geneHitIM geneHitList, calculate z-score using IPA formula: z <- (N_genes_up - N_genes_down) / sqrt(N_genes_up + N_genes_down) described [https://doi.org/10.1093/bioinformatics/btt703], FAQ: IPA FAQ - Statistical Calculations","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_30jan2024","dir":"","previous_headings":"","what":"30jan2024","title":"TODO","text":"DONE. multiEnrichMap() DONE. geneHitIM geneHitList behaving intended, consistently. interchangeable equivalent. geneHitIM supplied, populates geneIMdirection geneIM. geneHitList supplied, populates geneIM geneIMdirection. either supplied, populate relevant row geneIM geneIMdirection.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_19jan2024","dir":"","previous_headings":"","what":"19jan2024","title":"TODO","text":"Currently cumbersome edit pathway labels. done mem object , however adjustment might need different different plot outputs: heatmap may work well using word-wrap, Cnet plots might work best word-wrap. Publication figures might need abbreviated label save plot space. mem_plot_folio() Consider argument enable custom adjustment pathway labels. mem_gene_path_heatmap() DONE. Consider argument gene_annotations enable \"geneIM\", \"geneIMdirection\". DONE. mem$geneIMdirection present, include directionality gene clustering step. REWRITTEN . Consider option display pathway z-score (mem$pathwayIMdirection) similar display mem$geneIMdirection. New argument pathway_annotations.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_06nov2023","dir":"","previous_headings":"","what":"06nov2023","title":"TODO","text":"DONE. Debug issue rendering edge arrow heads, look wonky. Remove dependency sf adjust_polygon_border() use polyclip package much lightweight, without requiring RGEOS, LWGEOM, world globe map-coordinate based libraries easily compiled computer systems using R. Consider porting deconcat_df2() jamba wider re-use jam packages otherwise need dependency multienrichjam. Consider vectorizing edge arrow size Currently edge arrows must size (limitation present igraph::plot()). niche feature, arrows rarely used multienrichjam, use differently-sized arrows driving use case. (feature unlikely move forward needed.) Consider ggraph compatibility future. Many R packages use ggraph igraph plotting, might make sense consistency offer feature. output ggplot objects can combined larger figures using patchwork cowplot easier using base R plot() functions. preference use ggraph mainly returned ggplot object useful network graph, instructions visualization. , layout, node customization, persistent outside ggplot object. package clusterProfiler migrated ggraph now returned objects useful (easily) customized analyzed. However ggraph offer pie coloredrectangle node shapes. Note pie nodes can emulated geom_pie() painfully slow render vectorized, use inner borders, allow adjacent wedge borders shown beside without overlapping. Task add new geom jampie node shape accepts pie wedge border colors drawn inner border, optional outer border color also overlap optional inner border. Another task implement edge bundling using ggraph compatible methods. involves calculating edge bundles, rendering curved edges, optionally arrow heads. Ultimately utility function jam_ggraph() may ggraph equivalent jam_igraph() plotting igraph objects.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_12oct2023","dir":"","previous_headings":"","what":"12oct2023","title":"TODO","text":"Integrate directionality steps workflow: mem_gene_path_heatmap() Consider option display direction change row (gene) annotations enrichment. display without enrichment-colored results? Create bookdown documentation use separate Github repository? (Probably yes.) looks like \"jokergoo/circlize_book\" repo bookdown site. Refactor multiEnrichMap() - maybe new function multienrichjam()? create mem S4 object slots, print, summary functions suggested methods: plot() default mem_gene_path_heatmap() show data print() print summary content: enrichments, pathways, genes consider .data.frame() - convert wide data.frame summary? memIM(), geneIM(), enrichIM() convenient access slot data convenient way get list format IMs? slots: memIM: gene/pathway matrix geneIM: gene/enrichment matrix enrichIM: pathway/enrichment geneIMdirection: optional direction per gene/enrichment geneIMcolors: colors assigned per gene/enrichment enrichIMdirection: optional direction (z-score) per pathway/enrichment enrichIMcolors: colors assigned per pathway/enrichment enrichIMgeneCount: integer number genes per pathway/enrichment remove steps create embedded Cnet Emap igraph objects: multiCnetPlot, multiCnetPlot1, multiCnetPlot1b, multiCnetPlot2 multiEnrichMap, multiEnrichMap2 multiEnrichDF - consider saving data.frame clear name multiEnrichResult - content stored ?","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_12jul2023","dir":"","previous_headings":"","what":"12jul2023","title":"TODO","text":"New object classes: \"mem\": store output multiEnrichMap() (Essentially formal replacement list format used currently.) memIM enrichIM, enrichIMcolors, enrichIMdirection geneIM, geneIMcolors, geneIMdirection geneHitList colorV params: p_cutoff (argument cutoffRowMinP) min_count topEnrichN pvalueColname directionColname \"mem_plots\": store mem_plot_folio() data re-use. New wrapper function multienrich() replace multiEnrichMap()? streamlined refactor replacement multiEnrichMap() avoids defining Cnet Emap data, pushing mem_plot_folio() reduces arguments removing visualization arguments consider storing memIM data SummarizedExperiment convenient use ComplexHeatmap::Heatmap() via jamses::heatmap_se(). returns mem object. Update mem_plot_folio() input mem object add mem2emap() plot output. consider using jamses::heatmap_se() heatmap functions adds jamses dependency, along dependencies puts pressure refactor jamses contrast stats code jamses::heatmap_se() moved new package focused SummarizedExperiment heatmaps? See Bioconductor package sechm much less capable, inspiration. provides row scaling (ack) recommended (!) option. (Problematic, sorry say. gene expression data, magnitude change important, matters. rescale numeric range consistency counter biology, technology. technology measurement limitations, seeing actual numeric differences important assessing whether changes reliable platform. differences also transfer follow-confirmation assays, changes threshold feasible confirm. general, gene (transcript protein) expression fold changes relatively consistently measured gene, enhance apparent fold change one gene fit fold change another gene necessary, certainly default.) Consider new R package SummarizedExperiment heatmaps move jamses::heatmap_se() package move platjam::design2colors() package minimize R package dependencies R packages review Bioconductor package \"ConsensusClusterPlus\" can used determine appropriate k values k-means clustering, metrics assess consistency cluster assignment. \"GeneTonic\" function ggs_graph() produces Cnet plot export visIgraph() interactivity; enrichment_map() creates EnrichMap. \"monaLisa\" - motif enrichment, extends HOMER theme; nice heatmap Motif labels \"profileplyr\" - coverage heatmap using tidyverse plyr syntax","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_14jun2023","dir":"","previous_headings":"","what":"14jun2023","title":"TODO","text":"DONE: reorder_igraph_nodes() orderByAspect=TRUE, detects tall-skinny aspect ratio, appears applying y-axis sorting bottom--top instead top--bottom. culprit spread_igraph_labels() default argument, changed nodeSortBy=c(\"x\", \"y\") nodeSortBy=c(\"x\", \"-y\"). mem_gene_path_heatmap() Slightly increase spacing heatmap body row/column annotations. Currently gap heatmap row/column split identical gap heatmap row/column annotations, makes harder distinguish one . can accomplished using ComplexHeatmap::ht_opts() option hard remember, ideally need set back previous value drawing plot.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_05jun2023","dir":"","previous_headings":"","what":"05jun2023","title":"TODO","text":"mem_plot_folio() DONE: enrichment dot plot (enrichment heatmap) created gene-path heatmap created, order define pathway clusters using gene content, rather defining pathway clusters using -log10(Pvalue) matrix. clusters derived P-value matrix sometimes similar gene-pathway clustering result. workflow, makes sense define pathway clusters upfront, share pathway clusters downstream visualizations. Consider creating object class “mem_plots”. consider new function convert IPA enrichment data geneHitList list element \"Analysis Ready Molecules\" provided IPA output, data can used re-create directional hit matrix used import (directionality fold change provided IPA). consider new function evaluate gene-pathway heatmap output driving use case selecting pathway_column_split=5 upfront, realizing perhaps 3 clusters preferred based upon content. Criteria collapsing two pathway clusters together: either Jaccard similarity 0.4, correlation 0.6. Definitely requires testing determine appropriate default thresholds, whether reasonable data-driven threshold can defined. sometimes two clusters can perhaps merged together Create collapsed incidence matrix, Calculate correlation, two clusters correlation >= 0.2 merged? Alternatively, 3 clusters merged, cancel prevent merging many clusters together. consider new function edit vertex attributes? use case: existing igraph object nodes attributes modify: sometimes modify certain nodes: nodeType=\"Set\" edit labels attributes atomic vector form attributes (pie.color, pie.border) list form also sometimes want adjust colors - probably separate function function returns igraph object attribute modified stored state present originally (e.g. atomic remains atomic; list remains list). format seems reasonable? ``` gsub_vertex(g, pattern_l=list( nodeType=c(Set=“^(WP|KEGG|BIOCARTA|GO|REACTOME)_“)), replacement_l=list( nodeType=c(Set=”“))) gsub_vertex(g,  subset_attr_l=list(nodeType=c(\"Set\")),  pattern=\"^(WP|KEGG|BIOCARTA|GO|REACTOME)_\",  replacement=\"\") consider new function adjust igraph node colors forms modify fill color attributes color, pie.color, coloredrect.color modify border attributes frame.color, pie.border, coloredrect.border adjust frame.width, pie.lwd, coloredrect.lwd relative . example pie.lwd pie.border defined (transparent), frame.width=0.1, otherwise frame.width=2.","code":"* ``` gsub_vertex(g,    subset_attr=\"nodeType\",    subset_attr_value=\"Set\",    pattern=\"^(WP|KEGG|BIOCARTA|GO|REACTOME)_\",    replacement=\"\") gsub_vertex(g,  subset_attr_l=list(nodeType=c(\"Set\")),  pattern=\"^(WP|KEGG|BIOCARTA|GO|REACTOME)_\",  replacement=\"\")"},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_02jun2023","dir":"","previous_headings":"","what":"02jun2023","title":"TODO","text":"mem_plot_folio() Debug edge cases pathway_column_split=4 match output number column split following hierarchical clustering. Debug edge case enough pathways genes support gene-pathway heatmap workflow. E.g. 1 2 pathways, 1 2 genes. multiEnrichMap() Debug error “multiEnrichMap(): geneHitIM contain 5 rows present geneIM, default values use 1.” Apparently rownames(mem$geneIM) found rownames(geneHitIM). Ideally change geneIMdirection store “+1” instead shows zero NA. Genes shown without associated direction. message describe find missing values user can debug error.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_01jun2023","dir":"","previous_headings":"","what":"01jun2023","title":"TODO","text":"reorder_igraph_nodes() Currently orderByAspect=TRUE order nodes based upon aspect ratio nodeset. Ideal world: nodes sorted something like color, calculate aspect ratio nodes within color. Situation: Assume tall-skinny nodeset, sorted top--bottom different colors. One color 12 entries, nodeset 12 nodes wide, color appears horizontal among nodes. sorting border color, goes top--bottom, visually intuitive. apply_cnet_direction() DONE: changed default col use colors: c(\"blue\", \"grey80\", \"firebrick3\") breaks c(-1, 0, 1). change frame.lwd frame.width frame.lwd widely used. consider backward compatibility: frame.lwd defined igraph object, copy values frame.width, proceed using frame.width operations. mem_legend() DONE: new argument pt.lwd=2 control line width used point borders, useful do_direction=TRUE. argument pt.lwd already gets passed legend() however making formal argument helps make option clear users. Auto-detect whether enable do_direction=TRUE, checking frame.color pie.border defined red/blue colors. Bonus points using colors defined frame.color pie.border, however may risky colors vary based upon fold change value, vary based upon contrasting node pie fill color. jam_igraph() Consider handling V(g)$shape=\"circle\" shape \"jampie\" rendering. Certain older Cnet plot igraph objects appear break default shape=\"circle\" rendering, cryptic error names() defined expected. error appear igraph::plot.igraph(), specific jam_igraph(). Possible workaround sidestep problem re-using shape=\"jampie\" rendering method already implemented, keep borders consistent displaying mixture shape=\"circle\" shape=\"jampie\" nodes. Problem workaround, node pie.color defined used shape=\"jampie\" even user specified shape=\"circle\" (use color). case, shape=\"circle\" node rendered internally shape=\"jampie\" first copy color pie.color nodes; frame.color pie.border; frame.lwd (frame.width) pie.lwd.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_24may2023","dir":"","previous_headings":"","what":"24may2023","title":"TODO","text":"DONE: Fix bug node rendering, caused recent version igraph adding vertex.frame.width (vertex.frame.lwd ugh). NULL missing vertex.frame.width causes error. Ultimately caused default value defined custom function default_igraph_values(), necessary create since igraph export function. FIXED adding vertex.frame.width default values. Longer term fix replace references vertex.frame.lwd vertex.frame.width, precedent set. Fix errors caused \"stringsAsFactors=TRUE\" DONE: rank_mem_clusters() Fix errors caused one (zero) genes. mem_gene_path_heatmap() mem_plot_folio()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_20apr2023","dir":"","previous_headings":"","what":"20apr2023","title":"TODO","text":"mem_enrichment_heatmap() color legend changes: Show actual P-value c(1, 0.05, 0.01, 0.001, 10^-4, etc.) using expression labels, continue using -log10(p) color assignment. Add argument heatmap_legend_param=list(break_dist=1) causes numeric labels evenly spaced, instead labels uneven intervals, often angled lines connecting color legend. Option discrete color legend? .e. Show colors labels, show intervening gradient. difficult show abrupt transitions, e.g. need show c(1, 0.051, 0.05, 0.01) order show 0.051 colorized, 0.05 colorized. smooth gradient actually effective conveying effect without additional labels.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_31mar2023","dir":"","previous_headings":"","what":"31mar2023","title":"TODO","text":"Nodes shape=\"jampie\" frame.lwd=0 still rendering frame color outside inner borders. frame.lwd=0 frame drawn even frame.color defined color. Big picture musing: Consider replacing base R plotting functions corresponding grid functions. vwline R package (P. Murrell) capable drawing internal/external lines. gridGraphics package also provides better methods clipping curved lines edge node border example. Major downside, likely involve rewriting igraph node shape functions corresponding grid format. effectively similar repeating much ggraph, except approach can customized. ggraph approach ggplot2 less untouchable terms providing customization. Ugh. Another option may figure add custom node shapes ggraph, use vwline/gridGraphics rendering. Also need write custom edge bundling function, since ggraph wholly insufficient. Yeah, now.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_26feb2023","dir":"","previous_headings":"","what":"26feb2023","title":"TODO","text":"reorder_igraph_nodes(), reorderIgraphNodes() DONE: method specify specific nodes nodesets reordered motivation allow sorting based upon relative aspect ratio nodes, nodeset whose nodes “tall-skinny” can sorted top--bottom, nodeset whose nodes “short-wide” can sorted left--right. Frankly, sure inconsistency works network layouts, sure top--bottom ideal “tall-skinny” nodesets, visually intuitive. consider new igraph shapes, intended enable inner/outer border, frame.lwd shape.jamcircle.plot() - enable custom frame.lwd shape=“circle” others: square, csquare, rectangle, vrectangle label_communities() generalize method determine keywords represented set pathway names.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_02feb2023","dir":"","previous_headings":"","what":"02feb2023","title":"TODO","text":"Low priority visual enhancement, color Cnet edges Set. Consider coloring Cnet edges categorical color, Set may help clarify node groupings, also reinforcing edges connect particular nodesets. Unclear whether added color confusing beneficial. Referring Neely et al paper ACR Open Rheumatology: “Gene Expression Meta-Analysis Reveals Concordance Gene Activation, Pathway Cell-Type Enrichment Dermatomyositis (DM) Target Tissues” show Cnet-type plot Figure 4A, connections set categorically colored","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_26jan2023","dir":"","previous_headings":"","what":"26jan2023","title":"TODO","text":"Low priority: may useful create vectorized functions: polygon() enable multiple line widths multiple polygons split NA coordinates. enable optional inner outer borders varying widths text(): enable multiple family, srt lines(): enable multiple col, lty, lwd split lines, similar segments() except enabled multiple lines split NA coordinates.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_23jan203","dir":"","previous_headings":"","what":"23jan203","title":"TODO","text":"jam_igraph() Return input igraph object relevant object attributes updated reflect plot parameters. returned object plotted directly without customization. Consider storing/using edge coordinates inside igraph object. However, whenever layout re-calculated, edge coordinates likely become invalid. tricky handle. edge bundling edge clipping integration DONE: scenarios described . Currently, linear edges clipped connected node boundaries. edges slightly curved, start end positions reasonable. edges bundled, especially nodes relatively large, edge curves node different direction linear edge. situation visualization problem : nodes filled transparent color, edges drawn arrows. situation visible problem : edges arrows now partly fully covered node, nodes filled partial fully transparent color, thus showing edge underneath. Proper edge clipping probably done calculating edge node actual center point, clipping edge exits node shape border. Implementation may benefit storing edge coordinates edge attribute, used clipping function present. Absence custom edge coordinates cause clipping function use linear edge coordinates. plot function also use stored edge coordinates opposed calling edge bundling function; alternatively edge bundling function simply re-use existing edge coordinates well.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_18jan2023","dir":"","previous_headings":"","what":"18jan2023","title":"TODO","text":"jam_igraph(), proposed drop-replacement igraph:::plot.igraph(): FIXED: function seem handle edge arrows, shorten edges based upon node sizes. bonus points node/edge legend functions layout defined, xlim/ylim values sometimes match dynamic layout calculated fly. igraph shape “ellipse” DONE: proper “clip” function, order edge arrows appear border node igraph “coloredrectangle” shape DONE: coloredrect.border also capable adjacent lines overlap.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_30nov2022","dir":"","previous_headings":"","what":"30nov2022","title":"TODO","text":"reorder_igraph_nodes() DONE: fancy, also propagate changes label.dist label.degree, created spread_igraph_labels(), since switching coordinates two nodes also switch label.degree label.dist associated coordinates. jam_igraph() shows lag plotting nodes vectorized, check edge bundling slow step, optimize needed. UPDATE: Yes edge bundling step introducing lag; resulting curved lines plotted slowly? Another good reason store edge bundle coordinates igraph. mem_legend() consider using ComplexHeatmap::Legend() consistency future Cnet-Heatmap usage, mechanism really nice. Refactor multiEnrichMap() likely create new function multienrich() multiEnrichMap() can deprecated remain backward compatibility. Avoid pre-calculating Cnet Emap graphs. Counterpoint: call mem_plot_folio() defaults, store results back multienrichResult. Consider multienrichResult object type? hold now list object, proper slot names. custom print()/summary() function display summary info number genes, pathways, etc. Consider multienrichPlot object type? , decision re-use multienrichResult. Benefit simplicity: object feeds downstream plots. negative requires saving separate multienrichResult alternative clustering necessary. Main goal define gene-pathway clustering, re-use clusters subsequent steps without repeat clustering way. one uses custom clustering mem_plot_folio() produce gene-pathway heatmap, use arguments subsequent steps otherwise clusters differ, clearly indicated problem. mem_plot_folio() may likely return multienrichResult updating internally stored data. option use existing results. Write directed vignette showing least two common use cases: Enrichment using clusterProfiler::enricher(), multi-enrichment. Enrichment using Qiagen Ingenuity IPA (outside R) importing files produced using \"Export \" within Ingenuity IPA app. Enrichment using external (non-R) tool, example DAVID. Write vignette focused solely Cnet plot custom layout options. Background: common workflow results Cnet plot summarize findings. Cnet plot often included figure supplementary figure paper, therefore requires manual adjustments increase legibility clarity figure. Adjust individual nodes: nudge_igraph_node(). Note function can called list nodes using nodes_xy, using vectors nodes, x, y. Adjust sets nodes: adjust_cnet_nodeset() - Usually sub-clusters gene nodes, move whole group, adjust intra-group node spacing, rotate group around group center. apply_nodeset_spacing() - Apply minimum spacing nodes, nodeset. adjust_cnet_set_relayout_gene() - Adjust “Set” nodes manually, fix place allow “Gene” nodes move re-layout, usually relayout_with_qfr() Adjust nodes: layout_with_qfr(), layout_with_qfrf(), relayout_with_qfr() - wrappers qgraph::qgraph.layout.fruchtermanreingold() convenient defaults. layout_with_qfr() returns coordinates; layout_with_qfrf() returns layout function user-defined repulse argument; relayout_with_qfr() updates layout -place igraph object, storing graph_attr(g, \"layout\"). rotate_igraph_layout() - rotate layout coordinates user-defined degree angle. spread_igraph_labels() - positions node labels radially around nodes, based upon average incoming edge angle. reorder_igraph_nodes() - within nodeset, reposition nodes order node color, border color, label. nodeset defined set nodes share connections, mostly useful bipartite graphs Cnet plots. function performs node re-ordering nodesets, across whole igraph object. plot jam_igraph() Vectorized plotting multiple shapes used, otherwise igraph::plot() uses () iterate node. Improved pie rendering, also vectorized. Convenience methods adjust node size, node label font size, node label distance Optional shadow text node labels Maintain aspect ratio = 1, nodes symmetrically spaced along axis (defined layout algorithm used.) optionally render node groups using mark.groups Call edge bundling, especially useful bipartite graphs Cnet plots. Optionally draw background grid percent layout units. add dev functions layout_cnet() related iterative layout functions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_23nov2022","dir":"","previous_headings":"","what":"23nov2022","title":"TODO","text":"mechanism store edge coordinates igraph object knowledge, functionality exist igraph, represented ggraph tidygraph objects. However tidygraph may capability supply specific edge coordinates exist, might closest implementing feature. igraph::plot() equipped use edge coordinates ggraph equipped use edge coordinates, creates edge coordinates based upon edge geom_ used. driving use case define edge coordinates handle: edge bundling, procedure done dynamically, computationally expensive large numbers nodes; custom edge pathing, specifically pathway schematics, generated using GraphViz DOT format. DOT format generates stores edge coordinates, find examples R import fully-described DOT file (edge coordinates embedded) also imported edge coordinates. Reasons want edge coordinates upfront: pre-calculate edge bundling, saving time rendering allow custom definition edges, example pathway schematic edges positioned avoid overlaps. calculate better label placement using angle incoming edges, limited linear vector node1 node2. Issues raised storing edge coordinates: Obviously, whenever node layout coordinates changed, edges also need changed. rotate_igraph_layout() rotate nodes edges together. nudge_igraph_node() adjust_cnet_nodeset() must decide whether adjust edges simple scaling, simply invalidate edges, force user re-calculate edge coordinates. useful helper functions validate_edge_coords() - Test whether edge coordinates match node coordinates. , delete replace edges linear equivalent. adjust_edge() - Wrapper function adjust curvature, placement, rotation, edges. called rotating node layout, rotate edges accordingly. bundle_edges() - Wrapper apply bundling one set edges together group. Optionally define specific coordinate(s) bundling loess curve routed. fancy options like routing edges preference vertical/horizontal pathing, slight curvature right angle turns. Often used schematic diagrams. fancy “subway” style options, bundled edges allowed remain visible adjacent edges along path. Edges “snap” nearby edges bundle.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_17nov2022","dir":"","previous_headings":"","what":"17nov2022","title":"TODO","text":"get_cnet_nodeset() function called several times internal functions, therefore much faster currently. Refactor using igraph::as_adjacency_matrix(). Subset rows nodeType=\"Gene\" columns nodeType=\"Set\". able convert rapidly venndir::im2list() pasteByRow() magic, produce nodeset per node (row). Finally, split node names nodeset. node adjustment prevent label overlaps Idea: “stretch” nodeset nodes “right”, fixes left edge nodeset, expands node spacing outward fraction current range nodeset nodes. example, expand right 10%, improve side--side spacing, since label overlaps typically occur nodes y-level. Stretch nodes “left” work , fixes right x-coordinate range, expands left x-coordinate range. Stretch nodes “top”, “bottom” work similarly. Future idea reduce node label overlap treat like biscuit dough rolling pin. Stretch subset nodes direction labels longer overlap. trick stretch nodes away nodesets, cause new overlaps nodes. adjust_cnet_nodeset() Consider option restrict “expand” x- y-axis expansion. Basic idea limit expansion “widen” node spacing, make node spacing “taller”. “widen” option helpful reduce label overlaps nodes directly beside . spread_igraph_labels() ideal case: somehow take account edge bundling calculate input angle node, rather straight vector node node. node_groups - spread labels relative node group centroid, labels cluster nodes spaced . Bonus points taking account overall average input angle nodes group, applying fraction offset along node--group offset. example, node group top right, generally point top-right, fanned slightly bottom-left-node fanned bottom-left, maybe center, slightly bottom-left node. new layout functions specific Cnet plots iterate_qfr_layout() - R code version qgraph::qgraph.layout.fruchtermanreingold() custom addition node “shells”, option call iterate_node_group_distance() iterate_node_group_distance() - R layout intended enforce separation across node groups (defined get_cnet_nodeset()) additional space nodesets layout. layout_cnet() - wrapper function calls rounds layouts. series steps currently best default layout generate readable Cnet plot possible. initial node placement - qfr layout without node/group distance node spacing - qfr node distance node/group spacing - qfr node group distance 4a. imposed nodeset percent spacing group spacing - “fix” node layout per nodeset, layout nodesets detect best rotation place first “Set” node top-left, rotate spread labels, re-order nodes color/border. ideas: Try new bubble_force() calculation minimum distance, instead linear desired distance force. Consider constraining Gene nodes, allow Set nodes move. Goal prevent Set nodes embedded inside Gene nodes due overall net forces. Optional fixed coordinate range, prevent layouts becoming infinitely large, thus endless cycle imposing minimum precent spacing, making range larger, thus making spacing smaller, etc. etc. means force push node/group bounds, gets stopped boundary/boundaries. Hopefully forces applied node1 node2, node1 move, node2 still move albeit half speed. Really pie sky: Use node size shape calculate distance nodes, nearest polygon distance example. Probably also processing non-starter since add overhead calculations, however type thing parallelized iteration. idea efficient split threads iteration. Code Rust, use R package expandr integrate Rust function package via R function. Follow C++ code steps used qgraph:::qgraph_layout_Cpp(). doesn’t seem layout iterations particularly good multi-threading, however. iteration multi-threaded. Threads share one distance matrix, extract values needed. threads share node coordinates, calculate distance needed fly. fast enough, distance matrix (memory allocation) avoided, just math needed. Look Rust libraries geometric calculations. mem_gene_path_heatmap() add option display gene incidence matrix (left annotation) using geneIMdirection colors, represent /. add plot_cnet_heatmaps() make default arguments minimal close default settings possible","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10nov2022","dir":"","previous_headings":"","what":"10nov2022","title":"TODO","text":"adjust_cnet_nodeset() COMPLETE: add minimum percent spacing, similar apply_nodeset_spacing() except operate one nodeset time.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_04nov2022","dir":"","previous_headings":"","what":"04nov2022","title":"TODO","text":"shape.jampie.plot() calls jam_mypie(): drawing borders multiple pie shapes, overlapping border overdrawn, hiding last border drawn. Instead, draw border inside polygon edge, borders adjacent overlapping. Quick survey revealed drop-replacement polygon() functions. Workaround involves sf::st_buffer() calculate buffer inside polygon, creating “donut” filled border color. principle, issue tends occur relatively nodes typical Cnet plots, however substantial performance hit. polygon, convert corresponding sf::st_polygon object Call sf::st_buffer(). Create polygon original border, inner buffer border. split original polygon border, apply color outer inner polygons. way border fill colors drawn together nodes “complete”.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_26oct2022","dir":"","previous_headings":"","what":"26oct2022","title":"TODO","text":"multiEnrichMap() accept p_cutoff deprecate cutoffRowMinP future removal. p_cutoff used package functions, min_count. mem_enrichment_heatmap() problem: style=\"dotplot\" style=\"heatmap\" different visual effects, dotplot de-emphasizes significance favor gene count (point size) - smaller gene count hides significance. pale bivalent colors close white, \"Reds\" color gradient much distinctive. Can try transforming point size, minimum size starts larger? Arguments point_size_min=3 point_size_max=10 may help? Another dramatic option create normal heatmap, just draw points top already-filled cells. Note points inside boxes, instead connected lines center box. test style=\"hybrid\" implement .","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_13oct2022","dir":"","previous_headings":"","what":"13oct2022","title":"TODO","text":"S4 objects? mem: Idea one object type handle output multiEnrichMap() benefit mostly default behaviors things like print() also clarity workflow. mem object can clear input functions. cnet: inherits igraph extends assumptions, mainly clarity input argument functions mem_gene_path_heatmap() option display dot plot format top heatmaps, equivalent calling mem_enrichment_heatmap(). Benefit indicate direction (color) number genes (size) addition P-value (intensity). fix reorderIgraphNodes() DONE: add “frame.color”: sortAttributes=c(\"pie.color\", \"pie.color.length\", \"coloredrect.color\", \"color\", \"pie.border\", \"frame.color\", \"label\", \"name\") future: make sort intelligent, uses appropriate color based upon node shape sort. shape=\"pie\": use “pie.color”, “pie.border”, “frame.color”, “label”, “name” shape=\"coloredrect\": use “coloredrect.color”, “coloredrect.border”, “frame.color”, “label”, “name” others assumed shape=\"circle\" similar: use “color”, “frame.color” ignore “pie.color”, “pie.border”, “coloredrect.color”, “coloredrect.border”, “label”, “name” DONE: Include gene direction workflow: DONE: Add geneIMdirection mem object. Requires geneHitIM input multiEnrichMap(). Alternate backwards compatibility function add geneIMdirection mem object, /cnet igraph object. DONE: memIM2cnet() optionally use enrichIMdirection apply border color. DONE: mem2cnet() function, minor variation extension memIM2cnet() uses memIM portion data. jam_igraph() recognize lwd plotting nodes. change diverges default behavior igraph uses par(\"lwd\") global adjustment lines plotting nodes, therefore allow nodes different line widths. DONE: Outline Cnet gene nodes direction. Gene-Path heatmap rows optionally indicate direction, possibly another stripe using geneIMdirection. multiEnrichMap() call mem2cnet() - just avoid step altogether since cnet process better done mem_plot_folio() consider removing enrichMap cnet steps altogether.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_26sep2022","dir":"","previous_headings":"","what":"26sep2022","title":"TODO","text":"mem_plot_folio() FIXED: mem_enrichment_heatmap() honor do_plot=FALSE. mem_enrichment_heatmap() DONE: add argument cluster_rows allow cluster_rows=FALSE. DONE manual plot calls: one goal draw heatmap using order gene-pathway heatmap clustering. Future idea: allow plotting data using order gene-pathway heatmap. process require running gene-pathway clustering first, determining column order, using order rows heatmap.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_31aug2022","dir":"","previous_headings":"","what":"31aug2022","title":"TODO","text":"Now jam_igraph() node shapes \"jampie\" render pie.border frame.color, can indicate direction change gene, context enrichment test, changes made workflow: Consider adding pie.lwd recognized attributes shape.jampie.plot(), confirm argument can used rendering \"jampie\" node shapes. Currently line width can adjusted par(\"lwd\") global setting. default frame.color (vertex.frame.color) probably set NA \"transparent\" frame color visible pie nodes. shows small white line now, visible previously. reorderIgraphNodes() include pie.border frame.color sensible default locations, nodes also sorted values relevant, without user add columns. New function populate frame.color pie.border Cnet plots. pie one value, apply color frame.color pie multiple values, different directions, apply colors pie.border pie multiple values, direction, apply colors frame.color absence directional data, set frame.color default, set pie.border \"transparent\" NA. Need include gene direction change workflow: easy method include direction change multiEnrichMap() workflow, example argument geneHitList currently uses character vector, accept integer vector direction genes stored character labels, used venndir signed input lists. gene direction available, frame.color /pie.border colors defined. mem_gene_path_heatmap() option represent direction change gene_im incidence matrix.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"aug2022","dir":"","previous_headings":"","what":"aug2022","title":"TODO","text":"Edge bundling makes assumptions bipartite graphs (cnet) difficult use normal graphs. edge_bundle_nodegroups() probably needs subset edges involved nodegroup bundling edges connected nodes. Currently, nodes assumed share connections, effect occur edges ends edge contained nodegroup entries. consider node attribute “nodegroup”. consider edge attribute \"edgegroup\", probably optimal approach edge bundling, apart implementing another technique similar force-directed, hierarchically-defined, density-directed edge bundling. consider option specify “midpoint” nodegroup, allow control spline curvature. Bonus points allowing multiple points order, influence path. jam_igraph() fancy effect: allow edge colors multiple values, interpolate color along edge. bundled edges, make gradient equal number line segments. straight edges, break detail number pieces. detail argument also used edge_bundle_*() functions. subset igraph object nodes, added benefit graph_attr(g, \"layout\") also subset, present. odd default igraph::subgraph() function subset graph, leaving layout inevitably causes error.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_13jul2022","dir":"","previous_headings":"","what":"13jul2022","title":"TODO","text":"mem_gene_pathway_heatmap() useful option subset enrichments, option likely useful mem_plot_folio(), mem_enrichment_heatmap(), effect cascade subsequent functions. new function idea? subset_mem() useful accomplish item , subset enrichments prior mem_plot_folio() related functions. challenge subsetting enrichIM also update corresponding memIM data. Data updated: geneIM, geneIMcolors, geneIMdirection - simple subset colnames enrichIM, enrichIMcolors, enrichIMgeneCount - simple subset colnames memIM - re-create updating geneIM enrichList - simple subset name Others necessary mem_plot_folio(): multiEnrichMap, multiCnetPlot re-created using methods multiEnrichMap(). fair, objects useful anymore, since mem_plot_folio() generally preferred.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_05jul2022","dir":"","previous_headings":"","what":"05jul2022","title":"TODO","text":"mem_gene_pathway_heatmap() supplied custom column_split throws error cluster_columns=TRUE. internally uses amap::hcluster() generate dendrogram/hclust using split dendrogram together allowed ComplexHeatmap::Heatmap() clustering also uses incidence matrix combined pathway enrichment annotation displayed along top, values weighted pathway_column_weight. proper solution provide custom function cluster_columns internally combined incidence matrix enrichment matrix data together prior clustering. function receives numeric matrix proper colnames, work. COMPLETE: mem_plot_folio() argument gene_row_title=NULL passed mem_gene_pathway_heatmap() therefore using default row_title=letters.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_23mar2022-issue-7-passing-arguments-through--in-mem_plot_folio","dir":"","previous_headings":"","what":"23mar2022 issue #7 passing arguments through … in mem_plot_folio()","title":"TODO","text":"User reported error calling mem_plot_folio(mem, node_factor=5, label_factor=1.5) mem_plot_folio() passing ... ComplexHeatmap::Heatmap() accept ... throws error receiving extra arguments. need limit ... arguments accepted Heatmap(). feel like R package function handle scenario, can avoid writing .call(Heatmap, custom_args).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_04feb2022","dir":"","previous_headings":"","what":"04feb2022","title":"TODO","text":"Workflow starts pathway-gene incidence matrix upfront, bypassing multiEnrichMap() workflow altogether. memIM2cnet() convert pathway--gene incidence matrix Cnet igraph. Requires geneIM enrichment--gene incidence matrix. driving example, enrichment represent disease subgroup, full set differential genes associated subgroup. Requires enrichIM contains enrichment--pathway whose values P-values. data supplied, use 0.001 default. think values used optional gradient color pathway nodes. Optional geneIMcolors geneIM except cells contain colors use gene. Currently function fill colors, best method use colorjam::matrix2heatColors()","code":"geneIMcolors <- colorjam::matrix2heatColors(x=geneIM,    colorV=colorV)"},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_03feb2022","dir":"","previous_headings":"","what":"03feb2022","title":"TODO","text":"option assign pathways “functional themes” based upon presentation Adeline Chin Dr. Hanna Kim’ group. step may “collapse” multiple pathways together, similar grouping functional groups: union genes, lowest enrichment P-value.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_25jan2021","dir":"","previous_headings":"","what":"25jan2021","title":"TODO","text":"heatmap_row_order(), heatmap_column_order() return flat vector row_split column_split, respectively. Currently data returned list one-length vectors. Consider moving jamba package, case function needs re-used, require loading full multienrichjam package, requires things like igraph, clusterProfiler, qgraph, DOSE, matrixStats. Import jamba::heatmap_row_order() jamba::heatmap_column_order() ensure functions packages calling function succeed without error. document describes plans enhancements multienrichjam R package.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_05nov2021","dir":"","previous_headings":"","what":"05nov2021","title":"TODO","text":"Now directional z-score can also associated enrichment P-values, heatmaps might need use bivariate color scale, indicate enrichment directionality. See “stevens.bluered”. example mem_enrichment_heatmap() colors nodes enrichment P-value, intense significant enrichment. z-score direction used apply red “activated” blue “inhibited”. However, pathways z-score, z-score threshold colored red default. use neutral color.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_04nov2021","dir":"","previous_headings":"","what":"04nov2021","title":"TODO","text":"IPA “Upstream Regulators” sometimes offers direction implied activation z-score. Design idea implement directionality can included downstream analyses. mem_enrichment_heatmap() - currently shades -log10(pvalue) however directionality, signed + activated, - inhibited. heatmap color scale use blue-white-red color gradient. mem$enrichIMdirection contains matrix direction, default 1 means direction. multiEnrichMap() filters topEnrichN entries enrichment. might useful retain rank number enrichment, review setting different topEnrichN threshold. mem$enrichIMgeneCount contains matrix gene counts mem$enrichIMrank contains matrix pathway rank (filtering gene count)","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_01nov2021","dir":"","previous_headings":"","what":"01nov2021","title":"TODO","text":"COMPLETE: mem_enrichment_heatmap() - heatmap circles legend circles size - fixed absolute size. COMPLETE: Optionally label heatmap cell number genes visual reinforcement. COMPLETE: 3 enrichments, color legend gene-pathway heatmap becomes unwieldy - taking whole figure. Optionally (default) hide color legend gene-pathway heatmap. COMPLETE: gene-pathway heatmap use_raster=TRUE causes artifacts output, disabled default. future, debug things go wrong. think bug caused rasterization done underlying numbers color ramp applied, case problem solved colorize_by_gene=TRUE since categorical values assigned numbers proper color gradient.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_20jul2021","dir":"","previous_headings":"","what":"20jul2021","title":"TODO","text":"Replace multiEnrichMap() multienrichjam() simplify arguments: p_cutoff min_gene_count top_enrich_n colnames: id, name, description, pvalue, gene color_sub Port mem_enrichment_heatmap() argument colorize_by_gene=TRUE use ComplexHeatmap::Heatmap() instead jamba::imageByColors() consistency, also can support style=\"dotplot\".","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_19jul2021","dir":"","previous_headings":"","what":"19jul2021","title":"TODO","text":"jam_igraph() rescale=TRUE also scale igraph vertex size igraph label size according new axis ranges. Debug jam_igraph() vertex.size defined alongside V(g)$size, node_factor. appears apply size properly. COMPLETE: mem_enrichment_heatmap() new option dot plot format, based upon enrichplot::dotplot() sizes dot number genes present.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_24jun2021","dir":"","previous_headings":"","what":"24jun2021","title":"TODO","text":"multiEnrichMap() remove default topEnrichSources topEnrichSourceSubset throw errors using MSigDB data. topEnrichBySource() topEnrichListBySource() able accept enrichResult input, return enrichResult data.frame understandably lossy. need understand proper method creating subset enrichList object, including internal data. Streamline topEnrichListBySource() workflow.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_21jun2021","dir":"","previous_headings":"","what":"21jun2021","title":"TODO","text":"COMPLETE: Allow rotating gene-pathway incidence matrix using mem_gene_path_heatmap(), pathway names rows. Add test data object mem convenient function examples, testthis test suite.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"smaller-usability-items","dir":"","previous_headings":"","what":"Smaller usability items","title":"TODO","text":"edge_bundling=“connections” also allow render_groups=TRUE work, returning \"nodegroups\" required step. probably filter singlet nodes default, since typical use case “nodeset--node” Cnet plots. Main use case Cnet plot, edge bundling connected nodes allow drawing optional border around group nodes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"complete-10apr2021-implement-edge-bundling-techniques","dir":"","previous_headings":"","what":"COMPLETE: 10apr2021: implement edge bundling techniques","title":"TODO","text":"Priority: high Status: Implemented, early active testing usability functionality “connections” - Cnet edge bundles - special case nodeset--node edge bundling “nodegroups”: Node group bundles - general case nodeset--nodeset edge bundling Useful improve readability/aesthetics collapsed Cnet plots, especially Cnet plots many gene nodes difficult tell pathway clusters connected gene.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10apr2021-enhancements-to-jam_igraph-must-be-done-inside-jam_plot_igraph","dir":"","previous_headings":"","what":"10apr2021: enhancements to jam_igraph() (must be done inside jam_plot_igraph())","title":"TODO","text":"Consider silently returning igraph object plotted vertex, edge, graph attributes updated values used runtime. example, user overrides attributes, attributes present object returned, next iteration someone just call jam_igraph() without custom attributes produce plot . See https://igraph.org/r/doc/plot.common.html igraph::igraph_options()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10apr2021-implement-edge-bundling-in-jam_igraph-and-jam_plot_igraph","dir":"","previous_headings":"","what":"10apr2021: implement edge bundling in jam_igraph() and jam_plot_igraph()","title":"TODO","text":"Priority: high Status: Implemented task involves making edge bundling accessible simple option plotting, prevent run 3 4 functions: jam_igraph() hidden edges bundle_node_edges() display edges top nodes (optional) jam_igraph() hidden edges, nodes solid white color fully cover edges. jam_igraph() hidden edges, display nodes top bundled edges allowing nodes alpha transparency Note package based ggraph implements edge bundling - jam_ggraph() going future, maybe implement edge bundling using similar approach used R package. https://github.com/schochastics/edgebundle","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10apr2021-add-plot_cnet_heatmaps-to-multienrichjam","dir":"","previous_headings":"","what":"10apr2021: add plot_cnet_heatmaps() to multienrichjam","title":"TODO","text":"Priority: high plot_cnet_heatmaps() development, arranges expression heatmaps around central Cnet plot, using genes cnet cluster. intended used Cnet clusters collapse_mem_clusters(), -product mem_plot_folio(). figure seems useful integrates expression changes alongside gene-pathway connections. multienrichment workflow likely become: Prepare enrichment data multiEnrichMap() mem_plot_folio() plot_cnet_heatmap()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10apr2021-enable-plotting-node-community-data-in-jam_igraph","dir":"","previous_headings":"","what":"10apr2021: enable plotting node community data in jam_igraph()","title":"TODO","text":"Priority: low Analogous igraph:::plot.communities() mark.groups edge bundling, step optionally display boundaries around node group. Value reinforcing node groups boundary. testing, boundary actually made plots look complex. simple plots, seem necessary since nodes already well-spaced.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10apr2021-include-genecount-matrix-output-from-multienrichmap","dir":"","previous_headings":"","what":"10apr2021: include geneCount matrix output from multiEnrichMap()","title":"TODO","text":"Priority: medium Purpose complement “enrichIM” matrix, P-values set. However “dysregulated pathways” may also required N number genes, yet data easily available. Rows pathways, columns enrichments, values number genes involved enrichment. Consider matrix whose cells contain delimited gene symbols Useful apply filtering matrix-level pathways meet enrichment P-value gene count thresholds.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_2020-apply-node-color-order-based-upon-shape-of-node-cluster","dir":"","previous_headings":"","what":"2020: apply node color order based upon shape of node cluster","title":"TODO","text":"Priority: medium reorderIgraphNodes() cluster nodes short-wide, order left--right cluster nodes tall-skinny, order top--bottom else sorted left--right (user-defined default order) visually confusing tall-skinny nodes sorted left--right Useful automate ordering node colors","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_2020-apply-subsetsets-in-multienrichmap","dir":"","previous_headings":"","what":"2020: apply subsetSets in multiEnrichMap()","title":"TODO","text":"Priority: low apparently never implemented? User-defined subset pathways/sets include multiEnrichMap(), alternative using topEnrichBySource(). Users can currently perform subset step running multiEnrichMap().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"complete-apply-min_count-in-multienrichmap","dir":"","previous_headings":"","what":"COMPLETE: Apply min_count in multiEnrichMap()","title":"TODO","text":"Currently multiEnrichMap() filter number genes involved enrichment, filters enrichment P-value. New argument min_count applied topEnrichN used, nothing else downstream aware filtering min_count. corresponding argument mem_plot_folio() min_set_ct_each, requires set (pathway) contain least many entries least one enrichment result also meets p_cutoff criteria enrichment P-value.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_2020-optional-highlight-genes","dir":"","previous_headings":"","what":"2020: Optional highlight genes","title":"TODO","text":"Priority: low mem_plot_folio() subsequent plots, optional argument highlight_genes effectively hide gene labels except highlight_genes – help especially crowded plots. Option 1: User-supplied genes Option 2: Genes defined one pathways/sets highlight Implement wrapper jam_igraph() hide/display relevant node labels plot_cnet_heatmap() label heatmap rows using anno_mark() Useful Cnet plots many genes label, allows subset genes highlighted. become high priority manuscript decides use technique.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"consider-a-strict-output-format-for-mem_plot_folio","dir":"","previous_headings":"","what":"Consider a strict output format for mem_plot_folio()","title":"TODO","text":"Priority: medium Goal run mem_plot_folio() able plot component separately. help keep plots sync settings used. Benefit: Always ability see exact gene-pathway incidence matrix heatmap, clustering, used collapsed Cnet plots. Design idea: List format Named type output: enrichment P-values gene-pathway heatmap Heatmap object gene clusters pathway clusters filter/cluster settings used collapsed cnet igraphs labeling option implemented cnet exemplar igraphs 1 exemplar per pathway cluster 2 exemplars per pathway cluster 3 exemplars per pathway cluster cnet cluster igraph cluster 1 cnet igraph cluster 2 cnet igraph cluster 3 cnet igraph … type output contains list relevant components","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10apr2021-make-plot-commands-word-for-ggraph","dir":"","previous_headings":"","what":"10apr2021: make plot commands word for ggraph","title":"TODO","text":"Priority: low Goal use ggraph ggplot2-type plotting instead using base R igraph plots. jam_ggraph() ? Test scatterpie R package implements pie node shapes use ggraph. Unsure data content requirement.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"id_10apr2021-document-examples-for-reorderigraphnotes","dir":"","previous_headings":"","what":"10apr2021: document examples for reorderIgraphNotes()","title":"TODO","text":"Examples show specify color order, change order necessary.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/TODO.html","id":"complete-2020-improve-reorderigraphnotes","dir":"","previous_headings":"","what":"COMPLETE: 2020: Improve reorderIgraphNotes()","title":"TODO","text":"reorderIgraphNodes() encounters attributes multiple colors per node, \"pie.colors\" \"coloredrect.colors\", calls avg_colors_by_list() generate one blended color per node, sorts colors using sort_colors(). However, color order ultimately match order color legend, plots heatmaps. Future idea convert node attributes multiple colors per node data.frame color separate column. convert column factor whose levels match color order colorV (argument multiEnrichMap()). end result sort nodes consistent order colors. Note process assumes node colors limited set, ideally match colorV. Therefore color gradient applied nodes nodeType=\"gene\", process work.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-0-0-100-900","dir":"Changelog","previous_headings":"","what":"Updates","title":"multienrichjam 0.0.100.900","text":"ShinyCat Cnet Adjustment Tool Now highlights edges selected node. Mem, Mem-class methods fully documented. Fixed warnings jampie,coloredrectangle igraph shape rendering. Moved dependency alphahull Enhances","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-100-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.100.900","text":"highlight_edges_by_node() Given one nodes, colors expands width edges. Optionally de-emphasizes non-highlighted edges alpha transparency. list_to_Mem(), Mem_to_list() interconversion S4 ‘Mem’ object. ashape() internal functions alpha hull calculation.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-0-0-99-900","dir":"Changelog","previous_headings":"","what":"Updates","title":"multienrichjam 0.0.99.900","text":"launch_shinycat() Added buttom “Download .RData” save re-use. Added docs describing save environment. Node label factors applied Gene Set nodes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0098900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.98.900","title":"multienrichjam 0.0.98.900","text":"Added dependencies: shiny, shinydashboard","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-r-shiny-app-for-cnet-plot-adjustments-0-0-98-900","dir":"Changelog","previous_headings":"","what":"New R-shiny app for Cnet plot adjustments","title":"multienrichjam 0.0.98.900","text":"R-shiny Cnet Adjustment Tool (ShinyCat) launch_shinycat() takes g input, returns environment containing ‘adj_cnet’ adjusted igraph object. Intended make life easier making zillion tiny adjustments Cnet plot final figure. Nodeset adjustments: x,y coordinates; percent spacing, rotation. Node adjustments: x,y coordinates; label angle; label distance.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-98-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.98.900","text":"bulk_cnet_adjustments() takes data.frame input nodesets, nodes, apply adjustments just one function call.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-to-existing-functions-0-0-98-900","dir":"Changelog","previous_headings":"","what":"updates to existing functions","title":"multienrichjam 0.0.98.900","text":"jam_plot_igraph() (internal function) Removed rm(x, y) remove warning y exist. Call jamba::shadowText() directly rather overriding text(). New default mark.expand=NULL uses half median vertex.size. make_point_hull() Accepts lwd=0 hides border. jam_igraph() New default: mark.expand=NULL uses half median vertex.size, calculated within jam_plot_igraph(). summarize_node_spacing() Updated help docs, output data format return list matrices. Default uses node groups (Cnet nodesets), named nodeset. apply_nodeset_spacing() now calls summarize_node_spacing()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"in-progress-0-0-98-900","dir":"Changelog","previous_headings":"","what":"In progress","title":"multienrichjam 0.0.98.900","text":"S4 ‘Mem’ object implementation progress, helper functions included future use.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-to-existing-functions-0-0-97-900","dir":"Changelog","previous_headings":"","what":"updates to existing functions","title":"multienrichjam 0.0.97.900","text":"importIPAenrichment() Fixed error importing IPA data analysis results included two gene columns, “Causal Networks”. Added documentation revert_ipa_xref=TRUE argument default, suggesting revert_ipa_xref=FALSE microarray platforms example.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0096900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.96.900","title":"multienrichjam 0.0.96.900","text":"Quick update restore list2graph() removed non-exported remote function. Added list2graph_ggt().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"s4-objects-0-0-95-900","dir":"Changelog","previous_headings":"","what":"S4 objects","title":"multienrichjam 0.0.95.900","text":"Mem - Multi-Enrichment Still todo: Convert functions import/export Mem","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-95-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.95.900","text":"mem_plot_folio() fixed exemplar Cnet plots ignoring byCols choosing exemplar pathway display.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-95-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.95.900","text":"multiEnrichMap() Added \"thresholds\" list output. importIPAenrichment() gracefully handles optional data “Networks” return traditional gene symbols, collection IPA entries clearly associated cross-reference information. result, columns skipped.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-94-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.94.900","text":"multiEnrichMap() Silenced unintended verbose output. fixSetLabels() Added extensive corrections common MSigDB abbreviations. Many probably moved file improved structure, function arguments. now solves problem.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-93-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.93.900","text":"multiEnrichMap() New default min_count=3 instead previous min_count=1. Updated mem$colnames include detected colnames, adding countColname, directionColname, pathGenes, geneHits. order now matches function argument order. Added new component mem$thresholds cutoffRowMinP, min_count, overlapThreshold (may necessary), topEnrichSource* arguments, sufficient reproduce method. mem_gene_path_heatmap() Changed ceiling auto-detected pathway clusters 8, 10. Added tests, including much multiEnrichMap()","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-92-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.92.900","text":"enrichList2df() Fixed bug occurred enrichList length=1, caused gene/pathway sync. bug appeared caused single-enrichment input, must relatively recent. Added numerous testthat entries cover bug, various permutations. rapidly add test cases cover various core behaviors expectations multiEnrichMap().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-92-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.92.900","text":"moved enrichList2DF() .R file.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-91-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.91.900","text":"Moved .onLoad() zzz.R Moved fixSetLabels() R file convenience. fixSetLabels() default argument change width=40, previously 25. arguments words_from,words_to edited add commonly observed patterns. new arguments add_from,add_to user-defined replacements, use addition default replacements word_from,word_to. new argument do_abbreviations=TRUE help shorten common phrass new arguments abbrev_from,abbrev_to used do_abbreviations=TRUE. opinionated changes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-90-950","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.90.950","text":"make_point_hull() fixed typo specific “right” alignment.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0090900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.90.900","title":"multienrichjam 0.0.90.900","text":"Added shadowtext Suggests, optionally adds contrast mem_enrichment_heatmap() using show_enrich.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-90-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.90.900","text":"mem_plot_folio() help docs changed use correct name mem_gene_path_heatmap() incorrect mem_gene_pathway_heatmap(). column_anno_padding,row_anno_padding now properly applied creating heatmap, reverted previous state returning data. Enrichment Heatmap default now uses style=\"dotplot_inverted\", previous behavior use style=\"dotplot\". mem_gene_path_heatmap() Fixed visual bug caption labels indicated “genes” twice, instead “genes” “pathways”. rotate_heatmap=TRUE, arguments consistently flipped row column, help docs updated explicit arguments flipped, two . heatmap caption uses consistent order describe rows, columns, reverses order rotate_heatmap=TRUE. geneIM legend label now uses title case consistency: “Gene Hit Enrichment”, rather “enrichments per gene” correct wording. mem_enrichment_heatmap() Renamed previously unused arg show show_enrich passed cleanly via ... using mem_plot_folio(), added help doc. adds optional label -log10P, z-score, /number genes. importIPAenrichment() Fixed issue \"Analysis Ready Molecules\" proper header column pattern matching, causing imports skip applying user-defined gene symbol.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-89-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.89.900","text":"Added %>% imported functions, dplyr. mem_enrichment_heatmap() New argument cell_size default NULL, option specify exact cell size used heatmap. driving use case define perfectly square heatmap cells \"dotplot_inverted\" \"dotplot\" circles perfectly centered inside square cells. forces output figure tall wide enough accomodate resulting figure, needs user math. Implemented user suggestion, works looks great. just requires upfront work create figure large enough canvas. mem_plot_folio() Added proper pathway cluster labels mem_enrichment_heatmap() output. Finally fixed pathway order mem_enrichment_heatmap() identical mem_gene_path_heatmap() without minor re-ordering caused default ComplexHeatmap behavior. Now two formats identical order direct comparison. Cleaned help documentation little bit.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-88-950","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.88.950","text":"mem_enrichment_heatmap() New option style=\"dotplot_inverted\" due cool recent paper using style. like much, new default. Much easier see color size circle, especially cells small circles. Jang et al, Waggoner lab, Nature Genetics 2024: https://doi.org/10.1038/s41588-024-01880-x cell_fun_bivariate() New argument invert=FALSE control whether draw colored circles, colored cells white circles top (invert=TRUE).","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-88-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.88.900","text":"mem_plot_folio() Moved workhorse function .R file. Changed default: verbose=FALSE. New argument rotate_heatmap handle workflow properly. New arguments row_anno_padding, column_anno_padding control padding heatmap row column annotations, respectively. mem_gene_path_heatmap() caption displayed ComplexHeatmap Legend, therefore using consistent font alignment color legends, rather tucked corner sometimes overlapped heatmap labels. Caption now displays rows/columns counts first. Remaining values user-friendly. Default caption font size 10 instead 6, consistent color legend text. Argument seed utilized. make_point_hull() New argument default label_preset=NULL. Argument label_preset properly recognized. Overall: Functions argument seed now properly ignore seed NULL, thereby allowing random behavior preferred.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0087900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.87.900","title":"multienrichjam 0.0.87.900","text":"next update likely use Mem S4 object instead list, although plan allow convenient conversion list legacy compatibility. S4 functions methods convenient long term, Bioconductor-compliant.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-87-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.87.900","text":"add_pathway_direction() Adds column enrichResult indicating directionality, using IPA Activation z-score calculation (refs help doc). requires gene_hits numeric vector named gene symbol.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-87-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.87.900","text":"topEnrichBySource(), affecting topEnrichListBySource(), multiEnrichMap() now applies logic descriptionGrep, nameGrep, subsetSets using logic, combination matching results retained. Help docs updated.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"other-changes-0-0-87-900","dir":"Changelog","previous_headings":"","what":"other changes","title":"multienrichjam 0.0.87.900","text":".onLoad() Minor change, now checks whether new igraph shapes already exist adding, mostly useful reloading package live R session, rare.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-86-900","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"multienrichjam 0.0.86.900","text":"topEnrichBySource(), topEnrichListBySource(), multiEnrichMap() Weird rare scenario appears limited custom enrichment data input data contains multiple P-value columns, none match defaults argument sortColnames topEnrichBySource(). First bug: sortColnames argument evaluated find_colname(), intended match patterns actual data. decision probably avoid handling optional prefix \"-\" reverse sort colname. Second bug: sortColnames really use pvalueColname reverse order countColname. End result: sortColname matched existing columns, data still sorted using jamba::mixedSortDF(). found matching colnames default sorted starting first column. incorrect, caused bug. New argument default: sortColname=NULL use pvalueColname reverse order countColname. Alternatively sortColname=FALSE causes sort performed, using data order provided. Finally, sortColname defined, values match existing colnames, sort performed.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-86-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.86.900","text":"multiEnrichMap() Minor change silence text output enrichIM entirely NA, can occur input data contain significantly enriched pathway results. outcome causes stop() otherwise print output unless verbose=TRUE. importIPAenrichment() topEnrichBySource() now use jamba::gsubs() instead “temporary” internal function name. gsubs() removed, renamed gsubs_remove() favor jamba::gsubs().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"other-changes-0-0-86-900","dir":"Changelog","previous_headings":"","what":"other changes","title":"multienrichjam 0.0.86.900","text":"Two functions longer imported, instead called using package prefix. affects grid_with_title() longer used default. ComplexHeatmap::draw() jamba::nameVector()","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-85-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.85.900","text":"importIPAenrichment() New argument revert_ipa_xref=TRUE changes default behavior (better) resulting gene symbols associated IPA pathway enrichment match input gene symbols, instead using customized IPA symbols. situation ideal solution. Ultimately, IPA provides results completely represent input data. two genes combined one entity IPA, retain one gene symbol \"Analysis Ready Molecules\", recorded association entities combined. Sometimes combined symbol \"HSPA1A/HSPA1B\" can separated… indicate symbol(s) user provided, record one. entities called \"NBPF10 (includes others)\" appears include 'NBPF10\" \"NBPF19\", possibly others.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-84-900","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"multienrichjam 0.0.84.900","text":"make_point_hull() Finally “fixed” full bug, sometimes causing point hull fail. Sometimes alphahull::ahull() return weird results small alpha values: individual points, segments, multiple disconnected polygons. Now make_point_hull() calls get_hull_data() performs additional validation checks: Confirms actually polygon; confirms point edges used exactly twice; confirms edge points used continuous polygon, two separate polygons. default value max_iterations=100 vastly increased, since many weird cases caused coordinate ranges orders magnitude higher alpha=0.1 10 iterations enough avoid weird situations. Also make_point_hull() find suitable solution max_iterations tries, returns NULL instead proceeding process inadequate/empty polygon coordinate data. Hopefully allow weird cases skipped rather throwing obscure error.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-83-900","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"multienrichjam 0.0.83.900","text":"make_point_hull() One obscure bugs, caused creating point hull two points, two points apparently resided exactly wrong angle. apparently occurred two points within 3 degrees “evil angle” - resolved points rotated 3 degrees “evil angle”. Typically, point hull possible two points, since create polygon, workaround add third point (recycling first point) adding amount noise create polygon. Except reason even rnorm() adding enough right kind noise. random value ever exactly, reproducible, reside line. must rounding takes place internal function. Nonetheless, “fix” purpose add one dummy point. list2im() Another bizarre “bug” caused unconfirmed R function appears change options(\"warn\") options(\"warn\"=2) change back! Probably related RMarkdown knitting, since seems occur knitting interrupted. fair, warnings resolved Jam packages, ’s true. impose error. Filed : “Things worked just two minutes ago, now cause error reason.” Added workaround random painful issue options(\"warn\"=2) forces warnings errors. idea made setting, caused list2im() fail due implicit conversion empty whatever datatype defined input matrix. future function may change, now change keeps working.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0082900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.82.900","title":"multienrichjam 0.0.82.900","text":"multiEnrichMap() now geneHitIM geneHitList equivalent input, either can provided. incidence matrix values c(0, 1) stored geneIM, numeric values values stored geneIMdirection. (yet) verify genes involved enrichment also present geneIM geneIMdirection matrices. mem_gene_path_heatmap() New argument gene_annotations allows display mem$geneIM (gene hits per enrichment) mem$geneIMdirection (gene direction change) annotations alongside gene axis heatmap. default, mem$geneIMdirection available, shown, otherwise geneIM shown. can now hidden. New argument simple_anno_size control size heatmap annotations. New argument annotation_suffix add optional suffix gene annotation labels, helpful indicate unit. example im data default suffix \"hit\", direction uses \"dir\". mem$geneIMdirection present, now used default clustering. Values multiplied mem$geneIM NA values mem$geneIMdirection replaced 1 order maintain mem$geneIM value. considered unknown direction sense.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0081900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.81.900","title":"multienrichjam 0.0.81.900","text":"jam_igraph() jam_igraph_arrows() fixed bug plotting directed edges arrows, arrow head width (h.lwd) properly expanded number arrows, causing arrow heads appear “twisted”. changed default obscure option sh.adj=1 draws straight edges base arrow head, arrow tip. allows arrow tip point without needing equal edge line width.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-80-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.80.900","text":"make_point_hull() Silenced default verbose output.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-79-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.79.900","text":"spread_igraph_labels() argument nodeSortBy=c(\"x\", \"y\") changed nodeSortBy=c(\"x\", \"-y\"), consistent top--bottom sorting y-axis. change indirectly affects mem_plot_folio() default output.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-78-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.78.900","text":"mem_enrichment_heatmap() bivariate color scale pale lower significance P-values, colors encoded higher color saturation low end. intermediate colors improved, see colorRamp2D() changes . colorRamp2D() blue-yellow color blending default circlize::colorRamp2() still producing grey, despite using “LAB” (“LUV”, “XYZ”) color models. usually symptom using RGB color space, blending “blue” “red/green” (yellow) produces “red/green/blue” (grey), usually seen using “LUV” 360-degree hue radial color wheel. probably still converted RGB blending, back LUV. default argument changed use_model=\"sRGB\" produces somewhat green color blending blue gold. red-gold blending improved well, producing saturated orange color. End result: intermediate directional colors recognizable partly (orange) partly (green). TODO: color legend needs x-axis labels, showing z-score values. make_legend_bivariate()","code":"* finally displays the x-axis label and numerical units, by default `\"z-score\"`."},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-78-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.78.900","text":"reorder_igraph_nodes(),reorderIgraphNodes() error occurred attributes list form entirely NA, one section use unlist() properly. bug fixed.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-77-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.77.900","text":"mem_plot_folio() mem_enrichment_heatmap() threw errors using pathway_column_split one column (one enrichment), error corrected. , passing cluster_rows function caused resulting Heatmap object store obj dendrogram/hclust, instead stored function. error also corrected.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-76-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.76.900","text":"theme update “Customizing mark.groups labeling”. Useful jam_igraph() supplying list node groups communities via mark.groups, labels defined names(mark.groups). labels automatically placed outside mark polygon, can adjusted size mark.cex, position mark.x.nudge, mark.y.nudge. make_point_hull() new arguments: label.cex, label.x.nudge, label.y.nudge customize label font size, label placement, label provided. jam_igraph() new arguments: mark.cex passed make_point_hull() label.cex mark.x.nudge passed make_point_hull() label.x.nudge mark.y.nudge passed make_point_hull() label.y.nudge","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"major-changes-to-existing-functions-0-0-76-900","dir":"Changelog","previous_headings":"","what":"major changes to existing functions","title":"multienrichjam 0.0.76.900","text":"mem_plot_folio() New default creates gene-pathway incidence matrix heatmap data first, serves basis plots. Impact mem_gene_path_heatmap(), now inherits clustering defined using gene-pathway incidence matrix called mem_plot_folio(). change primary motivation update, enrichment heatmap clustering informed driven gene content, longer reflects enrichment P-values.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"other-changes-to-existing-functions-0-0-76-900","dir":"Changelog","previous_headings":"","what":"other changes to existing functions","title":"multienrichjam 0.0.76.900","text":"mem_enrichment_heatmap() default point_size_min=1 changed point_size_min=2 smallest points still clearly visible, including fill color. default p_cutoff=1e-6 changed p_cutoff=1e-10 mem_gene_path_heatmap() default p_cutoff=1e-6 changed p_cutoff=1e-10","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-76-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.76.900","text":"multiEnrichMap() Edge case geneHitList supplied list signed values, directional hit list used venndir::venndir(). get recognized, converted using numeric values rather using names values. preferred option supply geneHitIM signed data, however now works signed hit list well.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-75-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.75.900","text":"importIPAenrichment() New arguments handle forward-slash delimited gene symbols used IPA indicate two genes consider one biomolecule purpose pathway enrichment. forward-slash “/” also delimiter user clusterProfiler object enrichResult causes genes break compatibility. new arguments represent workaround handle IPA data, downstream functions require changes. convert_ipa_slash=TRUE enables workaround, converts forward-slash “/” another delimiter. ipa_slash_sep=\":\" defines alternate delimiter use, default \":\" chosed interfere common delimiters used gene symbols, cause problems regular expressions, risk using \"|\". removeIgraphBlanks() throwing error size2 already defined igraph vertex attributes. size2 now calls default_igraph_values()$vertex$size2 use appropriate default value. related errors now caught avoided, relating steps avoid updating empty entries list vertex attributes, now properly ignores pie attributes previously empty, updates entries non-zero results. mem_gene_path_heatmap() Fixed longstanding errors trying split heatmap row column pieces data allow. current workaround almost complete, covers obvious cases requested number higher number columns rows. determine can one two clusters columns rows present. future.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"other-changes-0-0-75-900","dir":"Changelog","previous_headings":"","what":"other changes","title":"multienrichjam 0.0.75.900","text":"moved enrichDF2enrichResult() separate R file, future maintenance.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-to-existing-functions-0-0-74-900","dir":"Changelog","previous_headings":"","what":"updates to existing functions","title":"multienrichjam 0.0.74.900","text":"apply_cnet_direction() argument docs updated default colors col defined saturated default colors: c(\"blue\", \"grey80\", \"firebrick3\") argument default changed col_l_max=80 accommodate higher \"grey80\" middle color. mem_legend() new argument pt.lwd=2 control line width open circles, used do_direction=TRUE. previous alternative define par(lwd=2) prior calling mem_legend(), setting par(lwd=1) afterwards. directional_colors use default colors used apply_cnet_direction(); now includes \"change\" specific legend entry.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-73-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.73.900","text":"Fixed errors rendering igraph nodes shape=\"circle\" called jam_igraph(), newer versions igraph R package expect new attribute vertex.frame.width (vertex.frame.lwd hoped). default_igraph_values() now defines vertex.frame.width vertex.frame.lwd. Note: vertex.frame.lwd likely removed package altogether, compliance igraph. However, proper testing making change. Bug rank_mem_clusters() created data.frame, specify stringsAsFactos=FALSE, fixed. Possibly similar bugs functions. Bug mem_plot_folio() mem_gene_path_heatmap() enrichment involves one gene, causing row_split row_title values incorrect. useful workflow, functions handle error edge case. apply_cnet_direction() now checks input argument cnet hitim make sure non-empty processing. theory happen, apparently enrichment results sparse possibly empty. jam_plot_igraph() internal function uses proper igraph::shapes(shape) instead previously internal list object igraph:::.igraph.shapes[[shape]].","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-72-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.72.900","text":"subset_mem() convenience function subset entire mem object sets (pathways) genes. subset internal incidence matrix objects consistency. approach become preferred approach display specific set pathways Cnet plot, calling subset_mem() mem2cnet(). mem_gene_path_heatmap() currently subsets mem data internally, consistency may call subset_mem() instead. arguments designed similar. get_igraph_layout() simple helper function retrieve define layout coordinates igraph object. logic process, makes sense put function.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-72-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.72.900","text":"jam_igraph(), jam_plot_igraph() recognizes new igraph attributes: vertex.label.fontsize, edge.label.fontsize. standard igraph attributes honored default igraph::plot.igraph() functions. vertex.label.fontsize specified font size points, font size used modification vertex.label.cex. vertex.label.fontsize value NA, default behavior used calculate font size, uses vertex.label.cex. Therefore vertex.label.fontsize can defined single node, long node values NA, one node font size adjusted specific fontsize. igraph labels drawn using text(), final exact font size calculated nodes: par(\"ps\") * par(\"cex\") * vertex.label.cex edges: par(\"ps\") * par(\"cex\") * edge.label.cex new argument label_fontsize_l used apply specific vertex.label.fontsize based upon node attribute values. example label_fontsize_l=list(nodeType=c(Gene=10, Set=14)) define Gene nodes fontsize 10, Set nodes fontsize 14. apply_cnet_direction() frame_blank=NULL passed argument, interpreted frame_blank=NA uses frame.color blank nodes. reorder_igraph_nodes(), reorderIgraphNodes() following change made default behavior, method reorders igraph nodes color/border/name affected. Nodes default sorted left-right nodes nodeset less 25% x-span (width) compared y-span (height), otherwise nodes sorted top-bottom. direction along axis respects original argument nodeSortBy, allow specific order based upon data, natural order per locale. new arguments orderByAspect aspectThreshold control sort left-right top-bottom. nodeset coordinate aspect ratio taller (25% higher y-span x-span) nodes sorted top-bottom, otherwise nodes sorted left-right.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-72-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.72.900","text":"mem2cnet() threw error certain custom input meet expected constraints. function updated prevent errors robust type issue. jam_mypie() called rendering shape=\"jampie\" nodes. Previously frame.lwd=0 frame.color=\"black\" small black border drawn around node. new behavior frame.lwd=0 replace color NA outer border drawn. reorder_igraph_nodes(), reorderIgraphNodes() Fixed bug nodesets argument always matched due truncating nodeset label 25 characters. Now nodeset label truncated.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-71-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.71.900","text":"mem_plot_folio() gene-pathway heatmap clustering, collapsed Cnet igraph created using pathway column clusters. pathway cluster nodes colorized based upon proportion enrichment cluster, however uses mem$enrichIMcolors default. function now applies statistical thresholds p_cutoff min_set_ct_each prior step resulting colors reflect thresholds. Help documentation updated include information.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-70-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.70.900","text":"shape.jampie.plot() Rare scenario using jampie nodes, vertex.pie.lty defined, default properly expanded vcount, causing error \"subscript bounds\" referencing vertex.pie.lty[[]]. Error caused missing node attribute \"pie\", now filled uniform values 1 based upon lengths(vertex.pie.color). scenario usually occurs trying create pie nodes outside “typical” scenarios, example manually assigning attributes populating necessary values.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-69-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.69.900","text":"color_edges_by_nodegroups() communities2nodegroups(), nodegroups2communities() conversion functions help interconvert igraph communities objects, nodegroups list node names. mem2emap() replacement enrichMapJam() converts mem output igraph object multienrichment features, pie nodes appropriate color fill, pie.border colored direction enrichIMdirection defined. default, resulting network community detection called, visualized boundaries around various nodes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-69-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.69.900","text":"mem_gene_path_heatmap(), mem_enrichment_heatmap() Updated pass raster_device ComplexHeatmap::Heatmap() work around temporary error \"magick\" package available, use_raster=TRUE, causes error rasterization. error resolved changing default raster device raster_device=\"agg_png\", although change requires \"ragg\" R package installed. change tests \"ragg\" available, passes raster_device=\"agg_png\". change affect scenarios. edge_bundle_nodegroups() New argument bundle_self=FALSE changes previous default behavior bundling nodes connect nodegroups. Previously, nodes connecting within nodegroup bundle center point cluster, minimize busy edge lines, makes difficult follow paths. make_point_hull() new arguments label, label_preset, label_adj_preset ussed define optional label appear outside resulting hull. label intended used network communities, allow label associated community relevant. Label placement experimental change future. Labels placed relative center layout, using angle layout center hull center. Labels placed outside rectangular bounding box point hull, text aligned outer edge based upon nearest 45 degree angle layout center hull center. apply_cnet_direction() default frame_lwd=0.2 changed frame_lwd=1. jam_igraph(), jam_plot_igraph() new argument bundle_self=FALSE passed jam_plot_igraph() ultimately edge_bundle_nodegroups(). TRUE edges connect nodegroup bundled nodegroup center. default FALSE bundle within nodegroup, edges bundled connecting two different nodegroups. shape.jampie.plot() now handles various combinations missing pie.lwd frame.lwd gracefully. mem2cnet() uses smaller node size default.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0068910","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.68.910","title":"multienrichjam 0.0.68.910","text":"turns graphics::polygon() properly closes polygon color fill non-zero alpha transparency. case, final “closed” corner correctly extended complete sharp corner edge using line join par(\"ljoin\"). color fill, completely transparent color fill, final corner completed, lines “ended” using par(\"lend\"), therefore sharp corner. workaround apply color alpha transparency 1 (scale 0 255), causes border drawn completely. However, rare graphical output devices support alpha transparency, chance rendering unintended opaque color fill. situation affect node shapes \"pie\" \"jampie\", designed draw outer border inner border, impact minimal. Shape \"coloredrectangle\" actually calls graphics::symbols() avoids issue. However, cases outer border expected drawn inner border, small risk rendering fill color fully opaque, covering inner border. One day probably need replace graphics::polygon() custom function polygon_with_borders() can handle inner outer border properly.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-to-existing-functions-0-0-68-910","dir":"Changelog","previous_headings":"","what":"updates to existing functions","title":"multienrichjam 0.0.68.910","text":"jam_mypie() used render igraph nodes shape=\"jampie\" modified use col=\"#FFFFFF01\" color fill polygon outer borders. adjust_polygon_border() examples modified show effect using col=NA col=\"#FFFFFF01\" polygon border rendering.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-68-910","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.68.910","text":"jam_mypie() shape.coloredrectangle.plot() updated force stringsAsFactors=FALSE creating data.frame objects, fixing weird color glitch examples shape.jampie.plot().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"notable-release-notes-0-0-68-900","dir":"Changelog","previous_headings":"","what":"Notable release notes","title":"multienrichjam 0.0.68.900","text":"igraph nodes shape=\"pie\" shape=\"jampie\" New attributes vertex.frame.lwd vertex.pie.lwd customize respective line widths node borders. attributes require using jam_igraph() shape=\"pie\", require using vertex.shape=\"jampie\" igraph::plot(). jam_igraph() now recommended complete replacement igraph::plot.igraph(). shape=\"jampie\" longer uses par(\"lwd\"), global change affected nodes, edges, plot features. Pie wedges use “inner borders” node, adjacent wedge borders overlap. Note inner border slightly overlaps interior node fill color, maintain consistent node sizes. frame.color uses “outer borders” node, borders overlap inner pie wedge borders. Nodes slightly adjusted smaller maintain consistent node sizes, default. apply_cnet_direction() slightly different logic pie frame colors, now assigns pie.lwd frame.lwd. removeIgraphBlanks() longer changes single-color shape=\"pie\" nodes shape=\"circle\" default. Changes suggested: Prefer jam_igraph() plot() igraph::plot.igraph(). Previous use par(\"lwd\") removed, replaced vertex.pie.lwd frame.lwd. Previously, single-color shape=\"pie\" shape=\"jampie\" nodes changed shape=\"circle\" removeIgraphBlanks(), however now stay shape=\"pie\" order maintain control line widths. igraph nodes shape=\"circle\" respect line width lwd. Use shape=\"circle\" changed vertex.shape=\"pie\" vertex.shape=\"jampie\", change affects nodeType=\"Gene\" moreso nodeType=\"Set\". Edges now clipped outer border nodes, helps using transparent node fill, using edge arrows. transparent nodes, edge previously shown connected center node (without clipping); similarly, edge arrows connected center node, effectively invisible certainly useful. However, cnet plots use edge arrows. edges appear identical previous rendering, however control points used bundling used determine edge connects node border. Thus, edges converge one node, bundled edges appear “merge together” one point connecting node. Previously nodes entered multiple angles, since connected interior center node, showed somewhat spacing based upon number edges. Future options may include retaining edge spacing based upon intermediate edge curvature edge, instead using control point edges, connection point central node slightly spaced . mem2cnet() memIM2cnet() changed default sizes. new defaults work well without adjustment. Node sizes 4x larger , calling downstream functions found always scaling nodes 4x larger. defaults: categorySize=20, geneSize=10 exactly 4x larger. Changes required: Change previous node_factor=4 node_factor=1 reproducibility; calling memIM2cnet() use arguments memIM2cnet(..., categorySize=5, geneSize=2.5). node label sizes also new defaults, similarly often applied label_factor=1.3 default. defaults: categoryCex=1.2, geneCex=0.9 adjusted previous categoryCex=0.9, geneCex=0.7. Changes required: Change label_factor label_factor_l 1, change call memIM2cnet(..., categoryCex=0.9, geneCex=0.7). igraph defaults changed using jam_igraph() plotting: vertex.label.family changed \"serif\" \"sans\". vertex.pie.border changed \"grey30\", igraph default values identical vertex.pie.color therefore visible. vertex.frame.lwd set 1, although value ignored igraph::plot.igraph() since uses par(\"lwd\") lines.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-dependencies-0-0-68-900","dir":"Changelog","previous_headings":"","what":"changes to dependencies","title":"multienrichjam 0.0.68.900","text":"arules removed dependency, two functions used class \"transactions\" rewritten remove requirement. previous version functions internal renamed : im2list() im2list_dep(); imSigned2list() imSigned2list_dep(). replacement functions return identical data. bezier added dependency generate edge bundling curves, head--head tests, -performed graphics::xspline(), produced identical results internal function ggforce::bezierPath(). Since bezier dependencies, addition feel small. jamba bumped version 0.0.88.900 important fix mixedSort(). colorjam bumped version 0.0.23.900 consistency.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-68-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.68.900","text":"adjust_cnet_nodeset() nodesets matched data, prints warning() returns input graph without change. Previously called stop(), problematic relevant workflows. removeIgraphBlanks() default argument changed pie_to_circle=FALSE single-item nodes shape=\"pie\" longer converted shape=\"circle\", since \"jampie\" nodes rendered much better. Haha. drawEllipse() now accepts vectorized input processes accordingly. New examples show varied features, many used igraph node shape=“ellipse”, used future. shape.jampie.plot(), shape.coloredrectangle.plot() functions draw custom igraph node shapes. shape=\"jampie\" draws pie node shape features vanilla igraph pie shape. pie wedge color filled pie.color, new optional inner border pie.border, pie.lwd. pie node overall can outer border defined frame.color frame.lwd. Also, pie nodes one color rendered circle, tiny internal line. shape=\"coloredrectangle\" draws series square boxes color fill coloredrect.color, optional inner border coloredrect.border. node overall can outer border defined frame.color, frame.lwd. functions now use inner outer borders via adjust_polygon_border(), various borders longer overlap. Previously, pie nodes drew wedge default graphics::polygon(), allows adjacent borders overlap 100%. Note nodes resized internally rendered node size equal across nodes even line widths (lwd) vary. idiosyncracies calling graphics::polygon() render pie wedges, since default allow vectorized plotting multiple polygons different line widths. Therefore shape=\"jampie\" renders line widths subsets identical line widths vectorized plotting, 10-100x faster plotting pie node individually done igraph::plot.igraph(). main potential issue seen partially overlapping nodes, potential display inconsistent overlap order. seems hopeless evaluate ggraph/tidygraph render visualizations, part due visualization rendering details. Also, ggraph/tidygraph store recognize many igraph visualization details igraph object, instead must encoded ggplot2 visualization options settings. Using ecosystem also require creating new ggplot2 node geom types, edge bundling functions. edge_bundle_nodegroups() update represents substantial refactor logic. Edge bundles can “invalid”, causes edges drawn linear edges nodes. criteria based upon series test cases common warranted fixed. Bundling usually occurs along line two nodegroup center points, calculated mean node coordinates nodegroup. Sometimes configuration center points, line , cause edge bundling become unnecessary ineffective. Co-linear control points: edge control points co-linear (along line), edge drawn line. criteria uses correlation 0.99 node control points edge. criteria affects indiviual edges, nodes nodegroup may rendered differently based upon specific position. problem clear one control point appears beyond path two nodes. non-linear edges, path curve around far side node. linear edges, appears line extends beyond one node optional arrow pointing backward. solution effectively draws edge, except clips edge first node boundary. nodegroups contain one node: one node group, nothing “bundle”. nodegroups identical center points, within small tolerance small percentage (0.5%) overall layout range. one nodegroup contains one node, nodegroup center point sits inside node boundary, bundling. Note criteria dependent upon node size rendering. problem edge spline control point inside node, spline curve inside node boundary, point back node border inside. Instead, edge drawn straight line node boundary outside. situation occurs one nodegroup fully surrounds central node, edges drawn directly central node. Edge bundling “midpoint” represents position along line two nodegroups. one nodegroup contains one node, line clipped node boundary, midpoint defined beginning outer edge node, toward center nodegroup. Note nodegroups contain one node, edge bundling already invalid (see ). Note nodegroup center sits inside node boundary, edge bundling also invalid. Therefore situation occurs one nodegroup center already outside border single-node nodegroup. Edges properly clipped using relevant igraph shape clip function. See igraph::shapes(), igraph::shapes(\"circle\")$clip specific examples. Edge labels rendered along edges follows: Linear edges encoded three coordinates: start, middle, end. Spline edges encoded using default graphics::xspline() returns 100 points default. Edge labels placed using coordinate distant start end node. linear edges, middle coordinate used, splines point near middle edge used. jam_igraph() function intended enhanced drop-replacement igraph::plot.igraph(). updated fulfill previously un-implemented features, fulfill promise replacement. New arguments, formally passed internal jam_plot_igraph(): mark.groups, mark.shape, mark.col, mark.border, mark.expand, mark.lwd, mark.lty, mark.smooth - arguments enable customize rendering nodes within clusters groups. Note new options: mark.lwd, mark.lty group border; mark.smooth control whether group polygon smoothed; mark.alpha control alpha transparency fill colors already defined. mark.expand now expected provided fraction plot layout range, close default behavior igraph since default rescale=TRUE forced layout ranges c(-1, 1). edge_bundling new option \"default\" try detect appropriate bunding method, based upon whether nodegroups, mark.groups defined, otherwise chooses \"connections\". Edge labels now rendered straight edges edge bundled edges. Edge labels can now accept multiple \"edge.family\" values, unlikely event multiple fonts plot. scenario cause error igraph::plot.igraph(). Edges properly clipped based upon igraph node shape. Internal adjustments node_factor, edge_factor, node_factor_l, edge_factor_l, label_factor, label_factor_l, label_dist_factor, label_dist_factor_l adjusted applied consistently. Undefined layout now properly calculated dynamically passed internal rendering function jam_plot_igraph(), values xlim,ylim now properly calculated.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-68-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.68.900","text":"make_cnet_test() create Cnet plot igraph data testing. adjust_polygon_border() defines inner outer borders polygons. Using inner borders allows adjacent polygons borders visible beside , without overlap. Using outer border allows display border around collection polygons without overlapping inner borders. Borders can layered inside outside existing borders. extensive examples showing various combinations borders. shape.jampie.clip(), shape.coloredrectangle.clip() Invisible user, however called igraph shapes \"jampie\" \"coloredrectangle\", respectively. functions now properly clip edges outer border node, including optional inner outer borders. shape.ellipse.clip() calculates optional rotation size ellipse adjusts edge endpoints accordingly. parse_igraph_plot_params() reproduces internal igraph function, called CRAN-approved R packages. default_igraph_values() reproduces internal igraph package data function call, CRAN compliance. jam_igraph_arrows() Mimics extends internal igraph:::igraph.Arrows() CRAN compliance. also optionally renders edge arrows, useful edge bundling function renders edges . get_igraph_arrow_mode() Another mimic internal igraph:::.get.arrow.mode() CRAN compliance.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0067900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.67.900","title":"multienrichjam 0.0.67.900","text":"added packages Suggests support new functions node layout, creation “correct” alpha hull polygons around points. alphahull - best implementation alpha hull. However, also requires sp package, heavy install advised retired 2023 favor sf. Slight risk alphahull package removed CRAN updated. Added Depends sf - lightweight replacement sp provides useful geometric functions. added primarily improves rendering pie node borders, resized exact line width determined time plotting pie nodes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-67-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.67.900","text":"make_point_hull() function active development, yet used functions, used next version. takes set points, makes alpha hull using alphahull::ashape(), expands using sf::st_buffer(). alphahull available, uses grDevices::chull() produce “ideal” shape additional R depedencies. also identical output igraph sf packages point hulls, strong precedent.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-67-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.67.900","text":"get_cnet_nodeset() Refactored greater speed, test cases 585 nodes, previous output took 1.28 seconds, new output takes 0.025 seconds, 50x speed increase. function called numerous places package, improvement also positively affect sorts functions. colors_from_list() sort algorithm improved cases color order ambiguous, including names tiebreak, using H,C,L values. Note: function used reorder_igraph_nodes() colorV explicitly provided, detecting probable order colors based upon order colors multi-color nodes. reorder_igraph_nodes() sort order updated efficient, use better logic following colorV defining colorV ad hoc. sorting \"color\" order defined colorV whenever colors aligned colorV, otherwise colors generally sorted hue \"H\" HCL space. Examples added show clearly different options ordering, including visual examples jam_mypie() rendering pie nodes. jam_mypie() Visual examples reorderIgraphNodes(), since jam_mypie() function internal igraph plotting scheme. function draws pie nodes vectorized fashion, properly drawing set pie polygons per node, appropriate borders defined pie.border frame.color. pie.border option drawn inside border polygon, adjacent Venn wedges entire outer border color visible without overlapping adjacent Venn wedge. enable, set: options(\"inner_pie_border\"=TRUE) frame.color also option drawn manner overlap pie.border, drawn just outside pie.border. cases frame.color drawn, pie.border radius adjusted exactly line width frame.color border, nodes always exactly sizes without frame.border. cases either pie.border frame.color, however possible point frame.color pie.border need applied, function can handle . Note process now draws three layers polygons: pie.color wedge fill color border pie.border wedge border color fill overall frame.color border color fill","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-66-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.66.900","text":"changed remove calls matrixStats::rowMaxs() matrixStats::rowMins() use base functions instead. change due several R crashes appear bugs somewhere upstream packages, also occurred Mac OSX, linux, scenarios involved R-3.6.1 likely gain support traction package authors. Understandable. mem_enrichment_heatmap() fixed potential bug: row_split passed via ... underlying ComplexHeatmap::Heatmap(), aligned order rownames(matrix) displayed heatmap, therefore rows split wrong visual order. row_split now formal argument, supplied vector, names(row_split) used align rownames(matrix) appropriately. reorderIgraphNodes() new argument nodesets define subset nodes reordering applied, may helpful nodes nodeset horizontal vertical. future, option may applied based upon aspect ratio nodes nodeset, nodeSortBy can defined list named nodesets. gets complicated. output verbose=TRUE minor added checks layout, ensuring matrix input layout match rownames(layout) V(g)$name, just case order identical. spread_igraph_labels() reverted apparent regression pass ... child function reorder_igraph_nodes(), therefore colorV color order properly used called manner. rotate_igraph_nodes() Change default argument center=\"origin\" center=\"median\". Rare change argument default, justified change fairly benign. Also new default consistent expectations, nodes “rotated place”. Practical outcome , nodes rotated exactly , coordinate range likely remain consistent, input layout already centered coordinates c(0, 0). new argument verbose=FALSE minor added checks layout, ensuring matrix input layout match rownames(layout) V(g)$name, just case order identical. rotate_coordinates() Change default argument center=\"origin\" center=\"median\". Rare change argument default, justified change fairly benign. Also new default consistent expectations, coordinates “rotated place”. Practical outcome , points rotated exactly , coordinate range likely remain consistent, especially input layout already centered coordinates c(0, 0).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0065900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.65.900","title":"multienrichjam 0.0.65.900","text":"Numerous changes made functions order improve overall Cnet plot layout experience. New functions developed offline focus layout specific Cnet plots, useful bipartite graphs general.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-65-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.65.900","text":"jam_igraph() jam_plot_igraph() new argument plot_grid=FALSE optionally plots grey grid background, units equal “percentage” across layout coordinate range. option intended help manually adjusting node node_set positions nudge_igraph_node() adjust_cnet_nodeset(), take units x,y form fraction overall layout dimensions. nudge_igraph_node() new argument nodes_xy intended help enter adjustments many nodes need nudged. list named node (e.g. gene), contains x,y coordinate adjustments. completely equivalent entering node, x, y three independent vectors, may easier use. argument default changed use_grep=TRUE use_grep=FALSE, nudging node \"\" also nudge every node contains \"\" \"\". rare change default argument value seems helpful avoid erroneous moves default. layout_with_qfr() new argument constrain takes character vector node names, ensures node coordinate positions properly configured constraints move iterative layout. new default behavior define init using current graph layout stored igraph::graph_attr(g, \"layout\"), instead using random circular initial layout. jam_mypie() internal function inner_pie_border new experimental argument inner_pie_border intended draw pie wedge border inside pie wedge shape, directly overlap border adjacent pie wedge shape. find polygon function R can draw borders inside edge polygon, surprising considering considerable effort draw GIS world maps R. adjacent borders directly overwritten, option borders displayed side--side along polygon edge. Seems like opportunity someone. nonetheless capability yet implemented, framework place released soon. mem_legend() new arguments do_directional, directional_column, directional_colors intended add new directional circles indicating - -regulation.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-65-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.65.900","text":"plot_layout_scale() plots grey grid background igraph plot indicating percentage units across range layout coordinates.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-64-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.64.900","text":"reorderIgraphNodes() argument sortAttributes now includes \"frame.color\" order include \"pie.border\" pie shape nodes, \"frame.color\" nodes overall. list2im() list2imSigned() new argument emptyValue control empty incidence entries appear, either zero 0, NA. update fixes rare issue missing enrichment P-values reported zero 0 instead 1 default. functions appear venndir package, however want make package dependent upon venndir just yet, remain now. venndir functions named: venndir::list2im_opt() venndir::list2im_value(). spread_igraph_labels() now uses sortAttributes=NULL default, NULL uses defaults reorderIgraphNodes(). Previously inconsistent defaults two functions. memIM2cnet() mem2cnet() new arguments geneIMdirection, enrichIMdirection used call new function apply_cnet_direction() colorize node borders default data available. mem_plot_folio() now calls memIM2cnet() longer edits colors , steps performed memIM2cnet(); longer calls removeIgraphBlanks(). multiEnrichMap() now applies exact colorV colors geneIMcolors without calling colorjam::matrix2heatColors() since process returned slightly darker colors default, little benefit. new argument geneHitIM intended allow directional hit matrix supplied, thus enabling features described , specifically colorized border Cnet igraph plots.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-64-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.64.900","text":"apply_cnet_direction() colorizes node border, pie.border, coloredrect.border based upon directionality, using geneIMdirection enrichIMdirection available. reorder_igraph_nodes() step one migrating function names away camelCase, toward snake_case. really new function, new function name. mem2cnet() similar rename memIM2cnet() mostly takes mem input instead memIM anyway.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-63-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.63.900","text":"mem_gene_path_heatmap() attribute \"caption\" formatted cleanly. New returned attribute \"draw_caption\" function draws caption bottom-right corner heatmap, mainly location least likely overlap heatmap labels. location style can customized needed. reorderIgraphNodes() argument sortAttributes updated include \"pie.border\" default sort order, future Cnet nodes also include border color direction change.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-62-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.62.900","text":"bumped dependency jamba 0.0.87.900 pick recent updates. mem_enrichment_heatmap() new argument cluster_rows control row clustering, specifically allow row clustering. new argument do_plot=TRUE honor do_plot=FALSE mem_plot_folio() mem_gene_path_heatmap() Now generates caption includes relevant clustering filtering parameters used, helpful reproduce original result. Caption returned attr(hm, \"caption\"). mem_plot_folio() passes do_plot mem_enrichment_heatmap() uses caption generated mem_gene_path_heatmap() returns gene-pathway heatmap gp_hm caption gp_hm_caption. caption relevant parameters define clusters represented subsequent Cnet plots. importIPAenrichment() new argument remove_blank_colnames=TRUE, previous behavior, new option disable behavior keep columns values c(NA, \"\"). found zScore sometimes reported entirely NA may useful keep, consistency enrichment results. edge_bundle_nodegroups() longer includes ... calling lines(), silence fair number harmless annoying warning messages. don’t need warning message everything, tysm.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-62-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.62.900","text":"reorderIgraphNodes() somehow broke recent igraph update, apparently return type longer coerced character vector, needs converted directly. mem_plot_folio() subsetCnetIgraph() impacted well. mem_plot_folio() modified call subsetCnetIgraph(), failing call, return full cnet_collapsed graph without subset. Messages printed review. edge_bundle_nodegroups() initial work allowing custom midpoints within node groups, allow defining custom midpoint x,y coordinates, may may two sets nodes. Implementation place yet, progress.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-61-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.61.900","text":"reorderIgraphNodes() updated improve consistency sorting different node properties, specifically allow sorting node fill, node border color(s). shape.jampie.plot() function used render node shape=\"pie\" jam_igraph(), optimized, vectorized method render nodes one shot, rather drawing () loop default. Drawing even 20 pie nodes substantially faster using shape.jampie.plot() compared default igraph function. Speed improved, method converting list polygon coordinates numeric vectors spaced NA much improved. can render pie.border pie wedge node shape=\"pie\" shape=\"jampie\". Note outer line may covered subsequent frame.color. Attribute pie.border expected list lengths(pie.border) equal lengths(pie). can render frame.color around full circle node shape=\"pie\" shape=\"jampie\". line may cover pie.border also drawn. Attribute frame.color expected length equal igraph::vcount(g) total number nodes, one frame.color value per node. recommended use one style node: pie.border=NA, frame.color=\"red\" pie.border=c(\"red\", \"gold\"), frame.color=NA Internal function jam_mypie() called shape.jampie.plot(), updated handle frame.color.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-60-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.60.900","text":"mem_plot_folio() default arguments changed: min_set_ct=1, previously 2 min_gene_ct=1, previously 2","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"minor-bug-fixes-0-0-60-900","dir":"Changelog","previous_headings":"","what":"minor bug fixes","title":"multienrichjam 0.0.60.900","text":"multiEnrichMap() verifying names(geneHitList) also matched names(enrichList), therefore mismatch cause downstream errors mem_plot_folio() related functions. issue now uses geneHitList names match.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0059900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.59.900","title":"multienrichjam 0.0.59.900","text":"added amap package dependency, provides amap::hcluster().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-59-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.59.900","text":"mem_plot_folio() verbosity reduced verbose=FALSE.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-enhancements-0-0-59-900","dir":"Changelog","previous_headings":"","what":"bug fixes, enhancements","title":"multienrichjam 0.0.59.900","text":"mem_gene_pathway_heatmap() now honors p_floor defining incidence matrix values used clustering weighted combined enrichment heatmap gene-pathway incidence matrix data. mem_gene_pathway_heatmap() throwing error supplying column_split default cluster_columns=TRUE. error caused creating dendrogram cluster_columns supplying ComplexHeatmap::Heatmap() character vector column_split, dendrogram/hclust cluster_columns. Instead allows passing function cluster_columns, also requires using custom data, since data used clustering weighted combination enrichment P-values across top heatmap, data inside heatmap. new default row_split column_split character define cluster_rows cluster_columns, respectively, function calls amap::hcluster() combined weighted heatmap respective annotation data matrices. mem_plot_folio() properly defining gene row cluster names mem_gene_pathway_heatmap(), leaving empty default instead assigning letters.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0058900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.58.900","title":"multienrichjam 0.0.58.900","text":"bumped dependency jamba (>= 0.0.84.900) retire call_fn_ellipsis()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-58-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.58.900","text":"topEnrichListBySource() topEnrichBySource() updated: nameColname handled properly, without relying upon \"Name\" colname, without relying upon rownames() enrichment data.frame. Now subset operations use values nameColname. Also rows enrichment data.frame values nameColname subset using subset(), means rare cases multiple rows might returned, input enrichment data name nameColname multiple rows. change intentional, order retain rows matching names, just first occurs. enrichList2geneHitList(): argument geneDelim default value, consistent multiEnrichMap()","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-58-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.58.900","text":"enrichList2IM() return data zero rows without error, although usually occurs error somewhere else (example input data).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"functions-removed-0-0-58-900","dir":"Changelog","previous_headings":"","what":"functions removed","title":"multienrichjam 0.0.58.900","text":"call_fn_ellipsis() moved jamba package version 0.0.84.900.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0057900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.57.900","title":"multienrichjam 0.0.57.900","text":"Issue #6 reported error using series enrichments subset contain z-score column name directionColname. Related, current approach ignored directionColname values NA. situations corrected, allow flexible mish-mash NA non-NA values, presence/absence directionColname enrichment input. Also related, mem_plot_folio() default enabling directionality via mem_enrichment_heatmap(mem, apply_direction=TRUE), therefore new argument mem_plot_folio() default apply_direction=NULL auto-detect whether directional non-zero non-NA values can used heatmap. Also, apply_direction can defined force issue.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-56-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.56.900","text":"Issue #7 reported error, traced back vignette. error caused passing arguments mem_plot_folio() overloading ..., arguments valid ComplexHeatmap::Heatmap(). fix: new function call_fn_ellipsis() passes arguments including ... another function, function arguments allow ... limits arguments ... arguments accepted function. Instead : x <- some_function(=1, b=2, ...) Use: x <- call_fn_ellipsis(some_function, =1, b=2, ...) mem_enrichment_heatmap() mem_gene_pathway_heatmap() updated use call_fn_ellipsis(). Another error noted vignette workflow, directionColname populated even enrichment data contained non-NA values, inconsistent find_colname() function enrich2IM(). situation corrected requiring one enrichment result contain non-NA value column. enrichList2df(), multiEnrichMap(), enrichList2IM() updated call find_colname() list enrichResult objects.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-56-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.56.900","text":"find_colname() can accept list object, expected contain list data.frame /enrichResult objects. enrichResult converted data.frame enrichResult@result, objects must contain colnames(x). require_non_na=TRUE test object, return max unique entries match pattern. entries contain matching colnames purposes multienrichjam.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-55-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.55.900","text":"multiEnrichMap() incorrectly populating empty gene counts default 1 instead 0. effect mainly filtering gene count, minimum usually never 1, however can cause issues point sizing particularly mem_enrichment_heatmap(). previous default 1 remnant using function generate matrix enrichment P-values.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-55-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.55.900","text":"enrichList2IM() argument default changed emptyValue=NA absence data populate incidence matrix, default cell value NA indicate available data. multiEnrichMap() updated supply specific emptyValue calls enrichList2IM(). cell_fun_bivariate() new argument type intended allow re-using function univariate color functions, heatmaps features can made consistently, specifically dotplot normal heatmap output, optionally labeling cells statistical values. mem_enrichment_heatmap() updated share common heatmap code bivariate univariate color gradients. One -product output raster format, typically issue pathway enrichment, since pathways represent 1,000 pathways. event, output probably rasterized (PNG, JPG) instead vector graphics (PDF, SVG). make_legend_bivariate() new argument digits used prevent displaying weird labels like 5.9999999998 instead display 6. jam_igraph() default argument changed edge_bundling=\"connections\" enable edge bundling default. can disabled edge_bundling=\"none\", although active edge connections can bundled.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-to-existing-functions-0-0-54-900","dir":"Changelog","previous_headings":"","what":"updates to existing functions","title":"multienrichjam 0.0.54.900","text":"mem_enrichment_heatmap() updated customize directional information heatmaps. Cell labels optionally displayed, defined show, display one z-score, -log10pvalue, gene count. Argument sets updated handle presence enrichIM enrichIMgeneCount enrichIMdirection - well future measurements prefix enrichIM. New argument min_count applies gene count filter dot plot output heatmap.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0053900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.53.900","title":"multienrichjam 0.0.53.900","text":"update mainly focuses implementing directionality available pathway enrichment data multiEnrichMap().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-53-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.53.900","text":"colorRamp2D() - implements bivariate color scale, case enrichment -log10pvalue color intensity, z-score color hue directionality: blue “inhibited”, gold “neutral”, red “activated”. display_colorRamp2D() - display color ramp defined colorRamp2D() cell_fun_bivariate() - define heatmap cell function uses color defined colorRamp2D(), optionally plots circle points, optional text labels make_legend_bivariate() - creates 2-D color ramp legend suitable ComplexHeatmap::draw(..., annotation_legend_list=x)","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-53-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.53.900","text":"mem_enrichment_heatmap() new argument apply_direction=TRUE enable bivariate colors, color intensity defined enrichment -log10 P-value, color hue defined z-score direction: blue = “inhibition” z-score <= -2 gold = “direction” z-score > -2 x score < 2 red = “activation” z-score >= 2 Points sized number genes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-52-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.52.900","text":"Moved functions .R file better organization: topEnrichListBySource() topEnrichBySource() new arguments directionColname define optional column name contains numeric values indicating direction pathway enrichment. values often form \"Activation z-score\", case IPA “Upstream Regulators”. Argument direction_cutoff refers absolute value required direction given “sign” . multiEnrichMap() new argument directionColname used determine directionality pathway enrichment, useful things like \"Activation z-score\", returned IPA “Upstream Regulators”. Output included mem$enrichIMdirection contains numeric values, NA values substituted 0 zero. values used near future, likely mem_enrichment_heatmap() indicate predicted direction impact particular pathways. Argument direction_cutoff passed topEnrichListBySource() optional filtering require least one pathway contain absolute direction score threshold. IPA z-score recommends threshold z=score >= 2 “activation” “inhibition”. Note many pathways z-score, applying threshold remove pathways downstream analysis. mem_enrichment_heatmap() new argument apply_direction direction_cutoff determine whether indicate direction exists, optionally applies threshold. Still testing currently. Note applying cutoff hide pathways whose numeric direction threshold. New argument gene_count_max apply max gene count threshold point size dot plot format. New argument legend_height control heatmap legend color bar height.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-51-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.51.900","text":"mem_gene_path_heatmap() now hide main enrichment colors color legends 8 combinations, prevent legend taking entire plot device space displaying heatmap. threshold configurable show_heatmap_legend=8. New arguments show_gene_legend, show_pathway_legend logical intended allow hiding color legends. minimalist style show main enrichment colors, used colors anyway. mem_enrichment_heatmap() updated default dotplot format properly controlled point sizes, legend point sizes. Previously two sizes independent required manual adjustment. current approach ensures legend point size exactly match heatmap dot plot point size. optional parameter cexCellnote display labels unless cexCellnote=0 case gene count labels hidden.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-50-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.50.900","text":"mem_legend() new argument inset passed legend(). Also function uses tryCatch() try pass ... arguments, fail tries without .... Fun.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"extended-function-help-text-0-0-49-900","dir":"Changelog","previous_headings":"","what":"extended function help text","title":"multienrichjam 0.0.49.900","text":"jam_igraph() drop-replacement igraph::plot.igraph(), options described much detail. brief: plots nodes vectorized substantially faster changes default rescale=FALSE maintains aspect ratio 1:1, layout coordinates rendered without distorting x- y-axis ranges optionally bundles edge connections, helps particularly large bipartite graphs (especially gene--pathway graphs.) allows bulk adjustment node size, label size, label distance node center.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-49-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.49.900","text":"mem_plot_folio() new argument edge_bundling=\"connections\" default bundle edges appropriate Cnet plots. Disable edge_bundling=\"none\". mem_enrichment_heatmap() new argument style=\"dotplot\" create dotplot styled heatmap, whose points sized proportional number genes involved enrichment. style development may require additional customization options setting max gene count point sizes.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-49-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.49.900","text":"mem_gene_path_heatmap() fixed bug enrichment names mangled data.frame(...), avoided using data.frame(check.names=FALSE, ...). Several functions updated include proper package prefix function calls: matrixStats::colMins() igraph::V() igraph::E() igraph::degree() igraph::components() igraph::vcount() igraph::neighbors() igraph::vertex_attr_names() igraph::list.graph.attributes() igraph::ego() igraph::set_graph_attr() igraph::graph_attr() affecting functions: subsetCnetIgraph() apply_nodeset_spacing() removeIgraphBlanks() removeIgraphSinglets() mem_find_overlap() spread_igraph_labels() subgraph_jam()","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-48-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.48.900","text":"mem_gene_path_heatmap() updated handle edge cases: gene_im_weight 0 1; enrich_im_weight 0 1 user-supplied cluster_rows cluster_columns colorize_by_gene colorize_by_gene logic changed convert integer matrix refers colors labels factor levels, helps user-defined clustering methods, also helps labeling color legend. new argument colramp user-defined color gradient. row_title longer assigned user-defined argument NULL. workaround helps edge case gene_im_weight=1 row_split forced limited number values regardless row_split integer value sent, thus causing row_title mismatch length. Fixed egregious type second part statement, called user supplies custom cluster function.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-47-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.47.900","text":"topEnrichBySource() correctly handling multiple sourceColnames values, instead using first value. bug corrected.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-47-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.47.900","text":"topEnrichBySource() topEnrichListBySource() now return enrichResult supplied enrichResult, instead coercing data.frame need converted back enrichResult. topEnrichBySource() topEnrichListBySource() argument default sourceColnames changed reflect usage R package msigdbr MSigDB gene set data, specifically sourceColnames=c(\"gs_cat\", \"gs_subcat\"). Similarly, default values removed curateFrom curateTo, since defaults imposed specific outcome. multiEnrichMap() default values topEnrichCurate* arguments changed NULL; default argument values changed topEnrichSources=c(\"gs_cat\", \"gs_subat\").","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-46-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.46.900","text":"mem_gene_path_heatmap() new argument rotate_heatmap=TRUE rotate heatmap layout pathway names displayed rows, genes displayed columns. still need example data use function document examples, show utility rotating gene-pathway heatmap.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-45-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.45.900","text":"color_edges_by_nodes() implemented twice (smh) older function renamed color_edges_by_nodes_deprecated(). older function blended colors using simpler approach avg_colors_by_list() took fast hue average; new function uses colorjam::blend_colors() uses red-yellow-blue additive color blending model. Honestly function color_edges_by_nodes() used much yet, likely used community detection, Cnet/community edge bundling. new color_edges_by_nodes() also applies alpha intermediate blended colors, retain relative weight colors blending step.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0044900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.44.900","title":"multienrichjam 0.0.44.900","text":"edge bundling update! new functions rapid development, represent potentially quite useful functions visualizing complex igraph networks, specifically Cnet plots Gene Set node types. general technique bundling edges two groups nodes relatively stable. details extent edges bundled, including visual display bundled edges, active evaluation development. far doesn’t seem take much improve output figure, compared using straight edges. near future, Cnet plots may default enable form edge bundling, Cnet plots fact motivating example. See pkgdown docs edge_bundle_nodegroups() visual examples using Karate network.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"current-issues-in-edge-bundling-0-0-44-900","dir":"Changelog","previous_headings":"","what":"current issues in edge bundling","title":"multienrichjam 0.0.44.900","text":"edge_bundle_nodegroups() core function, yet implement: edge clipping based upon igraph vertex shape, example using igraph:::.igraph.shapes[[\"circle\"]]$clip(). edge arrows, requires edge clipping proper usage, otherwise edge arrows underneath node shape . edge labels, implemented, except bundled edges definition much likely close effective labels. rarely use edge labels, target simplest thing works.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-igraph-edge-bundling-functions-0-0-44-900","dir":"Changelog","previous_headings":"","what":"new igraph edge bundling functions","title":"multienrichjam 0.0.44.900","text":"get_bipartite_nodeset() - general use function return nodes grouped identical node neighbors. situation usually happens rarely, except bipartite graphs often clusters nodes neighbors, especially common Cnet plot data. edge_bundle_bipartite() first edge bundling function, actually light wrapper around edge_bundle_nodegroups(). Bipartite bundling connects nodeset (defined neighbor nodes) neighbor node. edge_bundle_nodegroups() general edge bundling technique bundles edges node groups. node groups can defined relevant technique, typically community detection algorithm igraph::cluster_walktrap() several igraph::cluster_* functions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-igraph-functions-0-0-44-900","dir":"Changelog","previous_headings":"","what":"new igraph functions","title":"multienrichjam 0.0.44.900","text":"color_edges_by_nodes() simple function blends colors two nodes involved edge, using colorjam::blend_colors() since uses RYB color blending. optimized blends unique combinations colors.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-utility-functions-0-0-44-900","dir":"Changelog","previous_headings":"","what":"new utility functions","title":"multienrichjam 0.0.44.900","text":"deconcat_df2() necessary utility function “expands” data.frame one columns multiple delimited values. simply expands rows represent one individual value per row columns. function likely moved \"jamba\" package much broader use. handle_igraph_param_list() helper function jam_igraph() intended update node edge attributes bulk based upon another attribute. example “make Gene nodes small, Set nodes large.” labels, colors, etc.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"updates-to-existing-functions-0-0-44-900","dir":"Changelog","previous_headings":"","what":"updates to existing functions","title":"multienrichjam 0.0.44.900","text":"jam_igraph() new arguments: edge_bundling - \"nodegroups\", \"connections\" \"none\" argument enable edge bundling calling edge_bundle_nodegroups() get_bipartite_nodeset() needed. See examples. render_nodes,render_edges,render_nodelabels,render_nodegroups options skip various aspects igraph plot features, either save time, allow detailed visual layering. vectorized_node_shapes toggle vectorized node shape plotting one node shape igraph object. Note feature substantially faster, changes order nodes rendered, design. result, nodes drawn order shape, render bulk operation. nodes overlap, partially overlap, feature visibly change ordering nodes. general, speed still ideal, reducing node layout overlaps separate step.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-43-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.43.900","text":"adjust_cnet_nodeset() logic updated expand properly applying negative values compress spacing nodes node set. use relatively rare feasible. adjust_cnet_nodeset() argument set_nodes now optionally allows referring nodeset using name one node contained nodeset, convenience.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-43-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.43.900","text":"apply_nodeset_spacing() attempts automate process applying adjust_cnet_nodeset() subcluster nodes Cnet plot enforce minimum spacing nodes. Fruchterman-Reingold layout algorithm might offer minimum distance threshold, find . Incidentally, new function can also compress node spacing, might useful gene labels shown.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-42-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.42.900","text":"mem_plot_folio() much detailed help text, describing details clustering parameters, describing returned objects detail. mem_plot_folio() new argument do_plot=TRUE determines whether plot rendered, just returned plot object reviewed separately. mem_plot_folio() returned data now includes gene-pathway heatmap caption, descibes gene/set filtering criteria, row/column distance methods used clustering. Since arguments substantial effect pathway clusters, helpful keep information readily available. Similarly, cnet plots igraph objects store title graph attribute, accessible using graph_attr(cnet, \"title\"). mem_plot_folio() argument colorize_by_gene=TRUE now uses colorjam::blend_colors(). mem_gene_pathway_heatmap() tolerant '...' entries valid ComplexHeatmap::Heatmap(), order allow overloading '...' function arguments.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-42-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.42.900","text":"nudge_igraph_node() intended help move individual nodes igraph layout, useful adjusting nodes reduce label overlaps. get_cnet_nodeset() helper function get nodes nodeset, defined \"Gene\" nodes connect \"Set\" nodes. helpful looking Cnet plot, wanting easy access \"Gene\" nodes particular cluster nodes plot. adjust_cnet_nodeset() intended manipulate layout coordinates nodes nodeset, useful expand, shift, rotate nodes help visibility. adjust_cnet_set_relayout_gene() useful function complicated name. intended help move Set nodes Cnet igraph layout, re-positions Gene nodes keeping Set nodes fixed positions. rotate_igraph_layout() allows rotating igraph layout. can also reflect layout coordinates across one axes. also calls helper functions needed, spread_igraph_labels() reorderIgraphNodes(). rotate_coordinates() underlying function rotate coordinates, operates numeric matrix called rotate_igraph_layout(). next version include plot_cnet_heatmaps() creates nice Cnet cluster plots cluster corresponding expression heatmap displayed edge figure.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-41-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.41.900","text":"mem_plot_folio() returns NULL error Cnet collapse step, report error. Now least reports error. underlying cause case ComplexHeatmap accepting horizontal color legend orientation R-3.6.1 (grid package version 3.6.1) new unit arithmetic available grid 4.0.0+. Hiding color legend, using vertical color legend fixed issue.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-40-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.40.900","text":"collapse_mem_clusters() - fixed error using apply() matrix one row one column. subsetCnetIgraph() fixed issue Cnet igraph object internal layout, runs relayout_with_qfr() default.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-40-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.40.900","text":"mem_plot_folio() now returns clusters_mem list, includes pathway set names represented cluster shown gene-pathway incidence matrix heatmap.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-39-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.39.900","text":"cnetplot_internalJam() updated include \"nodeType\" node attribute, helps distinguish \"Gene\" \"Set\" nodes downstream operations. change helps address #5 hide gene labels Cnet plots.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-38-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.38.900","text":"Update address issue #4 enrichDF2enrichResult() new argument descriptionColname force resulting colname \"Description\" fit expectations enrichplot:::fortify.internal() requires df$Description. descriptionColname supplied, found input enrichDF warning issued describes problem.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"enhancements-0-0-38-900","dir":"Changelog","previous_headings":"","what":"enhancements","title":"multienrichjam 0.0.38.900","text":"heatmap_row_order() heatmap_column_order() now also work HeatmapList objects. default use first heatmap list, consistent heatmaps.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixed-0-0-37-900","dir":"Changelog","previous_headings":"","what":"bug fixed","title":"multienrichjam 0.0.37.900","text":"multiEnrichMap() argument subsetSets never implemented; existing arguments descriptionGrep nameGrep used similar insufficient purpose. subsetSets argument defines specific pathway names retain analysis, implemented topEnrichBySource() proxy topEnrichListBySource(). functions might better called subsetEnrichResult() subsetEnrichList(), rename functions.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"enhancements-0-0-37-900","dir":"Changelog","previous_headings":"","what":"enhancements","title":"multienrichjam 0.0.37.900","text":"mem_plot_folio() includes number rows (genes) columns (pathways) displayed gene-pathway incidence matrix heatmap.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixed-0-0-36-900","dir":"Changelog","previous_headings":"","what":"bug fixed","title":"multienrichjam 0.0.36.900","text":"enrichDF2enrichResult() updated fix #3, thanks @john-lee-johnson reporting. Issue arose enrichplot::cnetplot() expected enrichResult rownames equal values \"ID\" column enrichment data.frame.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-36-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.36.900","text":"multiEnrichMap() new argument min_count requires pathway contain least min_count genes order considered “hit”. filter mostly important used topEnrichN use top pathways – sort pathways take top topEnrichN number pathways also contain least min_count genes. topEnrichBySource() topEnrichListBySource() new arguments min_count, p_cutoff require pathways contain least min_count genes, higher p_cutoff enrichment P-Value. Previously functions took top pathways, regardless filters (applied later). change allows filters applied taking top topEnrichN pathways, mostly helps min_count greater 1 – sometimes pathways one gene involved enrichment statistically significant P-value, biologically relevant interpretation follow-experiments. topEnrichListBySource() filter applied enrichment list, pathways meeting criteria taken enrichment lists. pathway must present top topEnrichN entries meet p_cutoff min_count criteria retained functions.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-35-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.35.900","text":"mem_gene_path_heatmap() updated fix small issue min_set_ct_each requires least one enrichment min_set_ct_each genes. However, filter applied alongside p_cutoff – therefore pathways enough genes significantly enriched fulfilling criteria, along another enrichment significant. new behavior (expected) requires pathway meet min_set_ct_each p_cutoff thresholds enrichment order retained gene-pathway incidence matrix. mem_gene_path_heatmap() fixed edge case genes present multiple enrichments counted toward min_set_ct_each, count per gene.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-35-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.35.900","text":"mem_gene_path_heatmap() new arguments column_title, row_title allow custom cluster names, also carried Cnet cluster names needed. mem_gene_path_heatmap() updated handle row_split column_split arguments intuitively, allow row_split values FALSE,0,1 inactivate split completely. Previously possible turn split. mem_plot_folio() argument renamed pathway_row_split gene_row_split reflect intent argument accurately. change early function lifecycle broader use yet – better change now. Otherwise, future argument name changes occur without type backward compatibility. mem_gene_path_heatmap(), mem_enrichment_heatmap() mem_plot_folio() new arguments row_cex column_cex used adjust row column heatmap labels, helpful used auto-sized axis labels make minor adjustments. mem_enrichment_heatmap() updated make color ramp consistent mem_gene_path_heatmap(), color scale atop gene-pathway heatmap accurately reflects color scale used enrichment heatmap .","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-34-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.34.900","text":"mem_gene_path_heatmap() new argument colorize_by_gene=TRUE color heatmap body using blended colors geneIMcolors represents enrichments gene involved. default colorize_by_gene=FALSE instead colors heatmap body number enrichments, can confusing one enrichment colors also red. goal make visually apparent gene involved one enrichment, using color enrichment. feature still development testing. mem_gene_path_heatmap() changed argument name enrich_gene_weight enrich_im_weight, argument wider use. Added new argument gene_im_weight. arguments accurately reflect relative weight enrichment incidence matrix enrich_im_weight.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-33-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.33.900","text":"collapse_mem_clusters() updated new argument cluster_color_min_fraction help filter enrichment colors include resulting cnet cluster. intent represent colors number significant pathways threshold. example, cluster 10 pathways may one significant pathway given enrichment set – therefore enrichment color included cnet cluster colors.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-32-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.32.900","text":"mem_gene_pathway_heatmap() cleaned heatmap overall: left top annotations zero gap columns rows left top annotation legends discrete color bars; left always c(0,1); top uses -log10 integer steps. top annotation legend appends \"-log10P\" label, indicate color values based upon log10() transform enrichment P-value. color legend discrete color bar steps, indicating number enrichments gene involved","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-31-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.31.900","text":"mem_gene_pathway_heatmap() new argument enrich_gene_weight used adjust relative influence enrichment -log10 P-value gene incidence matrix column clustering. effect adjust much enrichment P-values, gene content, affects clusters. principle similar effects, sometimes helps favor gene incidence pathway enrichment.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-30-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.30.900","text":"mem_gene_pathway_heatmap() altered allow filtering pathways minimum number genes represented least one enrichment result. example, pathway may required least 4 genes, despite statistically significant enrichment P-value. new argument min_set_ct_each tests enrichment see one enough genes per pathway. two main effects filter: gene-pathway heatmap display fewer pathways; resulting Cnet plots pathways removed.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-29-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.29.900","text":"mem_plot_folio() new argument byCols passed along rank_mem_clusters(), used sort pathway names within Cnet cluster. default uses \"composite_rank\", sorts floor(-log10(pvalue)) highest number genes per pathway. floor() function effectively sorts order magnitude enrichment P-value, dropping details. obvious alternative \"minp_rank\" uses -log10(pvalue) directly, therefore effectively sort gene count since enrichment P-values rarely tie. experience, two pathways reasonably similar enrichment P-value (within one order magnitude 2.4e-5 3.5e-5) pathway genes usually interesting/relevant biological pathway.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-28-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.28.900","text":"im2list() imSigned2list() reciprocal functions list2im() list2imSigned(). new functions convert incidence matrix list, signed incidence matrix list, respectively. ’re notable ’re blazing fast testing, thanks efficient methods arules R package interconverting list compressed logical matrix, vice versa.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-28-900","dir":"Changelog","previous_headings":"","what":"changes to existing functions","title":"multienrichjam 0.0.28.900","text":"mem_enrichment_heatmap() modified use p_floor ceiling row hierarchical clustering, previously used ceiling=3 caused dendrogram height=0 enrichment results lower 0.001. mem_enrichment_heatmap() modified calculate matrix colors color_by_column=TRUE, colorjam::matrix2heatColors() can updated improved method. mem_plot_folio() now correctly honors p_floor.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0027900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.27.900","title":"multienrichjam 0.0.27.900","text":"Added new TODO.md file track new feature ideas.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-27-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.27.900","text":"colors_from_list() infers proper order colors list color vectors. called reorderIgraphNodes() attributes \"pie.color\" \"coloredrect.color\" contain subsets colors, proper order. function returns colors proper order. colors_from_list() takes list colors, returns unique colors, ordered overall order inferred list. internally called reorderIgraphNodes() argument colorV suppleid, since attribute \"pie.color\" can used infer correct order colors.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-27-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.27.900","text":"collapse_mem_clusters() now uses \"; \" delimiter \"set_names\" attribute, make easier distinguish individual pathway names. reorderIgraphNodes() refactored handle specific color order defined either argument colorV inferring correct order colors attributes \"pie.color\". change help order node colors consistent original input colors multiEnrichMap(), specifically argument colorV. reorderIgraphNodes() now example shows effects ordering pie nodes color.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-26-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.26.900","text":"collapse_mem_clusters() now includes cluster name default set_labels used display top n pathway names collapsed Cnet node. example \"Cluster : Aryl Hydrocarbons; Granzyme Signaling\". collapse_mem_clusters() arguments max_labels max_char_labels accept multiple values, recycled applied filter cluster. example max_labels=c(5,2) filter first cluster display 2 labels, second cluster display 5 labels.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-25-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.25.900","text":"Thanks simang5c function calls renameColumn() corrected jamba::renameColumn(), resolve issue #1. Also fixed several references jamba functions: nameVector(), nameVectorN(), makeNames(), printDebug(), mixedSortDF(), cPaste(), igrepHas(), provigrep(), vigrep(), unvigrep(), rbindList(), noiseFloor(), rmNA(), rmNULL(), normScale(), getColorRamp(), deg2rad(). Omg! many cases thought! (Package-building options import functions packages seem go far, imported functions appear contained new package seems misleading… Ah well.) Also made several small changes handle single-enrichment input multiEnrichMap(). still provides useful graphical benefits even one enrichment input.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-24-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.24.900","text":"multiEnrichMap() updated enable analysis one enrichment result. Testing whether downstream capabilities useful context one enrichment result.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-23-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.23.900","text":"Several functions additional jamba::printDebug() output verbose=TRUE. jam_plot_igraph() jam_igraph() new argument use_shadowText=TRUE enable jamba::shadowText() replace graphics::text() igraph text, affects node edge labels. goal make labels widely legible placed top light dark colors, common using dark colored nodes white background. jam_igraph() now tries harder respect pre-defined xlim ylim, using range layout coordinates mem_gene_path_heatmap() slightly adjusted number pathway clusters use based upon number columns gene-pathway matrix, slightly increasing number low number columns. mem_plot_folio() new argument pathway_column_split allows setting specific number pathway clusters. mem_plot_folio() argument do_which allows creating requested plots full sequence plots. function likely become core part analysis workflow: gene-pathway heatmap -> pathway clusters -> Cnet using pathway clusters","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-22-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.22.900","text":"shape.jampie.plot() provides new igraph vertex shape \"jampie\". complete clone default igraph shape \"pie\" except offers vectorized plotting, can substantially faster large igraph objects use \"pie\" nodes. jam_plot_igraph() similar clone igraph::plot.igraph() except uses vectorized plotting specifically multiple shapes igraph object. Formerly, node drawn individually substantially slower, especially igraph objects 100 nodes. also default converts shape \"pie\" \"jampie\" order use vectorized plotting via shape.jampie.plot() .","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-22-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.22.900","text":"jam_igraph() new argument plot_function allows use custom plot function, specifically use jam_plot_igraph().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"other-changes-0-0-22-900","dir":"Changelog","previous_headings":"","what":"Other changes","title":"multienrichjam 0.0.22.900","text":"Functions igraph vertex shapes moved new .R file, new function family \"jam igraph shapes\".","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-21-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.21.900","text":"grid_with_title() draws grid object title optional subtitle, allowing grid objects ComplexHeatmap::Heatmap objects, even multiple heatmaps. said, grid \"gTree\" object work.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-20-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.20.900","text":"mem_plot_folio() new function creates current recommended folio multienrichment plots: Enrichment P-value heatmap Gene-pathway heatmap – importantly pathway clustering Cnet using pathway clusters, collapsed cluster Cnet using pathway clusters, exemplar pathways per cluster Cnet using individual pathway cluster","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-20-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.20.900","text":"multiEnrichMap() now includes p_cutoff output, represents enrichment P-value threshold used analysis. cutoff useful making color gradients respect threshold required significant enrichment results, P-values meet threshold can colored white (background color.) mem_plot_folio() new argument (minor release) do_which help produce selected plot pages folio plots.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-19-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.19.900","text":"collapse_mem_clusters() intriguing new method simplifying numerous pathways, using pathway cluster mem_gene_pathway_heatmap(). cluster condensed one result, combining genes cluster. results surprisingly insightful, especially numerous pathways present per cluster. function also calls rank_mem_clusters(), ’s possible pick handful top pathways per cluster, relevant.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-18-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.18.900","text":"rank_mem_clusters() convenience function ranks pathways/sets within clusters, useful list clusters following mem_gene_pathway_heatmap(). makes easier rank pathways within cluster, potentially choosing one exemplar pathway represent cluster. function part effort streamline overall analysis workflow.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-18-900","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"multienrichjam 0.0.18.900","text":"Fixed small issue mem_gene_path_heatmap() properly applying min_gene_ct min_path_ct however check resulting data remove empty columns rows. change made.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-17-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.17.900","text":"color_edges_by_nodes() takes igraph, determines color node based upon shape (using avg_colors_from_list() shape \"pie\" \"coloredrectangle\"), creates average color two nodes, uses edge color.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-17-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.17.900","text":"jam_igraph() configurable arguments, form named lists. driving example label_factor_l=list(nodeType=c(Gene=0.01, Set=1)), apply label.cex*0.01 “Gene” nodes, label.cex*1.5 “Set” nodes. Similar arguments: node_factor_l apply node size, label_dist_factor_l apply label distance node center. shape.coloredrectangle.plot() updated fix small bug order rendering colored rectangles, somehow drawing frame fill colors, caused frames overlap appear transparent.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"multienrichjam-0016900","dir":"Changelog","previous_headings":"","what":"multienrichjam 0.0.16.900","title":"multienrichjam 0.0.16.900","text":"vignette updated use new functions, much cleaner overall workflow.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-16-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.16.900","text":"reorderIgraphNodes() uses new function avg_colors_by_list() create one color represent node, sort_colors() sort nodes color hue, instead previous behavior sorted hex color string. change affects attributes \"pie.color\", \"coloredrect.color\" \"color\". Recall function reorderIgraphNodes() intended help visually organize groups nodes colors, make easier tell many nodes color. avg_colors_by_list() now uses weighted.mean() based upon \"c\" channel (chroma, color saturation) order -weight effect grey colors, really hue. default weight grey 0.1, maximum value fully saturated colors 100. Blending \"green\" \"grey30\" yields slightly less saturated green, expected. subsetCnetIgraph() now includes convenience calls removeIgraphBlanks(), spread_igraph_labels(), reorderIgraphNodes(), relayout_with_qfr(). almost cases, creating subset Cnet necessitates new layout, therefore requires new node ordering (sorting groups equivalent nodes color), label orientation (angle used offset node label center node).","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-16-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.16.900","text":"sort_colors() order_colors() uses farver::encode_colour() function convert colors HCL, sorts hue, returns original sorted vector corresponding order, respectively. sorting colors inside data.frame, convert colors factor whose levels sort_colors(unique(colors)), order maintain ties multi-column sorting. apply_color_cap() imposes numeric range onto color channel vector list colors, using jamba::noiseFloor(). Values outside allowed range forced range. subgraph_jam() custom version igraph::induced_subgraph(), correctly handles subsetting graph layout graph subsetted. jam_igraph() custom igraph::plot() proper sizing rescale=FALSE, allowing better aspect ratios certain network layout coordinates. with_qfr() wrapper layout_with_qfr() returns layout specification object, use igraph::add_layout_() confusing workflow pattern expected.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-15-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.15.900","text":"multiEnrichMap() several updates improve robustness overall workflow.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-15-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.15.900","text":"heatmap_row_order() heatmap_column_order() provide enhanced output ComplexHeatmap::row_order(), mainly return actual rownames colnames data heatmap. useful data used heatmap filtered internal function.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-to-existing-functions-0-0-14-900","dir":"Changelog","previous_headings":"","what":"Changes to existing functions","title":"multienrichjam 0.0.14.900","text":"list2im() removed argument makeUnique underlying conversion matrix longer requires step, performance hit extremely large lists. argument keepCounts requirement maintain count entry per list. multiEnrichMap() now subsets geneIM gene incidence matrix match genes topEnrichN filtering applied. layout_with_qfr() now default use edge attribute \"weight\" weights argument calling qgraph::qgraph.layout.fruchtermanreingold(). importIPAenrichment() enhanced robust import conditions, specifically different variations missing IPA enrichment results. Also, empty colnames removed, help recognize proper identifier scenario.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-14-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.14.900","text":"enrichList2geneHitList() takes list enrichResult returns list genes represented enrichResult. Intended mainly internal use multiEnrichMap().","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-plotting-functions-0-0-13-900","dir":"Changelog","previous_headings":"","what":"New plotting functions","title":"multienrichjam 0.0.13.900","text":"mem_multienrichplot() allows customized enrichMap-style plotting igraph objects. Notably, can filter Jaccard overlap, overlap count – number genes involved overlap. otherwise lot overlaps involve one gene, best way build type network. relayout_with_qfr() light extension layout_with_qfr(), adds default calls removeIgraphBlanks(), spread_igraph_labels() help things look pretty. mem_legend() draws color legend corner figure, using colors defined multiEnrichMap() output.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"other-new-functions-0-0-13-900","dir":"Changelog","previous_headings":"","what":"Other new functions","title":"multienrichjam 0.0.13.900","text":"subset_igraph_components() subsets igraph based upon connected components – .e. distinct subclusters. memIM2cnet() takes pathway-gene incidence matrix produces Cnet plot igraph object. given output multiEnrichMap() also color nodes using gene enrichment incidence matrix colors. avg_colors_by_list() avg_angles() intended rapid color blending.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixed-0-0-11-900","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"multienrichjam 0.0.11.900","text":"subsetCnetGraph() fixed handle rare cases pathway set name identical one genes, happens IPA pathway analysis, “Upstream Regulators” output.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-10-900","dir":"Changelog","previous_headings":"","what":"New functions","title":"multienrichjam 0.0.10.900","text":"mem_gene_pathway_heatmap() wrapper ComplexHeatmap::Heatmap() takes output multiEnrichMap() produces heatmap styled similar pathway-gene incidence matrix. includes row column annotations help interpret results. mem_enrichment_heatmap() produces heatmap pathways enrichment P-values comparison. spread_igraph_labels() general use function igraph objects, takes igraph network associated layout, arranges igraph nodes angel opposite majority edges node. result arranges labels around outside network, typically away nodes. isn’t perfect, visually big step right direction. removeIgraphSinglets() simple function removes nodes edges. found manually enough times wanted something quick easy.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"enhancements-0-0-10-900","dir":"Changelog","previous_headings":"","what":"enhancements","title":"multienrichjam 0.0.10.900","text":"multiEnrichMap() now includes two new edge attributes MultiEnrichMap igraphs: overlap_count contains number shared genes two sets, overlap_max_pct contains max percent overlap two sets – based upon # overlapped divided smaller two sets. overlap_count useful optional edge label, show many genes involved. enrichDF2enrichResult() now forces \"setSize\" contain integer values, useful pathway size inferred something like gene ratio.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-10-900","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"multienrichjam 0.0.10.900","text":"multiEnrichMap() properly assigning colnames(memIM), although inferred rownames(enrichIM). bug .character() removes names character vector, conversion done enforce proper handling strsplit() gives unexpected results list may contain factor.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-9-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.9.900","text":"importIPAenrichment() longer calls commandline grep remove blank rows, now uses readLines() jamba::vigrep() select rows least one character.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-8-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.8.900","text":"Fixed several calls strsplit() failed sent factors, happens R options(\"stringsAsFactors\"=TRUE) default base R. Now calls strsplit() enforce .character() unless character type already enforced. Added numerous package prefixes functions, avoid importing package dependencies.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixes-0-0-7-900","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"multienrichjam 0.0.7.900","text":"topEnrichListBySource() topEnrichBySource() updated handle default colnames P-values, now including default colnames enrichResult objects c(\"pvalue\",\"padjust\"). sort columns found, warning message printed.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-7-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.7.900","text":"Added documentation multiEnrichMap() functions. Added vignette describing workflow starting Ingenuity IPA enrichment results.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-6-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.6.900","text":"importIPAenrichment() imports Ingenuity IPA enrichment results, default splitting enrichment table data.frame. curates colnames consistent downstream analyses. curateIPAcolnames() curate colnames IPA data, ensures values gene column consistently delimited. gsubs() similar base::gsub() except applies vector pattern-replacement operations order. function may moved \"jamba\" package. find_colname() helper function find colname given vector expected values, matched directly, case-insensitively, vector patterns match start, end, part colnames. default first matching value first successful method returned. Good matching c(“P-Value”, “pvalue”, “Pval”) topEnrichBySource() topEnrichListBySource() subset input pathway enrichment results taking top n result, making sure overall selected pathways retained enrichment tables.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-5-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.5.900","text":"list2imSigned() longer dependent upon input list x names, unique names.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"enhancements-0-0-5-900","dir":"Changelog","previous_headings":"","what":"enhancements","title":"multienrichjam 0.0.5.900","text":"isColorBlank() now handles list input, helpful applied igraph objects \"pie\" colors accessed list. removeIgraphBlanks() updated use vectorized logic \"pie\" vertex attributes.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"bug-fixed-0-0-4-900","dir":"Changelog","previous_headings":"","what":"bug fixed","title":"multienrichjam 0.0.4.900","text":"Fixed small issues fixSetLabels().","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-4-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.4.900","text":"Updated fixSetLabels() handle words kept uppercase, defaults pre-configured, e.g. “mRNA”.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-3-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.3.900","text":"removed mergeAllXY() unnestList() moved jamba package. Added corresponding version requirement jamba.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-2-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.2.900","text":"fixSetLabels() updated include wider set canonical pathway prefixes used MsigDB v6.1.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-2-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.2.900","text":"cnet2im() cnet2df() helper functions used convert Cnet igraph either incidence matrix, table summary useful extracting subsets pathways using various network descriptors. drawEllipse() shape.ellipse.plot() add igraph vertex shape “ellipse” whose shape controlled vertex.ellipse.ratio, 1 creates circular node.","code":""},{"path":[]},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"new-functions-0-0-1-900","dir":"Changelog","previous_headings":"","what":"new functions","title":"multienrichjam 0.0.1.900","text":"multiEnrichMap() workhorse core function, implementing full workflow pre-process results later inspection. enrichDF2enrichResult() converts data.frame enrichResult object used clusterProfiler DOSE. cnetplotJam() custom function create cnet plot igraph object. mergeAllXY() merges list data.frames keeping rows. unnestList() un-nests list lists, resulting flattened list. directly supports mergeAllXY() order provide simple list data.frame objects potentially nested list lists data.frame objects. enrichList2IM() converts list enrichResult objects (data.frames) indidence matrix gene rows pathway columns. enrichList2df() combines list enrichResult objects (data.frames) single data.frame, using union genes, best P-value. fixSetLabels() update pathway/gene set labels using small set logic. isColorBlank() checks color blank color, either comparison known colors, transparency, saturation/brightness. igraph2pieGraph() converts igraph one pie node shapes, optionally coloredrectangle node shapes. layout_with_qfrf() extension layout_with_qfr() returns function, therefore convenient use igraph::plot() custom arguments. removeIgraphBlanks() removes blank colors either pie coloredrectangle node shapes, thereby making non-blank colors easier see plots. subsetCnetIgraph() takes igraph Set Gene nodeType, subsets based upon fixed list Set Gene nodes, removing singlet disconnected nodes output.","code":""},{"path":"https://jmw86069.github.io/multienrichjam/news/index.html","id":"changes-0-0-1-900","dir":"Changelog","previous_headings":"","what":"changes","title":"multienrichjam 0.0.1.900","text":"added dplyr package dependencies. added DOSE package dependencies.","code":""}]
